/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the EmbedSettingsCardsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbedSettingsCardsInner{}

// EmbedSettingsCardsInner struct for EmbedSettingsCardsInner
type EmbedSettingsCardsInner struct {
	// The number of seconds for which the card appears.
	DisplayTime float32 `json:"display_time"`
	// The title of the card.
	Headline string `json:"headline"`
	// The UUID of the card.
	Id string `json:"id"`
	// The URL of the thumbnail for the card.
	ImageUrl string `json:"image_url"`
	// The description of the card.
	Teaser string `json:"teaser"`
	// The playback timestamp, given in seconds, when the card appears.
	Timecode float32 `json:"timecode"`
	// The URL of the card.
	Url string `json:"url"`
}

// NewEmbedSettingsCardsInner instantiates a new EmbedSettingsCardsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbedSettingsCardsInner(displayTime float32, headline string, id string, imageUrl string, teaser string, timecode float32, url string) *EmbedSettingsCardsInner {
	this := EmbedSettingsCardsInner{}
	this.DisplayTime = displayTime
	this.Headline = headline
	this.Id = id
	this.ImageUrl = imageUrl
	this.Teaser = teaser
	this.Timecode = timecode
	this.Url = url
	return &this
}

// NewEmbedSettingsCardsInnerWithDefaults instantiates a new EmbedSettingsCardsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbedSettingsCardsInnerWithDefaults() *EmbedSettingsCardsInner {
	this := EmbedSettingsCardsInner{}
	return &this
}

// GetDisplayTime returns the DisplayTime field value
func (o *EmbedSettingsCardsInner) GetDisplayTime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DisplayTime
}

// GetDisplayTimeOk returns a tuple with the DisplayTime field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsCardsInner) GetDisplayTimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayTime, true
}

// SetDisplayTime sets field value
func (o *EmbedSettingsCardsInner) SetDisplayTime(v float32) {
	o.DisplayTime = v
}

// GetHeadline returns the Headline field value
func (o *EmbedSettingsCardsInner) GetHeadline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Headline
}

// GetHeadlineOk returns a tuple with the Headline field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsCardsInner) GetHeadlineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Headline, true
}

// SetHeadline sets field value
func (o *EmbedSettingsCardsInner) SetHeadline(v string) {
	o.Headline = v
}

// GetId returns the Id field value
func (o *EmbedSettingsCardsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsCardsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EmbedSettingsCardsInner) SetId(v string) {
	o.Id = v
}

// GetImageUrl returns the ImageUrl field value
func (o *EmbedSettingsCardsInner) GetImageUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsCardsInner) GetImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageUrl, true
}

// SetImageUrl sets field value
func (o *EmbedSettingsCardsInner) SetImageUrl(v string) {
	o.ImageUrl = v
}

// GetTeaser returns the Teaser field value
func (o *EmbedSettingsCardsInner) GetTeaser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Teaser
}

// GetTeaserOk returns a tuple with the Teaser field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsCardsInner) GetTeaserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Teaser, true
}

// SetTeaser sets field value
func (o *EmbedSettingsCardsInner) SetTeaser(v string) {
	o.Teaser = v
}

// GetTimecode returns the Timecode field value
func (o *EmbedSettingsCardsInner) GetTimecode() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Timecode
}

// GetTimecodeOk returns a tuple with the Timecode field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsCardsInner) GetTimecodeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timecode, true
}

// SetTimecode sets field value
func (o *EmbedSettingsCardsInner) SetTimecode(v float32) {
	o.Timecode = v
}

// GetUrl returns the Url field value
func (o *EmbedSettingsCardsInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsCardsInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *EmbedSettingsCardsInner) SetUrl(v string) {
	o.Url = v
}

func (o EmbedSettingsCardsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbedSettingsCardsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["display_time"] = o.DisplayTime
	toSerialize["headline"] = o.Headline
	toSerialize["id"] = o.Id
	toSerialize["image_url"] = o.ImageUrl
	toSerialize["teaser"] = o.Teaser
	toSerialize["timecode"] = o.Timecode
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

type NullableEmbedSettingsCardsInner struct {
	value *EmbedSettingsCardsInner
	isSet bool
}

func (v NullableEmbedSettingsCardsInner) Get() *EmbedSettingsCardsInner {
	return v.value
}

func (v *NullableEmbedSettingsCardsInner) Set(val *EmbedSettingsCardsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbedSettingsCardsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbedSettingsCardsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbedSettingsCardsInner(val *EmbedSettingsCardsInner) *NullableEmbedSettingsCardsInner {
	return &NullableEmbedSettingsCardsInner{value: val, isSet: true}
}

func (v NullableEmbedSettingsCardsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbedSettingsCardsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
