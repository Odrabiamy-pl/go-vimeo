/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the DisabledVideoPropertiesEditPrivacy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisabledVideoPropertiesEditPrivacy{}

// DisabledVideoPropertiesEditPrivacy An object that represents the reason why privacy editing is disabled for the video.
type DisabledVideoPropertiesEditPrivacy struct {
	// The relative link to upgrade to privacy editing.
	EnableLink string `json:"enable_link"`
	// The path to the edit privacy interaction object in the video response.
	KeyPath string `json:"key_path"`
	// The capability required to activate privacy editing.  Option descriptions:  * `basic` - The user must have at least a Vimeo Basic account.  * `business` - The user must have at least a Vimeo Business account.  * `enterprise` - The user must have at least a Vimeo Enterprise account.  * `live_business` - The user must have at least a Vimeo Business Live account.  * `live_premium` - The user must have at least a Vimeo Premium account.  * `live_pro` - The user must have at least a Vimeo Pro Live account.  * `plus` - The user must have at least a Vimeo Plus account.  * `pro` - The user must have at least a Vimeo Pro account.  * `pro_unlimited` - The user must have at least a Vimeo Pro Unlimited account.  * `producer` - The user must have at least a Vimeo Producer account.
	MinTierForCapability string `json:"min_tier_for_capability"`
	// The reasons why privacy editing is disabled for the video.
	Reasons []DisabledVideoPropertiesEditPrivacyReasonsInner `json:"reasons"`
}

// NewDisabledVideoPropertiesEditPrivacy instantiates a new DisabledVideoPropertiesEditPrivacy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisabledVideoPropertiesEditPrivacy(enableLink string, keyPath string, minTierForCapability string, reasons []DisabledVideoPropertiesEditPrivacyReasonsInner) *DisabledVideoPropertiesEditPrivacy {
	this := DisabledVideoPropertiesEditPrivacy{}
	this.EnableLink = enableLink
	this.KeyPath = keyPath
	this.MinTierForCapability = minTierForCapability
	this.Reasons = reasons
	return &this
}

// NewDisabledVideoPropertiesEditPrivacyWithDefaults instantiates a new DisabledVideoPropertiesEditPrivacy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisabledVideoPropertiesEditPrivacyWithDefaults() *DisabledVideoPropertiesEditPrivacy {
	this := DisabledVideoPropertiesEditPrivacy{}
	return &this
}

// GetEnableLink returns the EnableLink field value
func (o *DisabledVideoPropertiesEditPrivacy) GetEnableLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnableLink
}

// GetEnableLinkOk returns a tuple with the EnableLink field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoPropertiesEditPrivacy) GetEnableLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableLink, true
}

// SetEnableLink sets field value
func (o *DisabledVideoPropertiesEditPrivacy) SetEnableLink(v string) {
	o.EnableLink = v
}

// GetKeyPath returns the KeyPath field value
func (o *DisabledVideoPropertiesEditPrivacy) GetKeyPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyPath
}

// GetKeyPathOk returns a tuple with the KeyPath field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoPropertiesEditPrivacy) GetKeyPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyPath, true
}

// SetKeyPath sets field value
func (o *DisabledVideoPropertiesEditPrivacy) SetKeyPath(v string) {
	o.KeyPath = v
}

// GetMinTierForCapability returns the MinTierForCapability field value
func (o *DisabledVideoPropertiesEditPrivacy) GetMinTierForCapability() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinTierForCapability
}

// GetMinTierForCapabilityOk returns a tuple with the MinTierForCapability field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoPropertiesEditPrivacy) GetMinTierForCapabilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinTierForCapability, true
}

// SetMinTierForCapability sets field value
func (o *DisabledVideoPropertiesEditPrivacy) SetMinTierForCapability(v string) {
	o.MinTierForCapability = v
}

// GetReasons returns the Reasons field value
func (o *DisabledVideoPropertiesEditPrivacy) GetReasons() []DisabledVideoPropertiesEditPrivacyReasonsInner {
	if o == nil {
		var ret []DisabledVideoPropertiesEditPrivacyReasonsInner
		return ret
	}

	return o.Reasons
}

// GetReasonsOk returns a tuple with the Reasons field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoPropertiesEditPrivacy) GetReasonsOk() ([]DisabledVideoPropertiesEditPrivacyReasonsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reasons, true
}

// SetReasons sets field value
func (o *DisabledVideoPropertiesEditPrivacy) SetReasons(v []DisabledVideoPropertiesEditPrivacyReasonsInner) {
	o.Reasons = v
}

func (o DisabledVideoPropertiesEditPrivacy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisabledVideoPropertiesEditPrivacy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enable_link"] = o.EnableLink
	toSerialize["key_path"] = o.KeyPath
	toSerialize["min_tier_for_capability"] = o.MinTierForCapability
	toSerialize["reasons"] = o.Reasons
	return toSerialize, nil
}

type NullableDisabledVideoPropertiesEditPrivacy struct {
	value *DisabledVideoPropertiesEditPrivacy
	isSet bool
}

func (v NullableDisabledVideoPropertiesEditPrivacy) Get() *DisabledVideoPropertiesEditPrivacy {
	return v.value
}

func (v *NullableDisabledVideoPropertiesEditPrivacy) Set(val *DisabledVideoPropertiesEditPrivacy) {
	v.value = val
	v.isSet = true
}

func (v NullableDisabledVideoPropertiesEditPrivacy) IsSet() bool {
	return v.isSet
}

func (v *NullableDisabledVideoPropertiesEditPrivacy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisabledVideoPropertiesEditPrivacy(val *DisabledVideoPropertiesEditPrivacy) *NullableDisabledVideoPropertiesEditPrivacy {
	return &NullableDisabledVideoPropertiesEditPrivacy{value: val, isSet: true}
}

func (v NullableDisabledVideoPropertiesEditPrivacy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisabledVideoPropertiesEditPrivacy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
