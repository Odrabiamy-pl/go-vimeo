/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the ToggleRleLowLatencyAlt1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToggleRleLowLatencyAlt1Request{}

// ToggleRleLowLatencyAlt1Request struct for ToggleRleLowLatencyAlt1Request
type ToggleRleLowLatencyAlt1Request struct {
	// Whether the event is low latency.
	LowLatency *bool `json:"low_latency,omitempty"`
}

// NewToggleRleLowLatencyAlt1Request instantiates a new ToggleRleLowLatencyAlt1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToggleRleLowLatencyAlt1Request() *ToggleRleLowLatencyAlt1Request {
	this := ToggleRleLowLatencyAlt1Request{}
	return &this
}

// NewToggleRleLowLatencyAlt1RequestWithDefaults instantiates a new ToggleRleLowLatencyAlt1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToggleRleLowLatencyAlt1RequestWithDefaults() *ToggleRleLowLatencyAlt1Request {
	this := ToggleRleLowLatencyAlt1Request{}
	return &this
}

// GetLowLatency returns the LowLatency field value if set, zero value otherwise.
func (o *ToggleRleLowLatencyAlt1Request) GetLowLatency() bool {
	if o == nil || IsNil(o.LowLatency) {
		var ret bool
		return ret
	}
	return *o.LowLatency
}

// GetLowLatencyOk returns a tuple with the LowLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToggleRleLowLatencyAlt1Request) GetLowLatencyOk() (*bool, bool) {
	if o == nil || IsNil(o.LowLatency) {
		return nil, false
	}
	return o.LowLatency, true
}

// HasLowLatency returns a boolean if a field has been set.
func (o *ToggleRleLowLatencyAlt1Request) HasLowLatency() bool {
	if o != nil && !IsNil(o.LowLatency) {
		return true
	}

	return false
}

// SetLowLatency gets a reference to the given bool and assigns it to the LowLatency field.
func (o *ToggleRleLowLatencyAlt1Request) SetLowLatency(v bool) {
	o.LowLatency = &v
}

func (o ToggleRleLowLatencyAlt1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToggleRleLowLatencyAlt1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LowLatency) {
		toSerialize["low_latency"] = o.LowLatency
	}
	return toSerialize, nil
}

type NullableToggleRleLowLatencyAlt1Request struct {
	value *ToggleRleLowLatencyAlt1Request
	isSet bool
}

func (v NullableToggleRleLowLatencyAlt1Request) Get() *ToggleRleLowLatencyAlt1Request {
	return v.value
}

func (v *NullableToggleRleLowLatencyAlt1Request) Set(val *ToggleRleLowLatencyAlt1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableToggleRleLowLatencyAlt1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableToggleRleLowLatencyAlt1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToggleRleLowLatencyAlt1Request(val *ToggleRleLowLatencyAlt1Request) *NullableToggleRleLowLatencyAlt1Request {
	return &NullableToggleRleLowLatencyAlt1Request{value: val, isSet: true}
}

func (v NullableToggleRleLowLatencyAlt1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToggleRleLowLatencyAlt1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


