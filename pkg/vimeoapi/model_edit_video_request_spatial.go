/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the EditVideoRequestSpatial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditVideoRequestSpatial{}

// EditVideoRequestSpatial struct for EditVideoRequestSpatial
type EditVideoRequestSpatial struct {
	// An array representing the 360 director timeline.
	DirectorTimeline []EditVideoRequestSpatialDirectorTimelineInner `json:"director_timeline,omitempty"`
	// The 360 field of view. This value must be between 30 and 90. The default is 50.
	FieldOfView *float32 `json:"field_of_view,omitempty"`
	// The 360 spatial projection.  Option descriptions:  * `cubical` - Use cubical projection.  * `cylindrical` - Use cylindrical projection.  * `dome` - Use dome projection.  * `equirectangular` - Use equirectangular projection.  * `pyramid` - Use pyramid projection.
	Projection *string `json:"projection,omitempty"`
	// The 360 spatial stereo format.  Option descriptions:  * `left-right` - Use left-right stereo.  * `mono` - Use monaural audio.  * `top-bottom` - Use top-bottom stereo.
	StereoFormat *string `json:"stereo_format,omitempty"`
}

// NewEditVideoRequestSpatial instantiates a new EditVideoRequestSpatial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditVideoRequestSpatial() *EditVideoRequestSpatial {
	this := EditVideoRequestSpatial{}
	return &this
}

// NewEditVideoRequestSpatialWithDefaults instantiates a new EditVideoRequestSpatial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditVideoRequestSpatialWithDefaults() *EditVideoRequestSpatial {
	this := EditVideoRequestSpatial{}
	return &this
}

// GetDirectorTimeline returns the DirectorTimeline field value if set, zero value otherwise.
func (o *EditVideoRequestSpatial) GetDirectorTimeline() []EditVideoRequestSpatialDirectorTimelineInner {
	if o == nil || IsNil(o.DirectorTimeline) {
		var ret []EditVideoRequestSpatialDirectorTimelineInner
		return ret
	}
	return o.DirectorTimeline
}

// GetDirectorTimelineOk returns a tuple with the DirectorTimeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestSpatial) GetDirectorTimelineOk() ([]EditVideoRequestSpatialDirectorTimelineInner, bool) {
	if o == nil || IsNil(o.DirectorTimeline) {
		return nil, false
	}
	return o.DirectorTimeline, true
}

// HasDirectorTimeline returns a boolean if a field has been set.
func (o *EditVideoRequestSpatial) HasDirectorTimeline() bool {
	if o != nil && !IsNil(o.DirectorTimeline) {
		return true
	}

	return false
}

// SetDirectorTimeline gets a reference to the given []EditVideoRequestSpatialDirectorTimelineInner and assigns it to the DirectorTimeline field.
func (o *EditVideoRequestSpatial) SetDirectorTimeline(v []EditVideoRequestSpatialDirectorTimelineInner) {
	o.DirectorTimeline = v
}

// GetFieldOfView returns the FieldOfView field value if set, zero value otherwise.
func (o *EditVideoRequestSpatial) GetFieldOfView() float32 {
	if o == nil || IsNil(o.FieldOfView) {
		var ret float32
		return ret
	}
	return *o.FieldOfView
}

// GetFieldOfViewOk returns a tuple with the FieldOfView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestSpatial) GetFieldOfViewOk() (*float32, bool) {
	if o == nil || IsNil(o.FieldOfView) {
		return nil, false
	}
	return o.FieldOfView, true
}

// HasFieldOfView returns a boolean if a field has been set.
func (o *EditVideoRequestSpatial) HasFieldOfView() bool {
	if o != nil && !IsNil(o.FieldOfView) {
		return true
	}

	return false
}

// SetFieldOfView gets a reference to the given float32 and assigns it to the FieldOfView field.
func (o *EditVideoRequestSpatial) SetFieldOfView(v float32) {
	o.FieldOfView = &v
}

// GetProjection returns the Projection field value if set, zero value otherwise.
func (o *EditVideoRequestSpatial) GetProjection() string {
	if o == nil || IsNil(o.Projection) {
		var ret string
		return ret
	}
	return *o.Projection
}

// GetProjectionOk returns a tuple with the Projection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestSpatial) GetProjectionOk() (*string, bool) {
	if o == nil || IsNil(o.Projection) {
		return nil, false
	}
	return o.Projection, true
}

// HasProjection returns a boolean if a field has been set.
func (o *EditVideoRequestSpatial) HasProjection() bool {
	if o != nil && !IsNil(o.Projection) {
		return true
	}

	return false
}

// SetProjection gets a reference to the given string and assigns it to the Projection field.
func (o *EditVideoRequestSpatial) SetProjection(v string) {
	o.Projection = &v
}

// GetStereoFormat returns the StereoFormat field value if set, zero value otherwise.
func (o *EditVideoRequestSpatial) GetStereoFormat() string {
	if o == nil || IsNil(o.StereoFormat) {
		var ret string
		return ret
	}
	return *o.StereoFormat
}

// GetStereoFormatOk returns a tuple with the StereoFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestSpatial) GetStereoFormatOk() (*string, bool) {
	if o == nil || IsNil(o.StereoFormat) {
		return nil, false
	}
	return o.StereoFormat, true
}

// HasStereoFormat returns a boolean if a field has been set.
func (o *EditVideoRequestSpatial) HasStereoFormat() bool {
	if o != nil && !IsNil(o.StereoFormat) {
		return true
	}

	return false
}

// SetStereoFormat gets a reference to the given string and assigns it to the StereoFormat field.
func (o *EditVideoRequestSpatial) SetStereoFormat(v string) {
	o.StereoFormat = &v
}

func (o EditVideoRequestSpatial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditVideoRequestSpatial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DirectorTimeline) {
		toSerialize["director_timeline"] = o.DirectorTimeline
	}
	if !IsNil(o.FieldOfView) {
		toSerialize["field_of_view"] = o.FieldOfView
	}
	if !IsNil(o.Projection) {
		toSerialize["projection"] = o.Projection
	}
	if !IsNil(o.StereoFormat) {
		toSerialize["stereo_format"] = o.StereoFormat
	}
	return toSerialize, nil
}

type NullableEditVideoRequestSpatial struct {
	value *EditVideoRequestSpatial
	isSet bool
}

func (v NullableEditVideoRequestSpatial) Get() *EditVideoRequestSpatial {
	return v.value
}

func (v *NullableEditVideoRequestSpatial) Set(val *EditVideoRequestSpatial) {
	v.value = val
	v.isSet = true
}

func (v NullableEditVideoRequestSpatial) IsSet() bool {
	return v.isSet
}

func (v *NullableEditVideoRequestSpatial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditVideoRequestSpatial(val *EditVideoRequestSpatial) *NullableEditVideoRequestSpatial {
	return &NullableEditVideoRequestSpatial{value: val, isSet: true}
}

func (v NullableEditVideoRequestSpatial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditVideoRequestSpatial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
