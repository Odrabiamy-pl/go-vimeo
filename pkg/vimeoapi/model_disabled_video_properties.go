/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the DisabledVideoProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisabledVideoProperties{}

// DisabledVideoProperties struct for DisabledVideoProperties
type DisabledVideoProperties struct {
	AddToCollection DisabledVideoPropertiesAddToCollection `json:"add_to_collection"`
	Download        DisabledVideoPropertiesDownload        `json:"download"`
	Duplicate       DisabledVideoPropertiesDuplicate       `json:"duplicate"`
	EditPrivacy     DisabledVideoPropertiesEditPrivacy     `json:"edit_privacy"`
	Embed           DisabledVideoPropertiesEmbed           `json:"embed"`
	EmbedPresets    DisabledVideoPropertiesEmbedPresets    `json:"embed_presets"`
}

// NewDisabledVideoProperties instantiates a new DisabledVideoProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisabledVideoProperties(addToCollection DisabledVideoPropertiesAddToCollection, download DisabledVideoPropertiesDownload, duplicate DisabledVideoPropertiesDuplicate, editPrivacy DisabledVideoPropertiesEditPrivacy, embed DisabledVideoPropertiesEmbed, embedPresets DisabledVideoPropertiesEmbedPresets) *DisabledVideoProperties {
	this := DisabledVideoProperties{}
	this.AddToCollection = addToCollection
	this.Download = download
	this.Duplicate = duplicate
	this.EditPrivacy = editPrivacy
	this.Embed = embed
	this.EmbedPresets = embedPresets
	return &this
}

// NewDisabledVideoPropertiesWithDefaults instantiates a new DisabledVideoProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisabledVideoPropertiesWithDefaults() *DisabledVideoProperties {
	this := DisabledVideoProperties{}
	return &this
}

// GetAddToCollection returns the AddToCollection field value
func (o *DisabledVideoProperties) GetAddToCollection() DisabledVideoPropertiesAddToCollection {
	if o == nil {
		var ret DisabledVideoPropertiesAddToCollection
		return ret
	}

	return o.AddToCollection
}

// GetAddToCollectionOk returns a tuple with the AddToCollection field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoProperties) GetAddToCollectionOk() (*DisabledVideoPropertiesAddToCollection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddToCollection, true
}

// SetAddToCollection sets field value
func (o *DisabledVideoProperties) SetAddToCollection(v DisabledVideoPropertiesAddToCollection) {
	o.AddToCollection = v
}

// GetDownload returns the Download field value
func (o *DisabledVideoProperties) GetDownload() DisabledVideoPropertiesDownload {
	if o == nil {
		var ret DisabledVideoPropertiesDownload
		return ret
	}

	return o.Download
}

// GetDownloadOk returns a tuple with the Download field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoProperties) GetDownloadOk() (*DisabledVideoPropertiesDownload, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Download, true
}

// SetDownload sets field value
func (o *DisabledVideoProperties) SetDownload(v DisabledVideoPropertiesDownload) {
	o.Download = v
}

// GetDuplicate returns the Duplicate field value
func (o *DisabledVideoProperties) GetDuplicate() DisabledVideoPropertiesDuplicate {
	if o == nil {
		var ret DisabledVideoPropertiesDuplicate
		return ret
	}

	return o.Duplicate
}

// GetDuplicateOk returns a tuple with the Duplicate field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoProperties) GetDuplicateOk() (*DisabledVideoPropertiesDuplicate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duplicate, true
}

// SetDuplicate sets field value
func (o *DisabledVideoProperties) SetDuplicate(v DisabledVideoPropertiesDuplicate) {
	o.Duplicate = v
}

// GetEditPrivacy returns the EditPrivacy field value
func (o *DisabledVideoProperties) GetEditPrivacy() DisabledVideoPropertiesEditPrivacy {
	if o == nil {
		var ret DisabledVideoPropertiesEditPrivacy
		return ret
	}

	return o.EditPrivacy
}

// GetEditPrivacyOk returns a tuple with the EditPrivacy field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoProperties) GetEditPrivacyOk() (*DisabledVideoPropertiesEditPrivacy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EditPrivacy, true
}

// SetEditPrivacy sets field value
func (o *DisabledVideoProperties) SetEditPrivacy(v DisabledVideoPropertiesEditPrivacy) {
	o.EditPrivacy = v
}

// GetEmbed returns the Embed field value
func (o *DisabledVideoProperties) GetEmbed() DisabledVideoPropertiesEmbed {
	if o == nil {
		var ret DisabledVideoPropertiesEmbed
		return ret
	}

	return o.Embed
}

// GetEmbedOk returns a tuple with the Embed field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoProperties) GetEmbedOk() (*DisabledVideoPropertiesEmbed, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Embed, true
}

// SetEmbed sets field value
func (o *DisabledVideoProperties) SetEmbed(v DisabledVideoPropertiesEmbed) {
	o.Embed = v
}

// GetEmbedPresets returns the EmbedPresets field value
func (o *DisabledVideoProperties) GetEmbedPresets() DisabledVideoPropertiesEmbedPresets {
	if o == nil {
		var ret DisabledVideoPropertiesEmbedPresets
		return ret
	}

	return o.EmbedPresets
}

// GetEmbedPresetsOk returns a tuple with the EmbedPresets field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoProperties) GetEmbedPresetsOk() (*DisabledVideoPropertiesEmbedPresets, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmbedPresets, true
}

// SetEmbedPresets sets field value
func (o *DisabledVideoProperties) SetEmbedPresets(v DisabledVideoPropertiesEmbedPresets) {
	o.EmbedPresets = v
}

func (o DisabledVideoProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisabledVideoProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["add_to_collection"] = o.AddToCollection
	toSerialize["download"] = o.Download
	toSerialize["duplicate"] = o.Duplicate
	toSerialize["edit_privacy"] = o.EditPrivacy
	toSerialize["embed"] = o.Embed
	toSerialize["embed_presets"] = o.EmbedPresets
	return toSerialize, nil
}

type NullableDisabledVideoProperties struct {
	value *DisabledVideoProperties
	isSet bool
}

func (v NullableDisabledVideoProperties) Get() *DisabledVideoProperties {
	return v.value
}

func (v *NullableDisabledVideoProperties) Set(val *DisabledVideoProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableDisabledVideoProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableDisabledVideoProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisabledVideoProperties(val *DisabledVideoProperties) *NullableDisabledVideoProperties {
	return &NullableDisabledVideoProperties{value: val, isSet: true}
}

func (v NullableDisabledVideoProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisabledVideoProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
