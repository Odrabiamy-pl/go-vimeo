/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VideoMetadataInteractionsWatched type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoMetadataInteractionsWatched{}

// VideoMetadataInteractionsWatched Information about removing this video from the user's list of watched videos.
type VideoMetadataInteractionsWatched struct {
	// Whether the user has watched the video.
	Added bool `json:"added"`
	// The time in ISO 8601 format when the user watched the video.
	AddedTime string `json:"added_time"`
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The API URI that resolves to the connection data.
	Uri string `json:"uri"`
}

type _VideoMetadataInteractionsWatched VideoMetadataInteractionsWatched

// NewVideoMetadataInteractionsWatched instantiates a new VideoMetadataInteractionsWatched object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoMetadataInteractionsWatched(added bool, addedTime string, options []string, uri string) *VideoMetadataInteractionsWatched {
	this := VideoMetadataInteractionsWatched{}
	this.Added = added
	this.AddedTime = addedTime
	this.Options = options
	this.Uri = uri
	return &this
}

// NewVideoMetadataInteractionsWatchedWithDefaults instantiates a new VideoMetadataInteractionsWatched object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoMetadataInteractionsWatchedWithDefaults() *VideoMetadataInteractionsWatched {
	this := VideoMetadataInteractionsWatched{}
	return &this
}

// GetAdded returns the Added field value
func (o *VideoMetadataInteractionsWatched) GetAdded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Added
}

// GetAddedOk returns a tuple with the Added field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsWatched) GetAddedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Added, true
}

// SetAdded sets field value
func (o *VideoMetadataInteractionsWatched) SetAdded(v bool) {
	o.Added = v
}

// GetAddedTime returns the AddedTime field value
func (o *VideoMetadataInteractionsWatched) GetAddedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddedTime
}

// GetAddedTimeOk returns a tuple with the AddedTime field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsWatched) GetAddedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddedTime, true
}

// SetAddedTime sets field value
func (o *VideoMetadataInteractionsWatched) SetAddedTime(v string) {
	o.AddedTime = v
}

// GetOptions returns the Options field value
func (o *VideoMetadataInteractionsWatched) GetOptions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsWatched) GetOptionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Options, true
}

// SetOptions sets field value
func (o *VideoMetadataInteractionsWatched) SetOptions(v []string) {
	o.Options = v
}

// GetUri returns the Uri field value
func (o *VideoMetadataInteractionsWatched) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsWatched) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *VideoMetadataInteractionsWatched) SetUri(v string) {
	o.Uri = v
}

func (o VideoMetadataInteractionsWatched) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoMetadataInteractionsWatched) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["added"] = o.Added
	toSerialize["added_time"] = o.AddedTime
	toSerialize["options"] = o.Options
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

func (o *VideoMetadataInteractionsWatched) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"added",
		"added_time",
		"options",
		"uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVideoMetadataInteractionsWatched := _VideoMetadataInteractionsWatched{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVideoMetadataInteractionsWatched)

	if err != nil {
		return err
	}

	*o = VideoMetadataInteractionsWatched(varVideoMetadataInteractionsWatched)

	return err
}

type NullableVideoMetadataInteractionsWatched struct {
	value *VideoMetadataInteractionsWatched
	isSet bool
}

func (v NullableVideoMetadataInteractionsWatched) Get() *VideoMetadataInteractionsWatched {
	return v.value
}

func (v *NullableVideoMetadataInteractionsWatched) Set(val *VideoMetadataInteractionsWatched) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoMetadataInteractionsWatched) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoMetadataInteractionsWatched) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoMetadataInteractionsWatched(val *VideoMetadataInteractionsWatched) *NullableVideoMetadataInteractionsWatched {
	return &NullableVideoMetadataInteractionsWatched{value: val, isSet: true}
}

func (v NullableVideoMetadataInteractionsWatched) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoMetadataInteractionsWatched) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


