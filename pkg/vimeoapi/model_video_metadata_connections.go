/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VideoMetadataConnections type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoMetadataConnections{}

// VideoMetadataConnections A list of resource URIs related to the video.
type VideoMetadataConnections struct {
	// Information about the video's ancestry, ordered from the direct parent folder to higher-level ancestors.
	AncestorPath []AncestorPath `json:"ancestor_path"`
	AvailableChannels VideoMetadataConnectionsAvailableChannels `json:"available_channels"`
	Comments VideoMetadataConnectionsComments `json:"comments"`
	Credits NullableVideoMetadataConnectionsCredits `json:"credits"`
	Likes VideoMetadataConnectionsLikes `json:"likes"`
	Ondemand VideoMetadataConnectionsOndemand `json:"ondemand"`
	Pictures VideoMetadataConnectionsPictures `json:"pictures"`
	Recommendations NullableVideoMetadataConnectionsRecommendations `json:"recommendations"`
	Related NullableVideoMetadataConnectionsRelated `json:"related"`
	ResourceCreatorTeamUser VideoMetadataConnectionsResourceCreatorTeamUser `json:"resource_creator_team_user"`
	Season VideoMetadataConnectionsSeason `json:"season"`
	TeamPermissions VideoMetadataConnectionsTeamPermissions `json:"team_permissions"`
	Texttracks VideoMetadataConnectionsTexttracks `json:"texttracks"`
	Trailer VideoMetadataConnectionsTrailer `json:"trailer"`
	UsersWithAccess VideoMetadataConnectionsUsersWithAccess `json:"users_with_access"`
	Versions VideoMetadataConnectionsVersions `json:"versions"`
}

type _VideoMetadataConnections VideoMetadataConnections

// NewVideoMetadataConnections instantiates a new VideoMetadataConnections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoMetadataConnections(ancestorPath []AncestorPath, availableChannels VideoMetadataConnectionsAvailableChannels, comments VideoMetadataConnectionsComments, credits NullableVideoMetadataConnectionsCredits, likes VideoMetadataConnectionsLikes, ondemand VideoMetadataConnectionsOndemand, pictures VideoMetadataConnectionsPictures, recommendations NullableVideoMetadataConnectionsRecommendations, related NullableVideoMetadataConnectionsRelated, resourceCreatorTeamUser VideoMetadataConnectionsResourceCreatorTeamUser, season VideoMetadataConnectionsSeason, teamPermissions VideoMetadataConnectionsTeamPermissions, texttracks VideoMetadataConnectionsTexttracks, trailer VideoMetadataConnectionsTrailer, usersWithAccess VideoMetadataConnectionsUsersWithAccess, versions VideoMetadataConnectionsVersions) *VideoMetadataConnections {
	this := VideoMetadataConnections{}
	this.AncestorPath = ancestorPath
	this.AvailableChannels = availableChannels
	this.Comments = comments
	this.Credits = credits
	this.Likes = likes
	this.Ondemand = ondemand
	this.Pictures = pictures
	this.Recommendations = recommendations
	this.Related = related
	this.ResourceCreatorTeamUser = resourceCreatorTeamUser
	this.Season = season
	this.TeamPermissions = teamPermissions
	this.Texttracks = texttracks
	this.Trailer = trailer
	this.UsersWithAccess = usersWithAccess
	this.Versions = versions
	return &this
}

// NewVideoMetadataConnectionsWithDefaults instantiates a new VideoMetadataConnections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoMetadataConnectionsWithDefaults() *VideoMetadataConnections {
	this := VideoMetadataConnections{}
	return &this
}

// GetAncestorPath returns the AncestorPath field value
func (o *VideoMetadataConnections) GetAncestorPath() []AncestorPath {
	if o == nil {
		var ret []AncestorPath
		return ret
	}

	return o.AncestorPath
}

// GetAncestorPathOk returns a tuple with the AncestorPath field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetAncestorPathOk() ([]AncestorPath, bool) {
	if o == nil {
		return nil, false
	}
	return o.AncestorPath, true
}

// SetAncestorPath sets field value
func (o *VideoMetadataConnections) SetAncestorPath(v []AncestorPath) {
	o.AncestorPath = v
}

// GetAvailableChannels returns the AvailableChannels field value
func (o *VideoMetadataConnections) GetAvailableChannels() VideoMetadataConnectionsAvailableChannels {
	if o == nil {
		var ret VideoMetadataConnectionsAvailableChannels
		return ret
	}

	return o.AvailableChannels
}

// GetAvailableChannelsOk returns a tuple with the AvailableChannels field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetAvailableChannelsOk() (*VideoMetadataConnectionsAvailableChannels, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailableChannels, true
}

// SetAvailableChannels sets field value
func (o *VideoMetadataConnections) SetAvailableChannels(v VideoMetadataConnectionsAvailableChannels) {
	o.AvailableChannels = v
}

// GetComments returns the Comments field value
func (o *VideoMetadataConnections) GetComments() VideoMetadataConnectionsComments {
	if o == nil {
		var ret VideoMetadataConnectionsComments
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetCommentsOk() (*VideoMetadataConnectionsComments, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comments, true
}

// SetComments sets field value
func (o *VideoMetadataConnections) SetComments(v VideoMetadataConnectionsComments) {
	o.Comments = v
}

// GetCredits returns the Credits field value
// If the value is explicit nil, the zero value for VideoMetadataConnectionsCredits will be returned
func (o *VideoMetadataConnections) GetCredits() VideoMetadataConnectionsCredits {
	if o == nil || o.Credits.Get() == nil {
		var ret VideoMetadataConnectionsCredits
		return ret
	}

	return *o.Credits.Get()
}

// GetCreditsOk returns a tuple with the Credits field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoMetadataConnections) GetCreditsOk() (*VideoMetadataConnectionsCredits, bool) {
	if o == nil {
		return nil, false
	}
	return o.Credits.Get(), o.Credits.IsSet()
}

// SetCredits sets field value
func (o *VideoMetadataConnections) SetCredits(v VideoMetadataConnectionsCredits) {
	o.Credits.Set(&v)
}

// GetLikes returns the Likes field value
func (o *VideoMetadataConnections) GetLikes() VideoMetadataConnectionsLikes {
	if o == nil {
		var ret VideoMetadataConnectionsLikes
		return ret
	}

	return o.Likes
}

// GetLikesOk returns a tuple with the Likes field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetLikesOk() (*VideoMetadataConnectionsLikes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Likes, true
}

// SetLikes sets field value
func (o *VideoMetadataConnections) SetLikes(v VideoMetadataConnectionsLikes) {
	o.Likes = v
}

// GetOndemand returns the Ondemand field value
func (o *VideoMetadataConnections) GetOndemand() VideoMetadataConnectionsOndemand {
	if o == nil {
		var ret VideoMetadataConnectionsOndemand
		return ret
	}

	return o.Ondemand
}

// GetOndemandOk returns a tuple with the Ondemand field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetOndemandOk() (*VideoMetadataConnectionsOndemand, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ondemand, true
}

// SetOndemand sets field value
func (o *VideoMetadataConnections) SetOndemand(v VideoMetadataConnectionsOndemand) {
	o.Ondemand = v
}

// GetPictures returns the Pictures field value
func (o *VideoMetadataConnections) GetPictures() VideoMetadataConnectionsPictures {
	if o == nil {
		var ret VideoMetadataConnectionsPictures
		return ret
	}

	return o.Pictures
}

// GetPicturesOk returns a tuple with the Pictures field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetPicturesOk() (*VideoMetadataConnectionsPictures, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pictures, true
}

// SetPictures sets field value
func (o *VideoMetadataConnections) SetPictures(v VideoMetadataConnectionsPictures) {
	o.Pictures = v
}

// GetRecommendations returns the Recommendations field value
// If the value is explicit nil, the zero value for VideoMetadataConnectionsRecommendations will be returned
func (o *VideoMetadataConnections) GetRecommendations() VideoMetadataConnectionsRecommendations {
	if o == nil || o.Recommendations.Get() == nil {
		var ret VideoMetadataConnectionsRecommendations
		return ret
	}

	return *o.Recommendations.Get()
}

// GetRecommendationsOk returns a tuple with the Recommendations field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoMetadataConnections) GetRecommendationsOk() (*VideoMetadataConnectionsRecommendations, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recommendations.Get(), o.Recommendations.IsSet()
}

// SetRecommendations sets field value
func (o *VideoMetadataConnections) SetRecommendations(v VideoMetadataConnectionsRecommendations) {
	o.Recommendations.Set(&v)
}

// GetRelated returns the Related field value
// If the value is explicit nil, the zero value for VideoMetadataConnectionsRelated will be returned
func (o *VideoMetadataConnections) GetRelated() VideoMetadataConnectionsRelated {
	if o == nil || o.Related.Get() == nil {
		var ret VideoMetadataConnectionsRelated
		return ret
	}

	return *o.Related.Get()
}

// GetRelatedOk returns a tuple with the Related field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoMetadataConnections) GetRelatedOk() (*VideoMetadataConnectionsRelated, bool) {
	if o == nil {
		return nil, false
	}
	return o.Related.Get(), o.Related.IsSet()
}

// SetRelated sets field value
func (o *VideoMetadataConnections) SetRelated(v VideoMetadataConnectionsRelated) {
	o.Related.Set(&v)
}

// GetResourceCreatorTeamUser returns the ResourceCreatorTeamUser field value
func (o *VideoMetadataConnections) GetResourceCreatorTeamUser() VideoMetadataConnectionsResourceCreatorTeamUser {
	if o == nil {
		var ret VideoMetadataConnectionsResourceCreatorTeamUser
		return ret
	}

	return o.ResourceCreatorTeamUser
}

// GetResourceCreatorTeamUserOk returns a tuple with the ResourceCreatorTeamUser field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetResourceCreatorTeamUserOk() (*VideoMetadataConnectionsResourceCreatorTeamUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceCreatorTeamUser, true
}

// SetResourceCreatorTeamUser sets field value
func (o *VideoMetadataConnections) SetResourceCreatorTeamUser(v VideoMetadataConnectionsResourceCreatorTeamUser) {
	o.ResourceCreatorTeamUser = v
}

// GetSeason returns the Season field value
func (o *VideoMetadataConnections) GetSeason() VideoMetadataConnectionsSeason {
	if o == nil {
		var ret VideoMetadataConnectionsSeason
		return ret
	}

	return o.Season
}

// GetSeasonOk returns a tuple with the Season field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetSeasonOk() (*VideoMetadataConnectionsSeason, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Season, true
}

// SetSeason sets field value
func (o *VideoMetadataConnections) SetSeason(v VideoMetadataConnectionsSeason) {
	o.Season = v
}

// GetTeamPermissions returns the TeamPermissions field value
func (o *VideoMetadataConnections) GetTeamPermissions() VideoMetadataConnectionsTeamPermissions {
	if o == nil {
		var ret VideoMetadataConnectionsTeamPermissions
		return ret
	}

	return o.TeamPermissions
}

// GetTeamPermissionsOk returns a tuple with the TeamPermissions field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetTeamPermissionsOk() (*VideoMetadataConnectionsTeamPermissions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamPermissions, true
}

// SetTeamPermissions sets field value
func (o *VideoMetadataConnections) SetTeamPermissions(v VideoMetadataConnectionsTeamPermissions) {
	o.TeamPermissions = v
}

// GetTexttracks returns the Texttracks field value
func (o *VideoMetadataConnections) GetTexttracks() VideoMetadataConnectionsTexttracks {
	if o == nil {
		var ret VideoMetadataConnectionsTexttracks
		return ret
	}

	return o.Texttracks
}

// GetTexttracksOk returns a tuple with the Texttracks field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetTexttracksOk() (*VideoMetadataConnectionsTexttracks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Texttracks, true
}

// SetTexttracks sets field value
func (o *VideoMetadataConnections) SetTexttracks(v VideoMetadataConnectionsTexttracks) {
	o.Texttracks = v
}

// GetTrailer returns the Trailer field value
func (o *VideoMetadataConnections) GetTrailer() VideoMetadataConnectionsTrailer {
	if o == nil {
		var ret VideoMetadataConnectionsTrailer
		return ret
	}

	return o.Trailer
}

// GetTrailerOk returns a tuple with the Trailer field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetTrailerOk() (*VideoMetadataConnectionsTrailer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trailer, true
}

// SetTrailer sets field value
func (o *VideoMetadataConnections) SetTrailer(v VideoMetadataConnectionsTrailer) {
	o.Trailer = v
}

// GetUsersWithAccess returns the UsersWithAccess field value
func (o *VideoMetadataConnections) GetUsersWithAccess() VideoMetadataConnectionsUsersWithAccess {
	if o == nil {
		var ret VideoMetadataConnectionsUsersWithAccess
		return ret
	}

	return o.UsersWithAccess
}

// GetUsersWithAccessOk returns a tuple with the UsersWithAccess field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetUsersWithAccessOk() (*VideoMetadataConnectionsUsersWithAccess, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsersWithAccess, true
}

// SetUsersWithAccess sets field value
func (o *VideoMetadataConnections) SetUsersWithAccess(v VideoMetadataConnectionsUsersWithAccess) {
	o.UsersWithAccess = v
}

// GetVersions returns the Versions field value
func (o *VideoMetadataConnections) GetVersions() VideoMetadataConnectionsVersions {
	if o == nil {
		var ret VideoMetadataConnectionsVersions
		return ret
	}

	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnections) GetVersionsOk() (*VideoMetadataConnectionsVersions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Versions, true
}

// SetVersions sets field value
func (o *VideoMetadataConnections) SetVersions(v VideoMetadataConnectionsVersions) {
	o.Versions = v
}

func (o VideoMetadataConnections) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoMetadataConnections) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ancestor_path"] = o.AncestorPath
	toSerialize["available_channels"] = o.AvailableChannels
	toSerialize["comments"] = o.Comments
	toSerialize["credits"] = o.Credits.Get()
	toSerialize["likes"] = o.Likes
	toSerialize["ondemand"] = o.Ondemand
	toSerialize["pictures"] = o.Pictures
	toSerialize["recommendations"] = o.Recommendations.Get()
	toSerialize["related"] = o.Related.Get()
	toSerialize["resource_creator_team_user"] = o.ResourceCreatorTeamUser
	toSerialize["season"] = o.Season
	toSerialize["team_permissions"] = o.TeamPermissions
	toSerialize["texttracks"] = o.Texttracks
	toSerialize["trailer"] = o.Trailer
	toSerialize["users_with_access"] = o.UsersWithAccess
	toSerialize["versions"] = o.Versions
	return toSerialize, nil
}

func (o *VideoMetadataConnections) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ancestor_path",
		"available_channels",
		"comments",
		"credits",
		"likes",
		"ondemand",
		"pictures",
		"recommendations",
		"related",
		"resource_creator_team_user",
		"season",
		"team_permissions",
		"texttracks",
		"trailer",
		"users_with_access",
		"versions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVideoMetadataConnections := _VideoMetadataConnections{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVideoMetadataConnections)

	if err != nil {
		return err
	}

	*o = VideoMetadataConnections(varVideoMetadataConnections)

	return err
}

type NullableVideoMetadataConnections struct {
	value *VideoMetadataConnections
	isSet bool
}

func (v NullableVideoMetadataConnections) Get() *VideoMetadataConnections {
	return v.value
}

func (v *NullableVideoMetadataConnections) Set(val *VideoMetadataConnections) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoMetadataConnections) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoMetadataConnections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoMetadataConnections(val *VideoMetadataConnections) *NullableVideoMetadataConnections {
	return &NullableVideoMetadataConnections{value: val, isSet: true}
}

func (v NullableVideoMetadataConnections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoMetadataConnections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


