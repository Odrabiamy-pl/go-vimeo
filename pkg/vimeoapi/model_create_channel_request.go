/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateChannelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateChannelRequest{}

// CreateChannelRequest struct for CreateChannelRequest
type CreateChannelRequest struct {
	// The description of the channel.
	Description *string `json:"description,omitempty"`
	// The link to access the channel. You can use a custom name in the URL in place of a numeric channel ID, as in `/channels/{url_custom}`.
	Link *string `json:"link,omitempty"`
	// The name of the channel.
	Name string `json:"name"`
	// The privacy level of the channel.  Option descriptions:  * `anybody` - Anyone can access the channel.  * `moderators` - Only moderators can access the channel.  * `user` - Only moderators and designated users can access the channel. 
	Privacy string `json:"privacy"`
}

type _CreateChannelRequest CreateChannelRequest

// NewCreateChannelRequest instantiates a new CreateChannelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateChannelRequest(name string, privacy string) *CreateChannelRequest {
	this := CreateChannelRequest{}
	this.Name = name
	this.Privacy = privacy
	return &this
}

// NewCreateChannelRequestWithDefaults instantiates a new CreateChannelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateChannelRequestWithDefaults() *CreateChannelRequest {
	this := CreateChannelRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateChannelRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateChannelRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateChannelRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateChannelRequest) SetDescription(v string) {
	o.Description = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *CreateChannelRequest) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateChannelRequest) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *CreateChannelRequest) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *CreateChannelRequest) SetLink(v string) {
	o.Link = &v
}

// GetName returns the Name field value
func (o *CreateChannelRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateChannelRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateChannelRequest) SetName(v string) {
	o.Name = v
}

// GetPrivacy returns the Privacy field value
func (o *CreateChannelRequest) GetPrivacy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value
// and a boolean to check if the value has been set.
func (o *CreateChannelRequest) GetPrivacyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Privacy, true
}

// SetPrivacy sets field value
func (o *CreateChannelRequest) SetPrivacy(v string) {
	o.Privacy = v
}

func (o CreateChannelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateChannelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	toSerialize["name"] = o.Name
	toSerialize["privacy"] = o.Privacy
	return toSerialize, nil
}

func (o *CreateChannelRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"privacy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateChannelRequest := _CreateChannelRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateChannelRequest)

	if err != nil {
		return err
	}

	*o = CreateChannelRequest(varCreateChannelRequest)

	return err
}

type NullableCreateChannelRequest struct {
	value *CreateChannelRequest
	isSet bool
}

func (v NullableCreateChannelRequest) Get() *CreateChannelRequest {
	return v.value
}

func (v *NullableCreateChannelRequest) Set(val *CreateChannelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateChannelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateChannelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateChannelRequest(val *CreateChannelRequest) *NullableCreateChannelRequest {
	return &NullableCreateChannelRequest{value: val, isSet: true}
}

func (v NullableCreateChannelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateChannelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


