/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the CreateLiveEventAlt1RequestInteractionToolsSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLiveEventAlt1RequestInteractionToolsSettings{}

// CreateLiveEventAlt1RequestInteractionToolsSettings The settings for the interaction tools.
type CreateLiveEventAlt1RequestInteractionToolsSettings struct {
	// Whether anonymous questions are disabled for the interaction tools settings.
	IsAnonymousQuestionsDisabled *bool `json:"is_anonymous_questions_disabled,omitempty"`
	// Whether the Q&A is moderated for the interaction tools settings.
	IsQnaModerated *bool `json:"is_qna_moderated,omitempty"`
}

// NewCreateLiveEventAlt1RequestInteractionToolsSettings instantiates a new CreateLiveEventAlt1RequestInteractionToolsSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLiveEventAlt1RequestInteractionToolsSettings() *CreateLiveEventAlt1RequestInteractionToolsSettings {
	this := CreateLiveEventAlt1RequestInteractionToolsSettings{}
	return &this
}

// NewCreateLiveEventAlt1RequestInteractionToolsSettingsWithDefaults instantiates a new CreateLiveEventAlt1RequestInteractionToolsSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLiveEventAlt1RequestInteractionToolsSettingsWithDefaults() *CreateLiveEventAlt1RequestInteractionToolsSettings {
	this := CreateLiveEventAlt1RequestInteractionToolsSettings{}
	return &this
}

// GetIsAnonymousQuestionsDisabled returns the IsAnonymousQuestionsDisabled field value if set, zero value otherwise.
func (o *CreateLiveEventAlt1RequestInteractionToolsSettings) GetIsAnonymousQuestionsDisabled() bool {
	if o == nil || IsNil(o.IsAnonymousQuestionsDisabled) {
		var ret bool
		return ret
	}
	return *o.IsAnonymousQuestionsDisabled
}

// GetIsAnonymousQuestionsDisabledOk returns a tuple with the IsAnonymousQuestionsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLiveEventAlt1RequestInteractionToolsSettings) GetIsAnonymousQuestionsDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAnonymousQuestionsDisabled) {
		return nil, false
	}
	return o.IsAnonymousQuestionsDisabled, true
}

// HasIsAnonymousQuestionsDisabled returns a boolean if a field has been set.
func (o *CreateLiveEventAlt1RequestInteractionToolsSettings) HasIsAnonymousQuestionsDisabled() bool {
	if o != nil && !IsNil(o.IsAnonymousQuestionsDisabled) {
		return true
	}

	return false
}

// SetIsAnonymousQuestionsDisabled gets a reference to the given bool and assigns it to the IsAnonymousQuestionsDisabled field.
func (o *CreateLiveEventAlt1RequestInteractionToolsSettings) SetIsAnonymousQuestionsDisabled(v bool) {
	o.IsAnonymousQuestionsDisabled = &v
}

// GetIsQnaModerated returns the IsQnaModerated field value if set, zero value otherwise.
func (o *CreateLiveEventAlt1RequestInteractionToolsSettings) GetIsQnaModerated() bool {
	if o == nil || IsNil(o.IsQnaModerated) {
		var ret bool
		return ret
	}
	return *o.IsQnaModerated
}

// GetIsQnaModeratedOk returns a tuple with the IsQnaModerated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLiveEventAlt1RequestInteractionToolsSettings) GetIsQnaModeratedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsQnaModerated) {
		return nil, false
	}
	return o.IsQnaModerated, true
}

// HasIsQnaModerated returns a boolean if a field has been set.
func (o *CreateLiveEventAlt1RequestInteractionToolsSettings) HasIsQnaModerated() bool {
	if o != nil && !IsNil(o.IsQnaModerated) {
		return true
	}

	return false
}

// SetIsQnaModerated gets a reference to the given bool and assigns it to the IsQnaModerated field.
func (o *CreateLiveEventAlt1RequestInteractionToolsSettings) SetIsQnaModerated(v bool) {
	o.IsQnaModerated = &v
}

func (o CreateLiveEventAlt1RequestInteractionToolsSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLiveEventAlt1RequestInteractionToolsSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsAnonymousQuestionsDisabled) {
		toSerialize["is_anonymous_questions_disabled"] = o.IsAnonymousQuestionsDisabled
	}
	if !IsNil(o.IsQnaModerated) {
		toSerialize["is_qna_moderated"] = o.IsQnaModerated
	}
	return toSerialize, nil
}

type NullableCreateLiveEventAlt1RequestInteractionToolsSettings struct {
	value *CreateLiveEventAlt1RequestInteractionToolsSettings
	isSet bool
}

func (v NullableCreateLiveEventAlt1RequestInteractionToolsSettings) Get() *CreateLiveEventAlt1RequestInteractionToolsSettings {
	return v.value
}

func (v *NullableCreateLiveEventAlt1RequestInteractionToolsSettings) Set(val *CreateLiveEventAlt1RequestInteractionToolsSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLiveEventAlt1RequestInteractionToolsSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLiveEventAlt1RequestInteractionToolsSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLiveEventAlt1RequestInteractionToolsSettings(val *CreateLiveEventAlt1RequestInteractionToolsSettings) *NullableCreateLiveEventAlt1RequestInteractionToolsSettings {
	return &NullableCreateLiveEventAlt1RequestInteractionToolsSettings{value: val, isSet: true}
}

func (v NullableCreateLiveEventAlt1RequestInteractionToolsSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLiveEventAlt1RequestInteractionToolsSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


