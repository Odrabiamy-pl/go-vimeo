/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the VideoMetadataConnectionsRecommendations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoMetadataConnectionsRecommendations{}

// VideoMetadataConnectionsRecommendations Information about the recommendations for the video.
type VideoMetadataConnectionsRecommendations struct {
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options,omitempty"`
	// The API URI that resolves to the connection data.
	Uri *string `json:"uri,omitempty"`
}

// NewVideoMetadataConnectionsRecommendations instantiates a new VideoMetadataConnectionsRecommendations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoMetadataConnectionsRecommendations() *VideoMetadataConnectionsRecommendations {
	this := VideoMetadataConnectionsRecommendations{}
	return &this
}

// NewVideoMetadataConnectionsRecommendationsWithDefaults instantiates a new VideoMetadataConnectionsRecommendations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoMetadataConnectionsRecommendationsWithDefaults() *VideoMetadataConnectionsRecommendations {
	this := VideoMetadataConnectionsRecommendations{}
	return &this
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *VideoMetadataConnectionsRecommendations) GetOptions() []string {
	if o == nil || IsNil(o.Options) {
		var ret []string
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnectionsRecommendations) GetOptionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *VideoMetadataConnectionsRecommendations) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []string and assigns it to the Options field.
func (o *VideoMetadataConnectionsRecommendations) SetOptions(v []string) {
	o.Options = v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *VideoMetadataConnectionsRecommendations) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadataConnectionsRecommendations) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *VideoMetadataConnectionsRecommendations) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *VideoMetadataConnectionsRecommendations) SetUri(v string) {
	o.Uri = &v
}

func (o VideoMetadataConnectionsRecommendations) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoMetadataConnectionsRecommendations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableVideoMetadataConnectionsRecommendations struct {
	value *VideoMetadataConnectionsRecommendations
	isSet bool
}

func (v NullableVideoMetadataConnectionsRecommendations) Get() *VideoMetadataConnectionsRecommendations {
	return v.value
}

func (v *NullableVideoMetadataConnectionsRecommendations) Set(val *VideoMetadataConnectionsRecommendations) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoMetadataConnectionsRecommendations) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoMetadataConnectionsRecommendations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoMetadataConnectionsRecommendations(val *VideoMetadataConnectionsRecommendations) *NullableVideoMetadataConnectionsRecommendations {
	return &NullableVideoMetadataConnectionsRecommendations{value: val, isSet: true}
}

func (v NullableVideoMetadataConnectionsRecommendations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoMetadataConnectionsRecommendations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
