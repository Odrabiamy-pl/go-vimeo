/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Portfolio type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Portfolio{}

// Portfolio struct for Portfolio
type Portfolio struct {
	// The time in ISO 8601 format when the portfolio was created.
	CreatedTime string `json:"created_time"`
	// The description of the portfolio.
	Description NullableString `json:"description"`
	// The link to the portfolio.
	Link string `json:"link"`
	Metadata PortfolioMetadata `json:"metadata"`
	// The time in ISO 8601 format when the portfolio's data was last modified.
	ModifiedTime string `json:"modified_time"`
	// The display name of the portfolio.
	Name string `json:"name"`
	// The default video sort order of the portfolio.  Option descriptions:  * `alphabetical` - The default sort order is alphabetical by name.  * `clips` - The default sort order is video creation date.  * `modified` - The default sort order is the order in which the videos were modified.  * `recent` - The default sort order is the order in which the videos were added. 
	Sort string `json:"sort"`
	// The canonical relative URI of the portfolio.
	Uri string `json:"uri"`
}

type _Portfolio Portfolio

// NewPortfolio instantiates a new Portfolio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortfolio(createdTime string, description NullableString, link string, metadata PortfolioMetadata, modifiedTime string, name string, sort string, uri string) *Portfolio {
	this := Portfolio{}
	this.CreatedTime = createdTime
	this.Description = description
	this.Link = link
	this.Metadata = metadata
	this.ModifiedTime = modifiedTime
	this.Name = name
	this.Sort = sort
	this.Uri = uri
	return &this
}

// NewPortfolioWithDefaults instantiates a new Portfolio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortfolioWithDefaults() *Portfolio {
	this := Portfolio{}
	return &this
}

// GetCreatedTime returns the CreatedTime field value
func (o *Portfolio) GetCreatedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *Portfolio) GetCreatedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *Portfolio) SetCreatedTime(v string) {
	o.CreatedTime = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Portfolio) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Portfolio) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Portfolio) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetLink returns the Link field value
func (o *Portfolio) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *Portfolio) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *Portfolio) SetLink(v string) {
	o.Link = v
}

// GetMetadata returns the Metadata field value
func (o *Portfolio) GetMetadata() PortfolioMetadata {
	if o == nil {
		var ret PortfolioMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *Portfolio) GetMetadataOk() (*PortfolioMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *Portfolio) SetMetadata(v PortfolioMetadata) {
	o.Metadata = v
}

// GetModifiedTime returns the ModifiedTime field value
func (o *Portfolio) GetModifiedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value
// and a boolean to check if the value has been set.
func (o *Portfolio) GetModifiedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedTime, true
}

// SetModifiedTime sets field value
func (o *Portfolio) SetModifiedTime(v string) {
	o.ModifiedTime = v
}

// GetName returns the Name field value
func (o *Portfolio) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Portfolio) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Portfolio) SetName(v string) {
	o.Name = v
}

// GetSort returns the Sort field value
func (o *Portfolio) GetSort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value
// and a boolean to check if the value has been set.
func (o *Portfolio) GetSortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sort, true
}

// SetSort sets field value
func (o *Portfolio) SetSort(v string) {
	o.Sort = v
}

// GetUri returns the Uri field value
func (o *Portfolio) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *Portfolio) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *Portfolio) SetUri(v string) {
	o.Uri = v
}

func (o Portfolio) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Portfolio) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["description"] = o.Description.Get()
	toSerialize["link"] = o.Link
	toSerialize["metadata"] = o.Metadata
	toSerialize["modified_time"] = o.ModifiedTime
	toSerialize["name"] = o.Name
	toSerialize["sort"] = o.Sort
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

func (o *Portfolio) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_time",
		"description",
		"link",
		"metadata",
		"modified_time",
		"name",
		"sort",
		"uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPortfolio := _Portfolio{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPortfolio)

	if err != nil {
		return err
	}

	*o = Portfolio(varPortfolio)

	return err
}

type NullablePortfolio struct {
	value *Portfolio
	isSet bool
}

func (v NullablePortfolio) Get() *Portfolio {
	return v.value
}

func (v *NullablePortfolio) Set(val *Portfolio) {
	v.value = val
	v.isSet = true
}

func (v NullablePortfolio) IsSet() bool {
	return v.isSet
}

func (v *NullablePortfolio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortfolio(val *Portfolio) *NullablePortfolio {
	return &NullablePortfolio{value: val, isSet: true}
}

func (v NullablePortfolio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortfolio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


