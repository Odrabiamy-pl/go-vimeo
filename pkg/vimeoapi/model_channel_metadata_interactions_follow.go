/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChannelMetadataInteractionsFollow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelMetadataInteractionsFollow{}

// ChannelMetadataInteractionsFollow An action indicating if the authenticated user has followed this channel. This data requires a bearer token with the `private` scope.
type ChannelMetadataInteractionsFollow struct {
	// Whether the authenticated user has followed this channel. This data requires a bearer token with the `private` scope.
	Added bool `json:"added"`
	// The time in ISO 8601 format that the user followed this channel, or the null value if the user hasn't followed the channel. This data requires a bearer token with the `private` scope.
	AddedTime NullableString `json:"added_time"`
	// Whether the authenticated user is a moderator or subscriber. This data requires a bearer token with the `private` scope.  Option descriptions:  * `moderator` - The authenticated user is a moderator.  * `subscriber` - The authenticated user is a subscriber. 
	Type NullableString `json:"type"`
	// The URI for following or unfollowing this channel. PUT to this URI to follow the channel, or DELETE to this URI to unfollow the channel. This data requires a bearer token with the `private` scope.
	Uri string `json:"uri"`
}

type _ChannelMetadataInteractionsFollow ChannelMetadataInteractionsFollow

// NewChannelMetadataInteractionsFollow instantiates a new ChannelMetadataInteractionsFollow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelMetadataInteractionsFollow(added bool, addedTime NullableString, type_ NullableString, uri string) *ChannelMetadataInteractionsFollow {
	this := ChannelMetadataInteractionsFollow{}
	this.Added = added
	this.AddedTime = addedTime
	this.Type = type_
	this.Uri = uri
	return &this
}

// NewChannelMetadataInteractionsFollowWithDefaults instantiates a new ChannelMetadataInteractionsFollow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelMetadataInteractionsFollowWithDefaults() *ChannelMetadataInteractionsFollow {
	this := ChannelMetadataInteractionsFollow{}
	return &this
}

// GetAdded returns the Added field value
func (o *ChannelMetadataInteractionsFollow) GetAdded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Added
}

// GetAddedOk returns a tuple with the Added field value
// and a boolean to check if the value has been set.
func (o *ChannelMetadataInteractionsFollow) GetAddedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Added, true
}

// SetAdded sets field value
func (o *ChannelMetadataInteractionsFollow) SetAdded(v bool) {
	o.Added = v
}

// GetAddedTime returns the AddedTime field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ChannelMetadataInteractionsFollow) GetAddedTime() string {
	if o == nil || o.AddedTime.Get() == nil {
		var ret string
		return ret
	}

	return *o.AddedTime.Get()
}

// GetAddedTimeOk returns a tuple with the AddedTime field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelMetadataInteractionsFollow) GetAddedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddedTime.Get(), o.AddedTime.IsSet()
}

// SetAddedTime sets field value
func (o *ChannelMetadataInteractionsFollow) SetAddedTime(v string) {
	o.AddedTime.Set(&v)
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ChannelMetadataInteractionsFollow) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}

	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelMetadataInteractionsFollow) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// SetType sets field value
func (o *ChannelMetadataInteractionsFollow) SetType(v string) {
	o.Type.Set(&v)
}

// GetUri returns the Uri field value
func (o *ChannelMetadataInteractionsFollow) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *ChannelMetadataInteractionsFollow) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *ChannelMetadataInteractionsFollow) SetUri(v string) {
	o.Uri = v
}

func (o ChannelMetadataInteractionsFollow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelMetadataInteractionsFollow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["added"] = o.Added
	toSerialize["added_time"] = o.AddedTime.Get()
	toSerialize["type"] = o.Type.Get()
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

func (o *ChannelMetadataInteractionsFollow) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"added",
		"added_time",
		"type",
		"uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChannelMetadataInteractionsFollow := _ChannelMetadataInteractionsFollow{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChannelMetadataInteractionsFollow)

	if err != nil {
		return err
	}

	*o = ChannelMetadataInteractionsFollow(varChannelMetadataInteractionsFollow)

	return err
}

type NullableChannelMetadataInteractionsFollow struct {
	value *ChannelMetadataInteractionsFollow
	isSet bool
}

func (v NullableChannelMetadataInteractionsFollow) Get() *ChannelMetadataInteractionsFollow {
	return v.value
}

func (v *NullableChannelMetadataInteractionsFollow) Set(val *ChannelMetadataInteractionsFollow) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelMetadataInteractionsFollow) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelMetadataInteractionsFollow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelMetadataInteractionsFollow(val *ChannelMetadataInteractionsFollow) *NullableChannelMetadataInteractionsFollow {
	return &NullableChannelMetadataInteractionsFollow{value: val, isSet: true}
}

func (v NullableChannelMetadataInteractionsFollow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelMetadataInteractionsFollow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


