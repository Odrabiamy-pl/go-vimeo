/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the DeleteVodRegionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteVodRegionsRequest{}

// DeleteVodRegionsRequest struct for DeleteVodRegionsRequest
type DeleteVodRegionsRequest struct {
	// An array of country codes for the regions to remove.
	Countries []string `json:"countries,omitempty"`
}

// NewDeleteVodRegionsRequest instantiates a new DeleteVodRegionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVodRegionsRequest() *DeleteVodRegionsRequest {
	this := DeleteVodRegionsRequest{}
	return &this
}

// NewDeleteVodRegionsRequestWithDefaults instantiates a new DeleteVodRegionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVodRegionsRequestWithDefaults() *DeleteVodRegionsRequest {
	this := DeleteVodRegionsRequest{}
	return &this
}

// GetCountries returns the Countries field value if set, zero value otherwise.
func (o *DeleteVodRegionsRequest) GetCountries() []string {
	if o == nil || IsNil(o.Countries) {
		var ret []string
		return ret
	}
	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteVodRegionsRequest) GetCountriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Countries) {
		return nil, false
	}
	return o.Countries, true
}

// HasCountries returns a boolean if a field has been set.
func (o *DeleteVodRegionsRequest) HasCountries() bool {
	if o != nil && !IsNil(o.Countries) {
		return true
	}

	return false
}

// SetCountries gets a reference to the given []string and assigns it to the Countries field.
func (o *DeleteVodRegionsRequest) SetCountries(v []string) {
	o.Countries = v
}

func (o DeleteVodRegionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteVodRegionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Countries) {
		toSerialize["countries"] = o.Countries
	}
	return toSerialize, nil
}

type NullableDeleteVodRegionsRequest struct {
	value *DeleteVodRegionsRequest
	isSet bool
}

func (v NullableDeleteVodRegionsRequest) Get() *DeleteVodRegionsRequest {
	return v.value
}

func (v *NullableDeleteVodRegionsRequest) Set(val *DeleteVodRegionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVodRegionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVodRegionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVodRegionsRequest(val *DeleteVodRegionsRequest) *NullableDeleteVodRegionsRequest {
	return &NullableDeleteVodRegionsRequest{value: val, isSet: true}
}

func (v NullableDeleteVodRegionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVodRegionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


