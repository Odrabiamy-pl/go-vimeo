/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SegmentLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SegmentLine{}

// SegmentLine struct for SegmentLine
type SegmentLine struct {
	// The text from the segment line.
	Text string `json:"text"`
	// The speaker of the segment line.
	Voice NullableString `json:"voice"`
}

type _SegmentLine SegmentLine

// NewSegmentLine instantiates a new SegmentLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentLine(text string, voice NullableString) *SegmentLine {
	this := SegmentLine{}
	this.Text = text
	this.Voice = voice
	return &this
}

// NewSegmentLineWithDefaults instantiates a new SegmentLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentLineWithDefaults() *SegmentLine {
	this := SegmentLine{}
	return &this
}

// GetText returns the Text field value
func (o *SegmentLine) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *SegmentLine) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *SegmentLine) SetText(v string) {
	o.Text = v
}

// GetVoice returns the Voice field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SegmentLine) GetVoice() string {
	if o == nil || o.Voice.Get() == nil {
		var ret string
		return ret
	}

	return *o.Voice.Get()
}

// GetVoiceOk returns a tuple with the Voice field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SegmentLine) GetVoiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Voice.Get(), o.Voice.IsSet()
}

// SetVoice sets field value
func (o *SegmentLine) SetVoice(v string) {
	o.Voice.Set(&v)
}

func (o SegmentLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SegmentLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	toSerialize["voice"] = o.Voice.Get()
	return toSerialize, nil
}

func (o *SegmentLine) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"text",
		"voice",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSegmentLine := _SegmentLine{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSegmentLine)

	if err != nil {
		return err
	}

	*o = SegmentLine(varSegmentLine)

	return err
}

type NullableSegmentLine struct {
	value *SegmentLine
	isSet bool
}

func (v NullableSegmentLine) Get() *SegmentLine {
	return v.value
}

func (v *NullableSegmentLine) Set(val *SegmentLine) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentLine) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentLine(val *SegmentLine) *NullableSegmentLine {
	return &NullableSegmentLine{value: val, isSet: true}
}

func (v NullableSegmentLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


