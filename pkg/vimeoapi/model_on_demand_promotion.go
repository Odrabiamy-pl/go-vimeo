/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OnDemandPromotion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnDemandPromotion{}

// OnDemandPromotion struct for OnDemandPromotion
type OnDemandPromotion struct {
	// The type of access that the promotion grants.  Option descriptions:  * `default` - The promotion grants discounts on existing product offerings.  * `vip` - The promotion grants free access to On Demand content before it's released, or to access types that aren't part of the existing product offerings. 
	AccessType string `json:"access_type"`
	// The type of discount that the promotion provides.  Option descriptions:  * `dollars` - The promotion discounts a fixed amount from the full purchase price.  * `free` - The promotion discounts the full purchase price. When **access_type** is `vip`, **discount_type** is always `free`.  * `percent` - The promotion discounts a percentage of the full purchase price. 
	DiscountType string `json:"discount_type"`
	// Whether the promotion grants download access to On Demand content.
	Download bool `json:"download"`
	// The prefix string for batch codes, or the null value for single codes.
	Label NullableString `json:"label"`
	Metadata OnDemandPromotionMetadata `json:"metadata"`
	// When **discount_type** is `percent`, the percentage amount that is deducted from the product price.
	PercentOff float32 `json:"percent_off"`
	// The type of product to which the promotion can be applied. Only the `buy` and `rent` options are available when **access_type** is `vip`.  Option descriptions:  * `any` - The promotion can be applied to any product.  * `buy` - The promotion can be applied to a buyable single video.  * `buy_episode` - The promotion can be applied to a buyable single episode.  * `rent` - The promotion can be applied to a rentable single video.  * `rent_episode` - The promotion can be applied to a rentable single episode.  * `subscribe` - The promotion can be applied to a subscription. 
	ProductType string `json:"product_type"`
	// The amount of time that the user has access to the On Demand content after redeeming a promo code.  Option descriptions:  * `1_week` - Access lasts for one week.  * `1_year` - Access lasts for one year.  * `24_hour` - Access lasts for 24 hours.  * `30_days` - Access lasts for 30 days.  * `3_month` - Access lasts for three months.  * `48_hour` - Access lasts for 48 hours.  * `6_month` - Access lasts for six months.  * `72_hour` - Access lasts for 72 hours. 
	StreamPeriod NullableString `json:"stream_period"`
	// When **type** is `single`, the total number of times that the promotion can be used. When **type** is `batch` or `batch_prefix`, the total number of promo codes that have been generated.
	Total float32 `json:"total"`
	// The way in which the promotion generates promo codes.  Option descriptions:  * `batch` - The promotion provides a unique promo code for each user.  * `batch_prefix` - Like `batch`, except that all codes have a similar prefix string. _This option is deprecated, yet it may still appear for some users._  * `single` - The promotion provides a single promo code for all users. 
	Type string `json:"type"`
	// The promotion's canonical relative URI.
	Uri string `json:"uri"`
}

type _OnDemandPromotion OnDemandPromotion

// NewOnDemandPromotion instantiates a new OnDemandPromotion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnDemandPromotion(accessType string, discountType string, download bool, label NullableString, metadata OnDemandPromotionMetadata, percentOff float32, productType string, streamPeriod NullableString, total float32, type_ string, uri string) *OnDemandPromotion {
	this := OnDemandPromotion{}
	this.AccessType = accessType
	this.DiscountType = discountType
	this.Download = download
	this.Label = label
	this.Metadata = metadata
	this.PercentOff = percentOff
	this.ProductType = productType
	this.StreamPeriod = streamPeriod
	this.Total = total
	this.Type = type_
	this.Uri = uri
	return &this
}

// NewOnDemandPromotionWithDefaults instantiates a new OnDemandPromotion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnDemandPromotionWithDefaults() *OnDemandPromotion {
	this := OnDemandPromotion{}
	return &this
}

// GetAccessType returns the AccessType field value
func (o *OnDemandPromotion) GetAccessType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value
// and a boolean to check if the value has been set.
func (o *OnDemandPromotion) GetAccessTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessType, true
}

// SetAccessType sets field value
func (o *OnDemandPromotion) SetAccessType(v string) {
	o.AccessType = v
}

// GetDiscountType returns the DiscountType field value
func (o *OnDemandPromotion) GetDiscountType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value
// and a boolean to check if the value has been set.
func (o *OnDemandPromotion) GetDiscountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountType, true
}

// SetDiscountType sets field value
func (o *OnDemandPromotion) SetDiscountType(v string) {
	o.DiscountType = v
}

// GetDownload returns the Download field value
func (o *OnDemandPromotion) GetDownload() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Download
}

// GetDownloadOk returns a tuple with the Download field value
// and a boolean to check if the value has been set.
func (o *OnDemandPromotion) GetDownloadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Download, true
}

// SetDownload sets field value
func (o *OnDemandPromotion) SetDownload(v bool) {
	o.Download = v
}

// GetLabel returns the Label field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OnDemandPromotion) GetLabel() string {
	if o == nil || o.Label.Get() == nil {
		var ret string
		return ret
	}

	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnDemandPromotion) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// SetLabel sets field value
func (o *OnDemandPromotion) SetLabel(v string) {
	o.Label.Set(&v)
}

// GetMetadata returns the Metadata field value
func (o *OnDemandPromotion) GetMetadata() OnDemandPromotionMetadata {
	if o == nil {
		var ret OnDemandPromotionMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *OnDemandPromotion) GetMetadataOk() (*OnDemandPromotionMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *OnDemandPromotion) SetMetadata(v OnDemandPromotionMetadata) {
	o.Metadata = v
}

// GetPercentOff returns the PercentOff field value
func (o *OnDemandPromotion) GetPercentOff() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PercentOff
}

// GetPercentOffOk returns a tuple with the PercentOff field value
// and a boolean to check if the value has been set.
func (o *OnDemandPromotion) GetPercentOffOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PercentOff, true
}

// SetPercentOff sets field value
func (o *OnDemandPromotion) SetPercentOff(v float32) {
	o.PercentOff = v
}

// GetProductType returns the ProductType field value
func (o *OnDemandPromotion) GetProductType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value
// and a boolean to check if the value has been set.
func (o *OnDemandPromotion) GetProductTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductType, true
}

// SetProductType sets field value
func (o *OnDemandPromotion) SetProductType(v string) {
	o.ProductType = v
}

// GetStreamPeriod returns the StreamPeriod field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OnDemandPromotion) GetStreamPeriod() string {
	if o == nil || o.StreamPeriod.Get() == nil {
		var ret string
		return ret
	}

	return *o.StreamPeriod.Get()
}

// GetStreamPeriodOk returns a tuple with the StreamPeriod field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnDemandPromotion) GetStreamPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreamPeriod.Get(), o.StreamPeriod.IsSet()
}

// SetStreamPeriod sets field value
func (o *OnDemandPromotion) SetStreamPeriod(v string) {
	o.StreamPeriod.Set(&v)
}

// GetTotal returns the Total field value
func (o *OnDemandPromotion) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *OnDemandPromotion) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *OnDemandPromotion) SetTotal(v float32) {
	o.Total = v
}

// GetType returns the Type field value
func (o *OnDemandPromotion) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OnDemandPromotion) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OnDemandPromotion) SetType(v string) {
	o.Type = v
}

// GetUri returns the Uri field value
func (o *OnDemandPromotion) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *OnDemandPromotion) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *OnDemandPromotion) SetUri(v string) {
	o.Uri = v
}

func (o OnDemandPromotion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnDemandPromotion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_type"] = o.AccessType
	toSerialize["discount_type"] = o.DiscountType
	toSerialize["download"] = o.Download
	toSerialize["label"] = o.Label.Get()
	toSerialize["metadata"] = o.Metadata
	toSerialize["percent_off"] = o.PercentOff
	toSerialize["product_type"] = o.ProductType
	toSerialize["stream_period"] = o.StreamPeriod.Get()
	toSerialize["total"] = o.Total
	toSerialize["type"] = o.Type
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

func (o *OnDemandPromotion) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_type",
		"discount_type",
		"download",
		"label",
		"metadata",
		"percent_off",
		"product_type",
		"stream_period",
		"total",
		"type",
		"uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOnDemandPromotion := _OnDemandPromotion{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOnDemandPromotion)

	if err != nil {
		return err
	}

	*o = OnDemandPromotion(varOnDemandPromotion)

	return err
}

type NullableOnDemandPromotion struct {
	value *OnDemandPromotion
	isSet bool
}

func (v NullableOnDemandPromotion) Get() *OnDemandPromotion {
	return v.value
}

func (v *NullableOnDemandPromotion) Set(val *OnDemandPromotion) {
	v.value = val
	v.isSet = true
}

func (v NullableOnDemandPromotion) IsSet() bool {
	return v.isSet
}

func (v *NullableOnDemandPromotion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnDemandPromotion(val *OnDemandPromotion) *NullableOnDemandPromotion {
	return &NullableOnDemandPromotion{value: val, isSet: true}
}

func (v NullableOnDemandPromotion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnDemandPromotion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


