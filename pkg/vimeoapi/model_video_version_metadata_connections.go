/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the VideoVersionMetadataConnections type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoVersionMetadataConnections{}

// VideoVersionMetadataConnections struct for VideoVersionMetadataConnections
type VideoVersionMetadataConnections struct {
	Video VideoVersionMetadataConnectionsVideo `json:"video"`
}

// NewVideoVersionMetadataConnections instantiates a new VideoVersionMetadataConnections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoVersionMetadataConnections(video VideoVersionMetadataConnectionsVideo) *VideoVersionMetadataConnections {
	this := VideoVersionMetadataConnections{}
	this.Video = video
	return &this
}

// NewVideoVersionMetadataConnectionsWithDefaults instantiates a new VideoVersionMetadataConnections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoVersionMetadataConnectionsWithDefaults() *VideoVersionMetadataConnections {
	this := VideoVersionMetadataConnections{}
	return &this
}

// GetVideo returns the Video field value
func (o *VideoVersionMetadataConnections) GetVideo() VideoVersionMetadataConnectionsVideo {
	if o == nil {
		var ret VideoVersionMetadataConnectionsVideo
		return ret
	}

	return o.Video
}

// GetVideoOk returns a tuple with the Video field value
// and a boolean to check if the value has been set.
func (o *VideoVersionMetadataConnections) GetVideoOk() (*VideoVersionMetadataConnectionsVideo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Video, true
}

// SetVideo sets field value
func (o *VideoVersionMetadataConnections) SetVideo(v VideoVersionMetadataConnectionsVideo) {
	o.Video = v
}

func (o VideoVersionMetadataConnections) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoVersionMetadataConnections) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["video"] = o.Video
	return toSerialize, nil
}

type NullableVideoVersionMetadataConnections struct {
	value *VideoVersionMetadataConnections
	isSet bool
}

func (v NullableVideoVersionMetadataConnections) Get() *VideoVersionMetadataConnections {
	return v.value
}

func (v *NullableVideoVersionMetadataConnections) Set(val *VideoVersionMetadataConnections) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoVersionMetadataConnections) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoVersionMetadataConnections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoVersionMetadataConnections(val *VideoVersionMetadataConnections) *NullableVideoVersionMetadataConnections {
	return &NullableVideoVersionMetadataConnections{value: val, isSet: true}
}

func (v NullableVideoVersionMetadataConnections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoVersionMetadataConnections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


