/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the Video type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Video{}

// Video struct for Video
type Video struct {
	// An array of privacy settings supported for this video and the requesting user.
	AllowedPrivacies []string `json:"allowed_privacies"`
	App              ApiApp   `json:"app"`
	// Whether the video can be moved to a folder. This data requires a bearer token with the `private` scope.
	CanMoveToProject NullableBool `json:"can_move_to_project"`
	// The categories that the video belongs to.
	Categories []Category `json:"categories"`
	// The video's granular content rating.  Option descriptions:  * `advertisement` - The video contains advertisements.  * `drugs` - The video contains drug or alcohol use.  * `language` - The video contains profanity or sexually suggestive content.  * `nudity` - The video contains nudity.  * `safe` - The video is safe for all audiences.  * `unrated` - The video hasn't been rated.  * `violence` - The video contains violence.
	ContentRating []string `json:"content_rating"`
	// The video's high-level content rating class.  Option descriptions:  * `explicit` - The video contains one or more explicit content rating types.  * `safe` - The video contains no explicit content rating types.  * `unrated` - The video doesn't belong to a content rating class.
	ContentRatingClass string       `json:"content_rating_class"`
	Context            VideoContext `json:"context"`
	// The time in ISO 8601 format when the video was created.
	CreatedTime string `json:"created_time"`
	// The custom URL of the video.
	CustomUrl NullableString `json:"custom_url"`
	// A brief explanation of the video's content.
	Description NullableString `json:"description"`
	// A brief explanation of the video's content, formatted with HTML entities.
	DescriptionHtml NullableString `json:"description_html"`
	// A JSON representation of the description.
	DescriptionRich    *string                  `json:"description_rich,omitempty"`
	DisabledProperties *DisabledVideoProperties `json:"disabled_properties,omitempty"`
	// The list of downloadable files for the video. This data requires a bearer token with the `private` scope.
	Download []VideoFile `json:"download"`
	// The video's duration in seconds. A value of `0` indicates the duration hasn't been calculated yet.
	Duration    float32         `json:"duration"`
	EditSession *EditingSession `json:"edit_session,omitempty"`
	Embed       EmbedSettings   `json:"embed"`
	// The list of files for the video. This data requires a bearer token with the `private` scope.
	Files []VideoFile `json:"files"`
	// Whether the video has audio.
	HasAudio bool `json:"has_audio"`
	// Whether the video has alternate audio tracks.
	HasAudioTracks bool `json:"has_audio_tracks"`
	// Whether the video has chapters.
	HasChapters bool `json:"has_chapters"`
	// Whether the video has interactive capability.
	HasInteractive bool `json:"has_interactive"`
	// Whether the video has text tracks.
	HasTextTracks bool `json:"has_text_tracks"`
	// The video's height in pixels.
	Height float32 `json:"height"`
	// Whether the video is privacy restricted due to a copyright infringement. This data requires a bearer token with the `private` scope.
	IsCopyrightRestricted bool `json:"is_copyright_restricted"`
	// Whether the video is a free Vimeo Stock video.
	IsFree *bool `json:"is_free,omitempty"`
	// Whether the video is playable.
	IsPlayable bool `json:"is_playable"`
	// The video's primary language.
	Language NullableString `json:"language"`
	// The time in ISO 8601 format when the user last modified the video.
	LastUserActionEventDate NullableString `json:"last_user_action_event_date,omitempty"`
	// The [Creative Commons](http://creativecommons.org/licenses/) license that the video is given under.  Option descriptions:  * `by` - The video is given under the Attribution license.  * `by-nc` - The video is given under the Attribution Non-Commercial license.  * `by-nc-nd` - The video is given under the Attribution Non-Commercial No Derivatives license.  * `by-nc-sa` - The video is given under the Attribution Non-Commercial Share Alike license.  * `by-nd` - The video is given under the Attribution No Derivatives license.  * `by-sa` - The video is given under the Attribution Share Alike license.  * `cc0` - The video is given under the Public Domain Dedication license.
	License string `json:"license"`
	// The link to the video.
	Link string `json:"link"`
	// The link to the video management page. This data requires a bearer token with the `private` scope.
	ManageLink *string       `json:"manage_link,omitempty"`
	Metadata   VideoMetadata `json:"metadata"`
	// The time in ISO 8601 format when the video metadata was last modified.
	ModifiedTime string `json:"modified_time"`
	// The video's title.
	Name string `json:"name"`
	// Whether the video has unified resolution. If the value of this field is `false`, the video requires transcoding.
	OriginVariableFrameResolution bool                      `json:"origin_variable_frame_resolution"`
	ParentFolder                  NullableVideoParentFolder `json:"parent_folder,omitempty"`
	// The privacy-enabled password to watch the video. Only the video's owner and team members with permission can access the video's password. This data requires a bearer token with the `private` scope.
	Password *string `json:"password,omitempty"`
	Pictures Picture `json:"pictures"`
	Play     *Play   `json:"play,omitempty"`
	// The video's player embed URL.
	PlayerEmbedUrl string       `json:"player_embed_url"`
	Privacy        VideoPrivacy `json:"privacy"`
	// Whether the video's content rating is locked by a mod.
	RatingModLocked bool `json:"rating_mod_locked"`
	// The time in ISO 8601 format when the video was released.
	ReleaseTime string `json:"release_time"`
	// The resource key string of the video.
	ResourceKey string `json:"resource_key"`
	// Whether to show the `Review` button on single video view recipient pages. This data requires a bearer token with the `private` scope.
	ShowReviewPage NullableBool `json:"show_review_page"`
	// Whether to show the single video view footer banner on recipient pages. This data requires a bearer token with the `private` scope.
	ShowSvvFooterBanner NullableBool `json:"show_svv_footer_banner"`
	// Whether to enable timecoded comments on the single video view recipient page. This data requires a bearer token with the `private` scope.
	ShowSvvTimecodedComments NullableBool `json:"show_svv_timecoded_comments"`
	Spatial                  VideoSpatial `json:"spatial"`
	Stats                    VideoStats   `json:"stats"`
	// The status code for the availability of the video.  Option descriptions:  * `available` - The video is available.  * `quota_exceeded` - The user's weekly upload quota is exceeded with this video.  * `total_cap_exceeded` - The user's total storage limit is exceeded with this video.  * `transcode_starting` - Transcoding is starting for the video.  * `transcoding` - Transcoding has started and is currently underway for the video.  * `transcoding_error` - There was an error in transcoding the video.  * `unavailable` - The video is unavailable.  * `uploading` - The video is being uploaded.  * `uploading_error` - There was an error in uploading the video.
	Status NullableString `json:"status"`
	// An array of all tags assigned to the video.
	Tags       []Tag                   `json:"tags"`
	Transcode  NullableVideoTranscode  `json:"transcode"`
	Transcript NullableVideoTranscript `json:"transcript"`
	// The type of the video.  Option descriptions:  * `live` - The video is or was an event.  * `stock` - The video is a Vimeo Stock video.  * `video` - The video is a standard Vimeo video.
	Type     string              `json:"type"`
	Upload   NullableVideoUpload `json:"upload"`
	Uploader VideoUploader       `json:"uploader"`
	// The video's canonical relative URI.
	Uri                    string                 `json:"uri"`
	User                   NullableVideoUser      `json:"user"`
	VersionTranscodeStatus VersionTranscodeStatus `json:"version_transcode_status"`
	Vod                    NullableVideoVod       `json:"vod"`
	// The video's width in pixels.
	Width float32 `json:"width"`
}

// NewVideo instantiates a new Video object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideo(allowedPrivacies []string, app ApiApp, canMoveToProject NullableBool, categories []Category, contentRating []string, contentRatingClass string, context VideoContext, createdTime string, customUrl NullableString, description NullableString, descriptionHtml NullableString, download []VideoFile, duration float32, embed EmbedSettings, files []VideoFile, hasAudio bool, hasAudioTracks bool, hasChapters bool, hasInteractive bool, hasTextTracks bool, height float32, isCopyrightRestricted bool, isPlayable bool, language NullableString, license string, link string, metadata VideoMetadata, modifiedTime string, name string, originVariableFrameResolution bool, pictures Picture, playerEmbedUrl string, privacy VideoPrivacy, ratingModLocked bool, releaseTime string, resourceKey string, showReviewPage NullableBool, showSvvFooterBanner NullableBool, showSvvTimecodedComments NullableBool, spatial VideoSpatial, stats VideoStats, status NullableString, tags []Tag, transcode NullableVideoTranscode, transcript NullableVideoTranscript, type_ string, upload NullableVideoUpload, uploader VideoUploader, uri string, user NullableVideoUser, versionTranscodeStatus VersionTranscodeStatus, vod NullableVideoVod, width float32) *Video {
	this := Video{}
	this.AllowedPrivacies = allowedPrivacies
	this.App = app
	this.CanMoveToProject = canMoveToProject
	this.Categories = categories
	this.ContentRating = contentRating
	this.ContentRatingClass = contentRatingClass
	this.Context = context
	this.CreatedTime = createdTime
	this.CustomUrl = customUrl
	this.Description = description
	this.DescriptionHtml = descriptionHtml
	this.Download = download
	this.Duration = duration
	this.Embed = embed
	this.Files = files
	this.HasAudio = hasAudio
	this.HasAudioTracks = hasAudioTracks
	this.HasChapters = hasChapters
	this.HasInteractive = hasInteractive
	this.HasTextTracks = hasTextTracks
	this.Height = height
	this.IsCopyrightRestricted = isCopyrightRestricted
	this.IsPlayable = isPlayable
	this.Language = language
	this.License = license
	this.Link = link
	this.Metadata = metadata
	this.ModifiedTime = modifiedTime
	this.Name = name
	this.OriginVariableFrameResolution = originVariableFrameResolution
	this.Pictures = pictures
	this.PlayerEmbedUrl = playerEmbedUrl
	this.Privacy = privacy
	this.RatingModLocked = ratingModLocked
	this.ReleaseTime = releaseTime
	this.ResourceKey = resourceKey
	this.ShowReviewPage = showReviewPage
	this.ShowSvvFooterBanner = showSvvFooterBanner
	this.ShowSvvTimecodedComments = showSvvTimecodedComments
	this.Spatial = spatial
	this.Stats = stats
	this.Status = status
	this.Tags = tags
	this.Transcode = transcode
	this.Transcript = transcript
	this.Type = type_
	this.Upload = upload
	this.Uploader = uploader
	this.Uri = uri
	this.User = user
	this.VersionTranscodeStatus = versionTranscodeStatus
	this.Vod = vod
	this.Width = width
	return &this
}

// NewVideoWithDefaults instantiates a new Video object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoWithDefaults() *Video {
	this := Video{}
	return &this
}

// GetAllowedPrivacies returns the AllowedPrivacies field value
func (o *Video) GetAllowedPrivacies() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AllowedPrivacies
}

// GetAllowedPrivaciesOk returns a tuple with the AllowedPrivacies field value
// and a boolean to check if the value has been set.
func (o *Video) GetAllowedPrivaciesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowedPrivacies, true
}

// SetAllowedPrivacies sets field value
func (o *Video) SetAllowedPrivacies(v []string) {
	o.AllowedPrivacies = v
}

// GetApp returns the App field value
func (o *Video) GetApp() ApiApp {
	if o == nil {
		var ret ApiApp
		return ret
	}

	return o.App
}

// GetAppOk returns a tuple with the App field value
// and a boolean to check if the value has been set.
func (o *Video) GetAppOk() (*ApiApp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.App, true
}

// SetApp sets field value
func (o *Video) SetApp(v ApiApp) {
	o.App = v
}

// GetCanMoveToProject returns the CanMoveToProject field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *Video) GetCanMoveToProject() bool {
	if o == nil || o.CanMoveToProject.Get() == nil {
		var ret bool
		return ret
	}

	return *o.CanMoveToProject.Get()
}

// GetCanMoveToProjectOk returns a tuple with the CanMoveToProject field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetCanMoveToProjectOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanMoveToProject.Get(), o.CanMoveToProject.IsSet()
}

// SetCanMoveToProject sets field value
func (o *Video) SetCanMoveToProject(v bool) {
	o.CanMoveToProject.Set(&v)
}

// GetCategories returns the Categories field value
func (o *Video) GetCategories() []Category {
	if o == nil {
		var ret []Category
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *Video) GetCategoriesOk() ([]Category, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *Video) SetCategories(v []Category) {
	o.Categories = v
}

// GetContentRating returns the ContentRating field value
func (o *Video) GetContentRating() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ContentRating
}

// GetContentRatingOk returns a tuple with the ContentRating field value
// and a boolean to check if the value has been set.
func (o *Video) GetContentRatingOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentRating, true
}

// SetContentRating sets field value
func (o *Video) SetContentRating(v []string) {
	o.ContentRating = v
}

// GetContentRatingClass returns the ContentRatingClass field value
func (o *Video) GetContentRatingClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentRatingClass
}

// GetContentRatingClassOk returns a tuple with the ContentRatingClass field value
// and a boolean to check if the value has been set.
func (o *Video) GetContentRatingClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentRatingClass, true
}

// SetContentRatingClass sets field value
func (o *Video) SetContentRatingClass(v string) {
	o.ContentRatingClass = v
}

// GetContext returns the Context field value
func (o *Video) GetContext() VideoContext {
	if o == nil {
		var ret VideoContext
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *Video) GetContextOk() (*VideoContext, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *Video) SetContext(v VideoContext) {
	o.Context = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *Video) GetCreatedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *Video) GetCreatedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *Video) SetCreatedTime(v string) {
	o.CreatedTime = v
}

// GetCustomUrl returns the CustomUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Video) GetCustomUrl() string {
	if o == nil || o.CustomUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.CustomUrl.Get()
}

// GetCustomUrlOk returns a tuple with the CustomUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetCustomUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomUrl.Get(), o.CustomUrl.IsSet()
}

// SetCustomUrl sets field value
func (o *Video) SetCustomUrl(v string) {
	o.CustomUrl.Set(&v)
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Video) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Video) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetDescriptionHtml returns the DescriptionHtml field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Video) GetDescriptionHtml() string {
	if o == nil || o.DescriptionHtml.Get() == nil {
		var ret string
		return ret
	}

	return *o.DescriptionHtml.Get()
}

// GetDescriptionHtmlOk returns a tuple with the DescriptionHtml field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetDescriptionHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DescriptionHtml.Get(), o.DescriptionHtml.IsSet()
}

// SetDescriptionHtml sets field value
func (o *Video) SetDescriptionHtml(v string) {
	o.DescriptionHtml.Set(&v)
}

// GetDescriptionRich returns the DescriptionRich field value if set, zero value otherwise.
func (o *Video) GetDescriptionRich() string {
	if o == nil || IsNil(o.DescriptionRich) {
		var ret string
		return ret
	}
	return *o.DescriptionRich
}

// GetDescriptionRichOk returns a tuple with the DescriptionRich field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetDescriptionRichOk() (*string, bool) {
	if o == nil || IsNil(o.DescriptionRich) {
		return nil, false
	}
	return o.DescriptionRich, true
}

// HasDescriptionRich returns a boolean if a field has been set.
func (o *Video) HasDescriptionRich() bool {
	if o != nil && !IsNil(o.DescriptionRich) {
		return true
	}

	return false
}

// SetDescriptionRich gets a reference to the given string and assigns it to the DescriptionRich field.
func (o *Video) SetDescriptionRich(v string) {
	o.DescriptionRich = &v
}

// GetDisabledProperties returns the DisabledProperties field value if set, zero value otherwise.
func (o *Video) GetDisabledProperties() DisabledVideoProperties {
	if o == nil || IsNil(o.DisabledProperties) {
		var ret DisabledVideoProperties
		return ret
	}
	return *o.DisabledProperties
}

// GetDisabledPropertiesOk returns a tuple with the DisabledProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetDisabledPropertiesOk() (*DisabledVideoProperties, bool) {
	if o == nil || IsNil(o.DisabledProperties) {
		return nil, false
	}
	return o.DisabledProperties, true
}

// HasDisabledProperties returns a boolean if a field has been set.
func (o *Video) HasDisabledProperties() bool {
	if o != nil && !IsNil(o.DisabledProperties) {
		return true
	}

	return false
}

// SetDisabledProperties gets a reference to the given DisabledVideoProperties and assigns it to the DisabledProperties field.
func (o *Video) SetDisabledProperties(v DisabledVideoProperties) {
	o.DisabledProperties = &v
}

// GetDownload returns the Download field value
func (o *Video) GetDownload() []VideoFile {
	if o == nil {
		var ret []VideoFile
		return ret
	}

	return o.Download
}

// GetDownloadOk returns a tuple with the Download field value
// and a boolean to check if the value has been set.
func (o *Video) GetDownloadOk() ([]VideoFile, bool) {
	if o == nil {
		return nil, false
	}
	return o.Download, true
}

// SetDownload sets field value
func (o *Video) SetDownload(v []VideoFile) {
	o.Download = v
}

// GetDuration returns the Duration field value
func (o *Video) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *Video) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *Video) SetDuration(v float32) {
	o.Duration = v
}

// GetEditSession returns the EditSession field value if set, zero value otherwise.
func (o *Video) GetEditSession() EditingSession {
	if o == nil || IsNil(o.EditSession) {
		var ret EditingSession
		return ret
	}
	return *o.EditSession
}

// GetEditSessionOk returns a tuple with the EditSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetEditSessionOk() (*EditingSession, bool) {
	if o == nil || IsNil(o.EditSession) {
		return nil, false
	}
	return o.EditSession, true
}

// HasEditSession returns a boolean if a field has been set.
func (o *Video) HasEditSession() bool {
	if o != nil && !IsNil(o.EditSession) {
		return true
	}

	return false
}

// SetEditSession gets a reference to the given EditingSession and assigns it to the EditSession field.
func (o *Video) SetEditSession(v EditingSession) {
	o.EditSession = &v
}

// GetEmbed returns the Embed field value
func (o *Video) GetEmbed() EmbedSettings {
	if o == nil {
		var ret EmbedSettings
		return ret
	}

	return o.Embed
}

// GetEmbedOk returns a tuple with the Embed field value
// and a boolean to check if the value has been set.
func (o *Video) GetEmbedOk() (*EmbedSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Embed, true
}

// SetEmbed sets field value
func (o *Video) SetEmbed(v EmbedSettings) {
	o.Embed = v
}

// GetFiles returns the Files field value
func (o *Video) GetFiles() []VideoFile {
	if o == nil {
		var ret []VideoFile
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *Video) GetFilesOk() ([]VideoFile, bool) {
	if o == nil {
		return nil, false
	}
	return o.Files, true
}

// SetFiles sets field value
func (o *Video) SetFiles(v []VideoFile) {
	o.Files = v
}

// GetHasAudio returns the HasAudio field value
func (o *Video) GetHasAudio() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasAudio
}

// GetHasAudioOk returns a tuple with the HasAudio field value
// and a boolean to check if the value has been set.
func (o *Video) GetHasAudioOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasAudio, true
}

// SetHasAudio sets field value
func (o *Video) SetHasAudio(v bool) {
	o.HasAudio = v
}

// GetHasAudioTracks returns the HasAudioTracks field value
func (o *Video) GetHasAudioTracks() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasAudioTracks
}

// GetHasAudioTracksOk returns a tuple with the HasAudioTracks field value
// and a boolean to check if the value has been set.
func (o *Video) GetHasAudioTracksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasAudioTracks, true
}

// SetHasAudioTracks sets field value
func (o *Video) SetHasAudioTracks(v bool) {
	o.HasAudioTracks = v
}

// GetHasChapters returns the HasChapters field value
func (o *Video) GetHasChapters() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasChapters
}

// GetHasChaptersOk returns a tuple with the HasChapters field value
// and a boolean to check if the value has been set.
func (o *Video) GetHasChaptersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasChapters, true
}

// SetHasChapters sets field value
func (o *Video) SetHasChapters(v bool) {
	o.HasChapters = v
}

// GetHasInteractive returns the HasInteractive field value
func (o *Video) GetHasInteractive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasInteractive
}

// GetHasInteractiveOk returns a tuple with the HasInteractive field value
// and a boolean to check if the value has been set.
func (o *Video) GetHasInteractiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasInteractive, true
}

// SetHasInteractive sets field value
func (o *Video) SetHasInteractive(v bool) {
	o.HasInteractive = v
}

// GetHasTextTracks returns the HasTextTracks field value
func (o *Video) GetHasTextTracks() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasTextTracks
}

// GetHasTextTracksOk returns a tuple with the HasTextTracks field value
// and a boolean to check if the value has been set.
func (o *Video) GetHasTextTracksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasTextTracks, true
}

// SetHasTextTracks sets field value
func (o *Video) SetHasTextTracks(v bool) {
	o.HasTextTracks = v
}

// GetHeight returns the Height field value
func (o *Video) GetHeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *Video) GetHeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *Video) SetHeight(v float32) {
	o.Height = v
}

// GetIsCopyrightRestricted returns the IsCopyrightRestricted field value
func (o *Video) GetIsCopyrightRestricted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsCopyrightRestricted
}

// GetIsCopyrightRestrictedOk returns a tuple with the IsCopyrightRestricted field value
// and a boolean to check if the value has been set.
func (o *Video) GetIsCopyrightRestrictedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsCopyrightRestricted, true
}

// SetIsCopyrightRestricted sets field value
func (o *Video) SetIsCopyrightRestricted(v bool) {
	o.IsCopyrightRestricted = v
}

// GetIsFree returns the IsFree field value if set, zero value otherwise.
func (o *Video) GetIsFree() bool {
	if o == nil || IsNil(o.IsFree) {
		var ret bool
		return ret
	}
	return *o.IsFree
}

// GetIsFreeOk returns a tuple with the IsFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetIsFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFree) {
		return nil, false
	}
	return o.IsFree, true
}

// HasIsFree returns a boolean if a field has been set.
func (o *Video) HasIsFree() bool {
	if o != nil && !IsNil(o.IsFree) {
		return true
	}

	return false
}

// SetIsFree gets a reference to the given bool and assigns it to the IsFree field.
func (o *Video) SetIsFree(v bool) {
	o.IsFree = &v
}

// GetIsPlayable returns the IsPlayable field value
func (o *Video) GetIsPlayable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPlayable
}

// GetIsPlayableOk returns a tuple with the IsPlayable field value
// and a boolean to check if the value has been set.
func (o *Video) GetIsPlayableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPlayable, true
}

// SetIsPlayable sets field value
func (o *Video) SetIsPlayable(v bool) {
	o.IsPlayable = v
}

// GetLanguage returns the Language field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Video) GetLanguage() string {
	if o == nil || o.Language.Get() == nil {
		var ret string
		return ret
	}

	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// SetLanguage sets field value
func (o *Video) SetLanguage(v string) {
	o.Language.Set(&v)
}

// GetLastUserActionEventDate returns the LastUserActionEventDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Video) GetLastUserActionEventDate() string {
	if o == nil || IsNil(o.LastUserActionEventDate.Get()) {
		var ret string
		return ret
	}
	return *o.LastUserActionEventDate.Get()
}

// GetLastUserActionEventDateOk returns a tuple with the LastUserActionEventDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetLastUserActionEventDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUserActionEventDate.Get(), o.LastUserActionEventDate.IsSet()
}

// HasLastUserActionEventDate returns a boolean if a field has been set.
func (o *Video) HasLastUserActionEventDate() bool {
	if o != nil && o.LastUserActionEventDate.IsSet() {
		return true
	}

	return false
}

// SetLastUserActionEventDate gets a reference to the given NullableString and assigns it to the LastUserActionEventDate field.
func (o *Video) SetLastUserActionEventDate(v string) {
	o.LastUserActionEventDate.Set(&v)
}

// SetLastUserActionEventDateNil sets the value for LastUserActionEventDate to be an explicit nil
func (o *Video) SetLastUserActionEventDateNil() {
	o.LastUserActionEventDate.Set(nil)
}

// UnsetLastUserActionEventDate ensures that no value is present for LastUserActionEventDate, not even an explicit nil
func (o *Video) UnsetLastUserActionEventDate() {
	o.LastUserActionEventDate.Unset()
}

// GetLicense returns the License field value
func (o *Video) GetLicense() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.License
}

// GetLicenseOk returns a tuple with the License field value
// and a boolean to check if the value has been set.
func (o *Video) GetLicenseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.License, true
}

// SetLicense sets field value
func (o *Video) SetLicense(v string) {
	o.License = v
}

// GetLink returns the Link field value
func (o *Video) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *Video) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *Video) SetLink(v string) {
	o.Link = v
}

// GetManageLink returns the ManageLink field value if set, zero value otherwise.
func (o *Video) GetManageLink() string {
	if o == nil || IsNil(o.ManageLink) {
		var ret string
		return ret
	}
	return *o.ManageLink
}

// GetManageLinkOk returns a tuple with the ManageLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetManageLinkOk() (*string, bool) {
	if o == nil || IsNil(o.ManageLink) {
		return nil, false
	}
	return o.ManageLink, true
}

// HasManageLink returns a boolean if a field has been set.
func (o *Video) HasManageLink() bool {
	if o != nil && !IsNil(o.ManageLink) {
		return true
	}

	return false
}

// SetManageLink gets a reference to the given string and assigns it to the ManageLink field.
func (o *Video) SetManageLink(v string) {
	o.ManageLink = &v
}

// GetMetadata returns the Metadata field value
func (o *Video) GetMetadata() VideoMetadata {
	if o == nil {
		var ret VideoMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *Video) GetMetadataOk() (*VideoMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *Video) SetMetadata(v VideoMetadata) {
	o.Metadata = v
}

// GetModifiedTime returns the ModifiedTime field value
func (o *Video) GetModifiedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedTime
}

// GetModifiedTimeOk returns a tuple with the ModifiedTime field value
// and a boolean to check if the value has been set.
func (o *Video) GetModifiedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedTime, true
}

// SetModifiedTime sets field value
func (o *Video) SetModifiedTime(v string) {
	o.ModifiedTime = v
}

// GetName returns the Name field value
func (o *Video) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Video) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Video) SetName(v string) {
	o.Name = v
}

// GetOriginVariableFrameResolution returns the OriginVariableFrameResolution field value
func (o *Video) GetOriginVariableFrameResolution() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OriginVariableFrameResolution
}

// GetOriginVariableFrameResolutionOk returns a tuple with the OriginVariableFrameResolution field value
// and a boolean to check if the value has been set.
func (o *Video) GetOriginVariableFrameResolutionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginVariableFrameResolution, true
}

// SetOriginVariableFrameResolution sets field value
func (o *Video) SetOriginVariableFrameResolution(v bool) {
	o.OriginVariableFrameResolution = v
}

// GetParentFolder returns the ParentFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Video) GetParentFolder() VideoParentFolder {
	if o == nil || IsNil(o.ParentFolder.Get()) {
		var ret VideoParentFolder
		return ret
	}
	return *o.ParentFolder.Get()
}

// GetParentFolderOk returns a tuple with the ParentFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetParentFolderOk() (*VideoParentFolder, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentFolder.Get(), o.ParentFolder.IsSet()
}

// HasParentFolder returns a boolean if a field has been set.
func (o *Video) HasParentFolder() bool {
	if o != nil && o.ParentFolder.IsSet() {
		return true
	}

	return false
}

// SetParentFolder gets a reference to the given NullableVideoParentFolder and assigns it to the ParentFolder field.
func (o *Video) SetParentFolder(v VideoParentFolder) {
	o.ParentFolder.Set(&v)
}

// SetParentFolderNil sets the value for ParentFolder to be an explicit nil
func (o *Video) SetParentFolderNil() {
	o.ParentFolder.Set(nil)
}

// UnsetParentFolder ensures that no value is present for ParentFolder, not even an explicit nil
func (o *Video) UnsetParentFolder() {
	o.ParentFolder.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *Video) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *Video) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *Video) SetPassword(v string) {
	o.Password = &v
}

// GetPictures returns the Pictures field value
func (o *Video) GetPictures() Picture {
	if o == nil {
		var ret Picture
		return ret
	}

	return o.Pictures
}

// GetPicturesOk returns a tuple with the Pictures field value
// and a boolean to check if the value has been set.
func (o *Video) GetPicturesOk() (*Picture, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pictures, true
}

// SetPictures sets field value
func (o *Video) SetPictures(v Picture) {
	o.Pictures = v
}

// GetPlay returns the Play field value if set, zero value otherwise.
func (o *Video) GetPlay() Play {
	if o == nil || IsNil(o.Play) {
		var ret Play
		return ret
	}
	return *o.Play
}

// GetPlayOk returns a tuple with the Play field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Video) GetPlayOk() (*Play, bool) {
	if o == nil || IsNil(o.Play) {
		return nil, false
	}
	return o.Play, true
}

// HasPlay returns a boolean if a field has been set.
func (o *Video) HasPlay() bool {
	if o != nil && !IsNil(o.Play) {
		return true
	}

	return false
}

// SetPlay gets a reference to the given Play and assigns it to the Play field.
func (o *Video) SetPlay(v Play) {
	o.Play = &v
}

// GetPlayerEmbedUrl returns the PlayerEmbedUrl field value
func (o *Video) GetPlayerEmbedUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerEmbedUrl
}

// GetPlayerEmbedUrlOk returns a tuple with the PlayerEmbedUrl field value
// and a boolean to check if the value has been set.
func (o *Video) GetPlayerEmbedUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerEmbedUrl, true
}

// SetPlayerEmbedUrl sets field value
func (o *Video) SetPlayerEmbedUrl(v string) {
	o.PlayerEmbedUrl = v
}

// GetPrivacy returns the Privacy field value
func (o *Video) GetPrivacy() VideoPrivacy {
	if o == nil {
		var ret VideoPrivacy
		return ret
	}

	return o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value
// and a boolean to check if the value has been set.
func (o *Video) GetPrivacyOk() (*VideoPrivacy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Privacy, true
}

// SetPrivacy sets field value
func (o *Video) SetPrivacy(v VideoPrivacy) {
	o.Privacy = v
}

// GetRatingModLocked returns the RatingModLocked field value
func (o *Video) GetRatingModLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RatingModLocked
}

// GetRatingModLockedOk returns a tuple with the RatingModLocked field value
// and a boolean to check if the value has been set.
func (o *Video) GetRatingModLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RatingModLocked, true
}

// SetRatingModLocked sets field value
func (o *Video) SetRatingModLocked(v bool) {
	o.RatingModLocked = v
}

// GetReleaseTime returns the ReleaseTime field value
func (o *Video) GetReleaseTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReleaseTime
}

// GetReleaseTimeOk returns a tuple with the ReleaseTime field value
// and a boolean to check if the value has been set.
func (o *Video) GetReleaseTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReleaseTime, true
}

// SetReleaseTime sets field value
func (o *Video) SetReleaseTime(v string) {
	o.ReleaseTime = v
}

// GetResourceKey returns the ResourceKey field value
func (o *Video) GetResourceKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceKey
}

// GetResourceKeyOk returns a tuple with the ResourceKey field value
// and a boolean to check if the value has been set.
func (o *Video) GetResourceKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceKey, true
}

// SetResourceKey sets field value
func (o *Video) SetResourceKey(v string) {
	o.ResourceKey = v
}

// GetShowReviewPage returns the ShowReviewPage field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *Video) GetShowReviewPage() bool {
	if o == nil || o.ShowReviewPage.Get() == nil {
		var ret bool
		return ret
	}

	return *o.ShowReviewPage.Get()
}

// GetShowReviewPageOk returns a tuple with the ShowReviewPage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetShowReviewPageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowReviewPage.Get(), o.ShowReviewPage.IsSet()
}

// SetShowReviewPage sets field value
func (o *Video) SetShowReviewPage(v bool) {
	o.ShowReviewPage.Set(&v)
}

// GetShowSvvFooterBanner returns the ShowSvvFooterBanner field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *Video) GetShowSvvFooterBanner() bool {
	if o == nil || o.ShowSvvFooterBanner.Get() == nil {
		var ret bool
		return ret
	}

	return *o.ShowSvvFooterBanner.Get()
}

// GetShowSvvFooterBannerOk returns a tuple with the ShowSvvFooterBanner field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetShowSvvFooterBannerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowSvvFooterBanner.Get(), o.ShowSvvFooterBanner.IsSet()
}

// SetShowSvvFooterBanner sets field value
func (o *Video) SetShowSvvFooterBanner(v bool) {
	o.ShowSvvFooterBanner.Set(&v)
}

// GetShowSvvTimecodedComments returns the ShowSvvTimecodedComments field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *Video) GetShowSvvTimecodedComments() bool {
	if o == nil || o.ShowSvvTimecodedComments.Get() == nil {
		var ret bool
		return ret
	}

	return *o.ShowSvvTimecodedComments.Get()
}

// GetShowSvvTimecodedCommentsOk returns a tuple with the ShowSvvTimecodedComments field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetShowSvvTimecodedCommentsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowSvvTimecodedComments.Get(), o.ShowSvvTimecodedComments.IsSet()
}

// SetShowSvvTimecodedComments sets field value
func (o *Video) SetShowSvvTimecodedComments(v bool) {
	o.ShowSvvTimecodedComments.Set(&v)
}

// GetSpatial returns the Spatial field value
func (o *Video) GetSpatial() VideoSpatial {
	if o == nil {
		var ret VideoSpatial
		return ret
	}

	return o.Spatial
}

// GetSpatialOk returns a tuple with the Spatial field value
// and a boolean to check if the value has been set.
func (o *Video) GetSpatialOk() (*VideoSpatial, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spatial, true
}

// SetSpatial sets field value
func (o *Video) SetSpatial(v VideoSpatial) {
	o.Spatial = v
}

// GetStats returns the Stats field value
func (o *Video) GetStats() VideoStats {
	if o == nil {
		var ret VideoStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *Video) GetStatsOk() (*VideoStats, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stats, true
}

// SetStats sets field value
func (o *Video) SetStats(v VideoStats) {
	o.Stats = v
}

// GetStatus returns the Status field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Video) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}

	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// SetStatus sets field value
func (o *Video) SetStatus(v string) {
	o.Status.Set(&v)
}

// GetTags returns the Tags field value
func (o *Video) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *Video) GetTagsOk() ([]Tag, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *Video) SetTags(v []Tag) {
	o.Tags = v
}

// GetTranscode returns the Transcode field value
// If the value is explicit nil, the zero value for VideoTranscode will be returned
func (o *Video) GetTranscode() VideoTranscode {
	if o == nil || o.Transcode.Get() == nil {
		var ret VideoTranscode
		return ret
	}

	return *o.Transcode.Get()
}

// GetTranscodeOk returns a tuple with the Transcode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetTranscodeOk() (*VideoTranscode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Transcode.Get(), o.Transcode.IsSet()
}

// SetTranscode sets field value
func (o *Video) SetTranscode(v VideoTranscode) {
	o.Transcode.Set(&v)
}

// GetTranscript returns the Transcript field value
// If the value is explicit nil, the zero value for VideoTranscript will be returned
func (o *Video) GetTranscript() VideoTranscript {
	if o == nil || o.Transcript.Get() == nil {
		var ret VideoTranscript
		return ret
	}

	return *o.Transcript.Get()
}

// GetTranscriptOk returns a tuple with the Transcript field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetTranscriptOk() (*VideoTranscript, bool) {
	if o == nil {
		return nil, false
	}
	return o.Transcript.Get(), o.Transcript.IsSet()
}

// SetTranscript sets field value
func (o *Video) SetTranscript(v VideoTranscript) {
	o.Transcript.Set(&v)
}

// GetType returns the Type field value
func (o *Video) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Video) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Video) SetType(v string) {
	o.Type = v
}

// GetUpload returns the Upload field value
// If the value is explicit nil, the zero value for VideoUpload will be returned
func (o *Video) GetUpload() VideoUpload {
	if o == nil || o.Upload.Get() == nil {
		var ret VideoUpload
		return ret
	}

	return *o.Upload.Get()
}

// GetUploadOk returns a tuple with the Upload field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetUploadOk() (*VideoUpload, bool) {
	if o == nil {
		return nil, false
	}
	return o.Upload.Get(), o.Upload.IsSet()
}

// SetUpload sets field value
func (o *Video) SetUpload(v VideoUpload) {
	o.Upload.Set(&v)
}

// GetUploader returns the Uploader field value
func (o *Video) GetUploader() VideoUploader {
	if o == nil {
		var ret VideoUploader
		return ret
	}

	return o.Uploader
}

// GetUploaderOk returns a tuple with the Uploader field value
// and a boolean to check if the value has been set.
func (o *Video) GetUploaderOk() (*VideoUploader, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uploader, true
}

// SetUploader sets field value
func (o *Video) SetUploader(v VideoUploader) {
	o.Uploader = v
}

// GetUri returns the Uri field value
func (o *Video) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *Video) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *Video) SetUri(v string) {
	o.Uri = v
}

// GetUser returns the User field value
// If the value is explicit nil, the zero value for VideoUser will be returned
func (o *Video) GetUser() VideoUser {
	if o == nil || o.User.Get() == nil {
		var ret VideoUser
		return ret
	}

	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetUserOk() (*VideoUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// SetUser sets field value
func (o *Video) SetUser(v VideoUser) {
	o.User.Set(&v)
}

// GetVersionTranscodeStatus returns the VersionTranscodeStatus field value
func (o *Video) GetVersionTranscodeStatus() VersionTranscodeStatus {
	if o == nil {
		var ret VersionTranscodeStatus
		return ret
	}

	return o.VersionTranscodeStatus
}

// GetVersionTranscodeStatusOk returns a tuple with the VersionTranscodeStatus field value
// and a boolean to check if the value has been set.
func (o *Video) GetVersionTranscodeStatusOk() (*VersionTranscodeStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionTranscodeStatus, true
}

// SetVersionTranscodeStatus sets field value
func (o *Video) SetVersionTranscodeStatus(v VersionTranscodeStatus) {
	o.VersionTranscodeStatus = v
}

// GetVod returns the Vod field value
// If the value is explicit nil, the zero value for VideoVod will be returned
func (o *Video) GetVod() VideoVod {
	if o == nil || o.Vod.Get() == nil {
		var ret VideoVod
		return ret
	}

	return *o.Vod.Get()
}

// GetVodOk returns a tuple with the Vod field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Video) GetVodOk() (*VideoVod, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vod.Get(), o.Vod.IsSet()
}

// SetVod sets field value
func (o *Video) SetVod(v VideoVod) {
	o.Vod.Set(&v)
}

// GetWidth returns the Width field value
func (o *Video) GetWidth() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *Video) GetWidthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *Video) SetWidth(v float32) {
	o.Width = v
}

func (o Video) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Video) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allowed_privacies"] = o.AllowedPrivacies
	toSerialize["app"] = o.App
	toSerialize["can_move_to_project"] = o.CanMoveToProject.Get()
	toSerialize["categories"] = o.Categories
	toSerialize["content_rating"] = o.ContentRating
	toSerialize["content_rating_class"] = o.ContentRatingClass
	toSerialize["context"] = o.Context
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["custom_url"] = o.CustomUrl.Get()
	toSerialize["description"] = o.Description.Get()
	toSerialize["description_html"] = o.DescriptionHtml.Get()
	if !IsNil(o.DescriptionRich) {
		toSerialize["description_rich"] = o.DescriptionRich
	}
	if !IsNil(o.DisabledProperties) {
		toSerialize["disabled_properties"] = o.DisabledProperties
	}
	toSerialize["download"] = o.Download
	toSerialize["duration"] = o.Duration
	if !IsNil(o.EditSession) {
		toSerialize["edit_session"] = o.EditSession
	}
	toSerialize["embed"] = o.Embed
	toSerialize["files"] = o.Files
	toSerialize["has_audio"] = o.HasAudio
	toSerialize["has_audio_tracks"] = o.HasAudioTracks
	toSerialize["has_chapters"] = o.HasChapters
	toSerialize["has_interactive"] = o.HasInteractive
	toSerialize["has_text_tracks"] = o.HasTextTracks
	toSerialize["height"] = o.Height
	toSerialize["is_copyright_restricted"] = o.IsCopyrightRestricted
	if !IsNil(o.IsFree) {
		toSerialize["is_free"] = o.IsFree
	}
	toSerialize["is_playable"] = o.IsPlayable
	toSerialize["language"] = o.Language.Get()
	if o.LastUserActionEventDate.IsSet() {
		toSerialize["last_user_action_event_date"] = o.LastUserActionEventDate.Get()
	}
	toSerialize["license"] = o.License
	toSerialize["link"] = o.Link
	if !IsNil(o.ManageLink) {
		toSerialize["manage_link"] = o.ManageLink
	}
	toSerialize["metadata"] = o.Metadata
	toSerialize["modified_time"] = o.ModifiedTime
	toSerialize["name"] = o.Name
	toSerialize["origin_variable_frame_resolution"] = o.OriginVariableFrameResolution
	if o.ParentFolder.IsSet() {
		toSerialize["parent_folder"] = o.ParentFolder.Get()
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["pictures"] = o.Pictures
	if !IsNil(o.Play) {
		toSerialize["play"] = o.Play
	}
	toSerialize["player_embed_url"] = o.PlayerEmbedUrl
	toSerialize["privacy"] = o.Privacy
	toSerialize["rating_mod_locked"] = o.RatingModLocked
	toSerialize["release_time"] = o.ReleaseTime
	toSerialize["resource_key"] = o.ResourceKey
	toSerialize["show_review_page"] = o.ShowReviewPage.Get()
	toSerialize["show_svv_footer_banner"] = o.ShowSvvFooterBanner.Get()
	toSerialize["show_svv_timecoded_comments"] = o.ShowSvvTimecodedComments.Get()
	toSerialize["spatial"] = o.Spatial
	toSerialize["stats"] = o.Stats
	toSerialize["status"] = o.Status.Get()
	toSerialize["tags"] = o.Tags
	toSerialize["transcode"] = o.Transcode.Get()
	toSerialize["transcript"] = o.Transcript.Get()
	toSerialize["type"] = o.Type
	toSerialize["upload"] = o.Upload.Get()
	toSerialize["uploader"] = o.Uploader
	toSerialize["uri"] = o.Uri
	toSerialize["user"] = o.User.Get()
	toSerialize["version_transcode_status"] = o.VersionTranscodeStatus
	toSerialize["vod"] = o.Vod.Get()
	toSerialize["width"] = o.Width
	return toSerialize, nil
}

type NullableVideo struct {
	value *Video
	isSet bool
}

func (v NullableVideo) Get() *Video {
	return v.value
}

func (v *NullableVideo) Set(val *Video) {
	v.value = val
	v.isSet = true
}

func (v NullableVideo) IsSet() bool {
	return v.isSet
}

func (v *NullableVideo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideo(val *Video) *NullableVideo {
	return &NullableVideo{value: val, isSet: true}
}

func (v NullableVideo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
