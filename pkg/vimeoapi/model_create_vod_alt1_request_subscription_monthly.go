/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the CreateVodAlt1RequestSubscriptionMonthly type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVodAlt1RequestSubscriptionMonthly{}

// CreateVodAlt1RequestSubscriptionMonthly struct for CreateVodAlt1RequestSubscriptionMonthly
type CreateVodAlt1RequestSubscriptionMonthly struct {
	// Whether a monthly subscription is active. This parameter is required when **rent.active** and **buy.active** are `false`.
	Active *bool                                         `json:"active,omitempty"`
	Price  *CreateVodAlt1RequestSubscriptionMonthlyPrice `json:"price,omitempty"`
}

// NewCreateVodAlt1RequestSubscriptionMonthly instantiates a new CreateVodAlt1RequestSubscriptionMonthly object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVodAlt1RequestSubscriptionMonthly() *CreateVodAlt1RequestSubscriptionMonthly {
	this := CreateVodAlt1RequestSubscriptionMonthly{}
	return &this
}

// NewCreateVodAlt1RequestSubscriptionMonthlyWithDefaults instantiates a new CreateVodAlt1RequestSubscriptionMonthly object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVodAlt1RequestSubscriptionMonthlyWithDefaults() *CreateVodAlt1RequestSubscriptionMonthly {
	this := CreateVodAlt1RequestSubscriptionMonthly{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CreateVodAlt1RequestSubscriptionMonthly) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVodAlt1RequestSubscriptionMonthly) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CreateVodAlt1RequestSubscriptionMonthly) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CreateVodAlt1RequestSubscriptionMonthly) SetActive(v bool) {
	o.Active = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CreateVodAlt1RequestSubscriptionMonthly) GetPrice() CreateVodAlt1RequestSubscriptionMonthlyPrice {
	if o == nil || IsNil(o.Price) {
		var ret CreateVodAlt1RequestSubscriptionMonthlyPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVodAlt1RequestSubscriptionMonthly) GetPriceOk() (*CreateVodAlt1RequestSubscriptionMonthlyPrice, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CreateVodAlt1RequestSubscriptionMonthly) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given CreateVodAlt1RequestSubscriptionMonthlyPrice and assigns it to the Price field.
func (o *CreateVodAlt1RequestSubscriptionMonthly) SetPrice(v CreateVodAlt1RequestSubscriptionMonthlyPrice) {
	o.Price = &v
}

func (o CreateVodAlt1RequestSubscriptionMonthly) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVodAlt1RequestSubscriptionMonthly) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableCreateVodAlt1RequestSubscriptionMonthly struct {
	value *CreateVodAlt1RequestSubscriptionMonthly
	isSet bool
}

func (v NullableCreateVodAlt1RequestSubscriptionMonthly) Get() *CreateVodAlt1RequestSubscriptionMonthly {
	return v.value
}

func (v *NullableCreateVodAlt1RequestSubscriptionMonthly) Set(val *CreateVodAlt1RequestSubscriptionMonthly) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVodAlt1RequestSubscriptionMonthly) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVodAlt1RequestSubscriptionMonthly) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVodAlt1RequestSubscriptionMonthly(val *CreateVodAlt1RequestSubscriptionMonthly) *NullableCreateVodAlt1RequestSubscriptionMonthly {
	return &NullableCreateVodAlt1RequestSubscriptionMonthly{value: val, isSet: true}
}

func (v NullableCreateVodAlt1RequestSubscriptionMonthly) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVodAlt1RequestSubscriptionMonthly) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
