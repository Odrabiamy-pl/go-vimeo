/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the WebinarEmailQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebinarEmailQuota{}

// WebinarEmailQuota Information about the webinar owner's email quota.
type WebinarEmailQuota struct {
	// The maximum number of webinar emails that the user can send.
	Capping float32 `json:"capping"`
	// The current number of webinar emails that the user has sent.
	Total float32 `json:"total"`
}

// NewWebinarEmailQuota instantiates a new WebinarEmailQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebinarEmailQuota(capping float32, total float32) *WebinarEmailQuota {
	this := WebinarEmailQuota{}
	this.Capping = capping
	this.Total = total
	return &this
}

// NewWebinarEmailQuotaWithDefaults instantiates a new WebinarEmailQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebinarEmailQuotaWithDefaults() *WebinarEmailQuota {
	this := WebinarEmailQuota{}
	return &this
}

// GetCapping returns the Capping field value
func (o *WebinarEmailQuota) GetCapping() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Capping
}

// GetCappingOk returns a tuple with the Capping field value
// and a boolean to check if the value has been set.
func (o *WebinarEmailQuota) GetCappingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capping, true
}

// SetCapping sets field value
func (o *WebinarEmailQuota) SetCapping(v float32) {
	o.Capping = v
}

// GetTotal returns the Total field value
func (o *WebinarEmailQuota) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *WebinarEmailQuota) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *WebinarEmailQuota) SetTotal(v float32) {
	o.Total = v
}

func (o WebinarEmailQuota) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebinarEmailQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["capping"] = o.Capping
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

type NullableWebinarEmailQuota struct {
	value *WebinarEmailQuota
	isSet bool
}

func (v NullableWebinarEmailQuota) Get() *WebinarEmailQuota {
	return v.value
}

func (v *NullableWebinarEmailQuota) Set(val *WebinarEmailQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableWebinarEmailQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableWebinarEmailQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebinarEmailQuota(val *WebinarEmailQuota) *NullableWebinarEmailQuota {
	return &NullableWebinarEmailQuota{value: val, isSet: true}
}

func (v NullableWebinarEmailQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebinarEmailQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
