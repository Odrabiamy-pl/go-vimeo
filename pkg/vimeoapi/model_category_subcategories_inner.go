/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the CategorySubcategoriesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategorySubcategoriesInner{}

// CategorySubcategoriesInner struct for CategorySubcategoriesInner
type CategorySubcategoriesInner struct {
	// The URL to access the subcategory in a browser.
	Link string `json:"link"`
	// The display name that identifies the subcategory.
	Name string `json:"name"`
	// The unique identifier to access the subcategory. resource.
	Uri string `json:"uri"`
}

// NewCategorySubcategoriesInner instantiates a new CategorySubcategoriesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategorySubcategoriesInner(link string, name string, uri string) *CategorySubcategoriesInner {
	this := CategorySubcategoriesInner{}
	this.Link = link
	this.Name = name
	this.Uri = uri
	return &this
}

// NewCategorySubcategoriesInnerWithDefaults instantiates a new CategorySubcategoriesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategorySubcategoriesInnerWithDefaults() *CategorySubcategoriesInner {
	this := CategorySubcategoriesInner{}
	return &this
}

// GetLink returns the Link field value
func (o *CategorySubcategoriesInner) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *CategorySubcategoriesInner) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *CategorySubcategoriesInner) SetLink(v string) {
	o.Link = v
}

// GetName returns the Name field value
func (o *CategorySubcategoriesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CategorySubcategoriesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CategorySubcategoriesInner) SetName(v string) {
	o.Name = v
}

// GetUri returns the Uri field value
func (o *CategorySubcategoriesInner) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *CategorySubcategoriesInner) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *CategorySubcategoriesInner) SetUri(v string) {
	o.Uri = v
}

func (o CategorySubcategoriesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategorySubcategoriesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["link"] = o.Link
	toSerialize["name"] = o.Name
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

type NullableCategorySubcategoriesInner struct {
	value *CategorySubcategoriesInner
	isSet bool
}

func (v NullableCategorySubcategoriesInner) Get() *CategorySubcategoriesInner {
	return v.value
}

func (v *NullableCategorySubcategoriesInner) Set(val *CategorySubcategoriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCategorySubcategoriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCategorySubcategoriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategorySubcategoriesInner(val *CategorySubcategoriesInner) *NullableCategorySubcategoriesInner {
	return &NullableCategorySubcategoriesInner{value: val, isSet: true}
}

func (v NullableCategorySubcategoriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategorySubcategoriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


