/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the LiveEventAutomatedClosedCaptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LiveEventAutomatedClosedCaptions{}

// LiveEventAutomatedClosedCaptions struct for LiveEventAutomatedClosedCaptions
type LiveEventAutomatedClosedCaptions struct {
	// Whether automated closed captions can be enabled.
	AutoCcCanBeEnabled bool `json:"auto_cc_can_be_enabled"`
	// Whether the option for automated closed captions is enabled.
	AutoCcEnabled bool `json:"auto_cc_enabled"`
	// Whether automated closed captions are unlimited for the user.
	AutoCcIsUnlimited bool `json:"auto_cc_is_unlimited"`
	// A comma-separated list of keywords for enhancing the speech detection of automated closed captions.
	AutoCcKeywords string `json:"auto_cc_keywords"`
	// The language of the automated closed captions.
	AutoCcLanguage NullableString `json:"auto_cc_language"`
	// The number of minutes remaining for automated closed captions in the user's current period.
	AutoCcRemaining float32 `json:"auto_cc_remaining"`
	// The ID of the event.
	EventId float32 `json:"event_id"`
}

// NewLiveEventAutomatedClosedCaptions instantiates a new LiveEventAutomatedClosedCaptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveEventAutomatedClosedCaptions(autoCcCanBeEnabled bool, autoCcEnabled bool, autoCcIsUnlimited bool, autoCcKeywords string, autoCcLanguage NullableString, autoCcRemaining float32, eventId float32) *LiveEventAutomatedClosedCaptions {
	this := LiveEventAutomatedClosedCaptions{}
	this.AutoCcCanBeEnabled = autoCcCanBeEnabled
	this.AutoCcEnabled = autoCcEnabled
	this.AutoCcIsUnlimited = autoCcIsUnlimited
	this.AutoCcKeywords = autoCcKeywords
	this.AutoCcLanguage = autoCcLanguage
	this.AutoCcRemaining = autoCcRemaining
	this.EventId = eventId
	return &this
}

// NewLiveEventAutomatedClosedCaptionsWithDefaults instantiates a new LiveEventAutomatedClosedCaptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveEventAutomatedClosedCaptionsWithDefaults() *LiveEventAutomatedClosedCaptions {
	this := LiveEventAutomatedClosedCaptions{}
	return &this
}

// GetAutoCcCanBeEnabled returns the AutoCcCanBeEnabled field value
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcCanBeEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoCcCanBeEnabled
}

// GetAutoCcCanBeEnabledOk returns a tuple with the AutoCcCanBeEnabled field value
// and a boolean to check if the value has been set.
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcCanBeEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoCcCanBeEnabled, true
}

// SetAutoCcCanBeEnabled sets field value
func (o *LiveEventAutomatedClosedCaptions) SetAutoCcCanBeEnabled(v bool) {
	o.AutoCcCanBeEnabled = v
}

// GetAutoCcEnabled returns the AutoCcEnabled field value
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoCcEnabled
}

// GetAutoCcEnabledOk returns a tuple with the AutoCcEnabled field value
// and a boolean to check if the value has been set.
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoCcEnabled, true
}

// SetAutoCcEnabled sets field value
func (o *LiveEventAutomatedClosedCaptions) SetAutoCcEnabled(v bool) {
	o.AutoCcEnabled = v
}

// GetAutoCcIsUnlimited returns the AutoCcIsUnlimited field value
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcIsUnlimited() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoCcIsUnlimited
}

// GetAutoCcIsUnlimitedOk returns a tuple with the AutoCcIsUnlimited field value
// and a boolean to check if the value has been set.
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcIsUnlimitedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoCcIsUnlimited, true
}

// SetAutoCcIsUnlimited sets field value
func (o *LiveEventAutomatedClosedCaptions) SetAutoCcIsUnlimited(v bool) {
	o.AutoCcIsUnlimited = v
}

// GetAutoCcKeywords returns the AutoCcKeywords field value
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcKeywords() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AutoCcKeywords
}

// GetAutoCcKeywordsOk returns a tuple with the AutoCcKeywords field value
// and a boolean to check if the value has been set.
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcKeywordsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoCcKeywords, true
}

// SetAutoCcKeywords sets field value
func (o *LiveEventAutomatedClosedCaptions) SetAutoCcKeywords(v string) {
	o.AutoCcKeywords = v
}

// GetAutoCcLanguage returns the AutoCcLanguage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcLanguage() string {
	if o == nil || o.AutoCcLanguage.Get() == nil {
		var ret string
		return ret
	}

	return *o.AutoCcLanguage.Get()
}

// GetAutoCcLanguageOk returns a tuple with the AutoCcLanguage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoCcLanguage.Get(), o.AutoCcLanguage.IsSet()
}

// SetAutoCcLanguage sets field value
func (o *LiveEventAutomatedClosedCaptions) SetAutoCcLanguage(v string) {
	o.AutoCcLanguage.Set(&v)
}

// GetAutoCcRemaining returns the AutoCcRemaining field value
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcRemaining() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AutoCcRemaining
}

// GetAutoCcRemainingOk returns a tuple with the AutoCcRemaining field value
// and a boolean to check if the value has been set.
func (o *LiveEventAutomatedClosedCaptions) GetAutoCcRemainingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoCcRemaining, true
}

// SetAutoCcRemaining sets field value
func (o *LiveEventAutomatedClosedCaptions) SetAutoCcRemaining(v float32) {
	o.AutoCcRemaining = v
}

// GetEventId returns the EventId field value
func (o *LiveEventAutomatedClosedCaptions) GetEventId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value
// and a boolean to check if the value has been set.
func (o *LiveEventAutomatedClosedCaptions) GetEventIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventId, true
}

// SetEventId sets field value
func (o *LiveEventAutomatedClosedCaptions) SetEventId(v float32) {
	o.EventId = v
}

func (o LiveEventAutomatedClosedCaptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LiveEventAutomatedClosedCaptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auto_cc_can_be_enabled"] = o.AutoCcCanBeEnabled
	toSerialize["auto_cc_enabled"] = o.AutoCcEnabled
	toSerialize["auto_cc_is_unlimited"] = o.AutoCcIsUnlimited
	toSerialize["auto_cc_keywords"] = o.AutoCcKeywords
	toSerialize["auto_cc_language"] = o.AutoCcLanguage.Get()
	toSerialize["auto_cc_remaining"] = o.AutoCcRemaining
	toSerialize["event_id"] = o.EventId
	return toSerialize, nil
}

type NullableLiveEventAutomatedClosedCaptions struct {
	value *LiveEventAutomatedClosedCaptions
	isSet bool
}

func (v NullableLiveEventAutomatedClosedCaptions) Get() *LiveEventAutomatedClosedCaptions {
	return v.value
}

func (v *NullableLiveEventAutomatedClosedCaptions) Set(val *LiveEventAutomatedClosedCaptions) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveEventAutomatedClosedCaptions) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveEventAutomatedClosedCaptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveEventAutomatedClosedCaptions(val *LiveEventAutomatedClosedCaptions) *NullableLiveEventAutomatedClosedCaptions {
	return &NullableLiveEventAutomatedClosedCaptions{value: val, isSet: true}
}

func (v NullableLiveEventAutomatedClosedCaptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveEventAutomatedClosedCaptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


