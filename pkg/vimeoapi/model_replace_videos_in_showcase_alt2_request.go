/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the ReplaceVideosInShowcaseAlt2Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplaceVideosInShowcaseAlt2Request{}

// ReplaceVideosInShowcaseAlt2Request struct for ReplaceVideosInShowcaseAlt2Request
type ReplaceVideosInShowcaseAlt2Request struct {
	// A comma-separated list of video URIs corresponding to the videos to add.
	Videos string `json:"videos"`
}

// NewReplaceVideosInShowcaseAlt2Request instantiates a new ReplaceVideosInShowcaseAlt2Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplaceVideosInShowcaseAlt2Request(videos string) *ReplaceVideosInShowcaseAlt2Request {
	this := ReplaceVideosInShowcaseAlt2Request{}
	this.Videos = videos
	return &this
}

// NewReplaceVideosInShowcaseAlt2RequestWithDefaults instantiates a new ReplaceVideosInShowcaseAlt2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplaceVideosInShowcaseAlt2RequestWithDefaults() *ReplaceVideosInShowcaseAlt2Request {
	this := ReplaceVideosInShowcaseAlt2Request{}
	return &this
}

// GetVideos returns the Videos field value
func (o *ReplaceVideosInShowcaseAlt2Request) GetVideos() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Videos
}

// GetVideosOk returns a tuple with the Videos field value
// and a boolean to check if the value has been set.
func (o *ReplaceVideosInShowcaseAlt2Request) GetVideosOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Videos, true
}

// SetVideos sets field value
func (o *ReplaceVideosInShowcaseAlt2Request) SetVideos(v string) {
	o.Videos = v
}

func (o ReplaceVideosInShowcaseAlt2Request) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplaceVideosInShowcaseAlt2Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["videos"] = o.Videos
	return toSerialize, nil
}

type NullableReplaceVideosInShowcaseAlt2Request struct {
	value *ReplaceVideosInShowcaseAlt2Request
	isSet bool
}

func (v NullableReplaceVideosInShowcaseAlt2Request) Get() *ReplaceVideosInShowcaseAlt2Request {
	return v.value
}

func (v *NullableReplaceVideosInShowcaseAlt2Request) Set(val *ReplaceVideosInShowcaseAlt2Request) {
	v.value = val
	v.isSet = true
}

func (v NullableReplaceVideosInShowcaseAlt2Request) IsSet() bool {
	return v.isSet
}

func (v *NullableReplaceVideosInShowcaseAlt2Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplaceVideosInShowcaseAlt2Request(val *ReplaceVideosInShowcaseAlt2Request) *NullableReplaceVideosInShowcaseAlt2Request {
	return &NullableReplaceVideosInShowcaseAlt2Request{value: val, isSet: true}
}

func (v NullableReplaceVideosInShowcaseAlt2Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplaceVideosInShowcaseAlt2Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
