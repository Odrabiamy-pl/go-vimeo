/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the SubscriptionPlansMetadataInteractionsPurchaseUri type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPlansMetadataInteractionsPurchaseUri{}

// SubscriptionPlansMetadataInteractionsPurchaseUri The redirect URIs associated with the plan.
type SubscriptionPlansMetadataInteractionsPurchaseUri struct {
	// The redirect URI for the annual plan in the user's cart.
	Annual NullableString `json:"annual"`
	// The redirect URI for the free trial in the user's cart.
	FreeTrial NullableString `json:"free_trial"`
	// The redirect URI for the monthly plan in the user's cart.
	Monthly NullableString `json:"monthly"`
}

// NewSubscriptionPlansMetadataInteractionsPurchaseUri instantiates a new SubscriptionPlansMetadataInteractionsPurchaseUri object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPlansMetadataInteractionsPurchaseUri(annual NullableString, freeTrial NullableString, monthly NullableString) *SubscriptionPlansMetadataInteractionsPurchaseUri {
	this := SubscriptionPlansMetadataInteractionsPurchaseUri{}
	this.Annual = annual
	this.FreeTrial = freeTrial
	this.Monthly = monthly
	return &this
}

// NewSubscriptionPlansMetadataInteractionsPurchaseUriWithDefaults instantiates a new SubscriptionPlansMetadataInteractionsPurchaseUri object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPlansMetadataInteractionsPurchaseUriWithDefaults() *SubscriptionPlansMetadataInteractionsPurchaseUri {
	this := SubscriptionPlansMetadataInteractionsPurchaseUri{}
	return &this
}

// GetAnnual returns the Annual field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionPlansMetadataInteractionsPurchaseUri) GetAnnual() string {
	if o == nil || o.Annual.Get() == nil {
		var ret string
		return ret
	}

	return *o.Annual.Get()
}

// GetAnnualOk returns a tuple with the Annual field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionPlansMetadataInteractionsPurchaseUri) GetAnnualOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Annual.Get(), o.Annual.IsSet()
}

// SetAnnual sets field value
func (o *SubscriptionPlansMetadataInteractionsPurchaseUri) SetAnnual(v string) {
	o.Annual.Set(&v)
}

// GetFreeTrial returns the FreeTrial field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionPlansMetadataInteractionsPurchaseUri) GetFreeTrial() string {
	if o == nil || o.FreeTrial.Get() == nil {
		var ret string
		return ret
	}

	return *o.FreeTrial.Get()
}

// GetFreeTrialOk returns a tuple with the FreeTrial field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionPlansMetadataInteractionsPurchaseUri) GetFreeTrialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreeTrial.Get(), o.FreeTrial.IsSet()
}

// SetFreeTrial sets field value
func (o *SubscriptionPlansMetadataInteractionsPurchaseUri) SetFreeTrial(v string) {
	o.FreeTrial.Set(&v)
}

// GetMonthly returns the Monthly field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionPlansMetadataInteractionsPurchaseUri) GetMonthly() string {
	if o == nil || o.Monthly.Get() == nil {
		var ret string
		return ret
	}

	return *o.Monthly.Get()
}

// GetMonthlyOk returns a tuple with the Monthly field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionPlansMetadataInteractionsPurchaseUri) GetMonthlyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Monthly.Get(), o.Monthly.IsSet()
}

// SetMonthly sets field value
func (o *SubscriptionPlansMetadataInteractionsPurchaseUri) SetMonthly(v string) {
	o.Monthly.Set(&v)
}

func (o SubscriptionPlansMetadataInteractionsPurchaseUri) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPlansMetadataInteractionsPurchaseUri) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["annual"] = o.Annual.Get()
	toSerialize["free_trial"] = o.FreeTrial.Get()
	toSerialize["monthly"] = o.Monthly.Get()
	return toSerialize, nil
}

type NullableSubscriptionPlansMetadataInteractionsPurchaseUri struct {
	value *SubscriptionPlansMetadataInteractionsPurchaseUri
	isSet bool
}

func (v NullableSubscriptionPlansMetadataInteractionsPurchaseUri) Get() *SubscriptionPlansMetadataInteractionsPurchaseUri {
	return v.value
}

func (v *NullableSubscriptionPlansMetadataInteractionsPurchaseUri) Set(val *SubscriptionPlansMetadataInteractionsPurchaseUri) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPlansMetadataInteractionsPurchaseUri) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPlansMetadataInteractionsPurchaseUri) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPlansMetadataInteractionsPurchaseUri(val *SubscriptionPlansMetadataInteractionsPurchaseUri) *NullableSubscriptionPlansMetadataInteractionsPurchaseUri {
	return &NullableSubscriptionPlansMetadataInteractionsPurchaseUri{value: val, isSet: true}
}

func (v NullableSubscriptionPlansMetadataInteractionsPurchaseUri) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPlansMetadataInteractionsPurchaseUri) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


