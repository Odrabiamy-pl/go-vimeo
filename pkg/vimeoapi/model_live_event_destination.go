/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the LiveEventDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LiveEventDestination{}

// LiveEventDestination struct for LiveEventDestination
type LiveEventDestination struct {
	// The name of the destination target, whether a page, profile name, or the like.
	DisplayName string `json:"display_name"`
	// The ID of the destination.
	Id float32 `json:"id"`
	// Whether the destination is enabled.
	IsEnabled bool `json:"is_enabled"`
	// The ID of the live video.
	LiveClipId float32 `json:"live_clip_id"`
	// The privacy setting of the destination.  Option descriptions:  * `CONNECTIONS` - The privacy setting is `CONNECTIONS` for LinkedIn.  * `PUBLIC` - The privacy setting is `PUBLIC` for LinkedIn.  * `all_friends` - The privacy setting is `all_friends` for Facebook.  * `everyone` - The privacy setting is `everyone` for Facebook.  * `private` - The privacy setting is `private` for YouTube.  * `public` - The privacy setting is `public` for YouTube.  * `self` - The privacy setting is `self` for Facebook.  * `unlisted` - The privacy setting is `unlisted` for YouTube. 
	Privacy NullableString `json:"privacy"`
	// The destination ID of the destination service.
	ProviderBroadcastId NullableString `json:"provider_broadcast_id"`
	// The broadcast ID of the destination service.
	ProviderDestinationId NullableString `json:"provider_destination_id"`
	// The user ID of the destination service.
	ProviderUserId NullableString `json:"provider_user_id"`
	// The ID of the scheduled live video.
	ProviderVideoId NullableString `json:"provider_video_id"`
	// The time in Unix timestamp format when live streaming is scheduled to start.
	ScheduledAt NullableFloat32 `json:"scheduled_at"`
	// The name of the destination service.  Option descriptions:  * `custom_rtmp` - The destination service is custom RTMP.  * `facebook` - The destination service is Facebook Live.  * `linkedin` - The destination service is LinkedIn Live.  * `youtube` - The destination service is YouTube Live. 
	ServiceName string `json:"service_name"`
	// The status of the destination.  Option descriptions:  * `0` - The status is OK.  * `1` - An error occurred. Check the `state_message` field for details. 
	State string `json:"state"`
	// The message that describes the state of the destination.
	StateMessage NullableString `json:"state_message"`
	// The stream key for the simulcast destination.
	StreamKey NullableString `json:"stream_key"`
	// The RTMP URL to stream to.
	StreamUrl NullableString `json:"stream_url"`
	// The type of the simulcast destination.  Option descriptions:  * `channel` - The destination is a YouTube channel.  * `custom` - The destination is custom.  * `organization` - The destination is a LinkedIn organization.  * `page` - The destination is a Facebook page.  * `profile` - The destination is a Facebook or LinkedIn profile. 
	Type string `json:"type"`
	// The ID of the destination's owner.
	UserId int32 `json:"user_id"`
}

// NewLiveEventDestination instantiates a new LiveEventDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveEventDestination(displayName string, id float32, isEnabled bool, liveClipId float32, privacy NullableString, providerBroadcastId NullableString, providerDestinationId NullableString, providerUserId NullableString, providerVideoId NullableString, scheduledAt NullableFloat32, serviceName string, state string, stateMessage NullableString, streamKey NullableString, streamUrl NullableString, type_ string, userId int32) *LiveEventDestination {
	this := LiveEventDestination{}
	this.DisplayName = displayName
	this.Id = id
	this.IsEnabled = isEnabled
	this.LiveClipId = liveClipId
	this.Privacy = privacy
	this.ProviderBroadcastId = providerBroadcastId
	this.ProviderDestinationId = providerDestinationId
	this.ProviderUserId = providerUserId
	this.ProviderVideoId = providerVideoId
	this.ScheduledAt = scheduledAt
	this.ServiceName = serviceName
	this.State = state
	this.StateMessage = stateMessage
	this.StreamKey = streamKey
	this.StreamUrl = streamUrl
	this.Type = type_
	this.UserId = userId
	return &this
}

// NewLiveEventDestinationWithDefaults instantiates a new LiveEventDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveEventDestinationWithDefaults() *LiveEventDestination {
	this := LiveEventDestination{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *LiveEventDestination) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *LiveEventDestination) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *LiveEventDestination) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetId returns the Id field value
func (o *LiveEventDestination) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LiveEventDestination) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LiveEventDestination) SetId(v float32) {
	o.Id = v
}

// GetIsEnabled returns the IsEnabled field value
func (o *LiveEventDestination) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *LiveEventDestination) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *LiveEventDestination) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetLiveClipId returns the LiveClipId field value
func (o *LiveEventDestination) GetLiveClipId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LiveClipId
}

// GetLiveClipIdOk returns a tuple with the LiveClipId field value
// and a boolean to check if the value has been set.
func (o *LiveEventDestination) GetLiveClipIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LiveClipId, true
}

// SetLiveClipId sets field value
func (o *LiveEventDestination) SetLiveClipId(v float32) {
	o.LiveClipId = v
}

// GetPrivacy returns the Privacy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LiveEventDestination) GetPrivacy() string {
	if o == nil || o.Privacy.Get() == nil {
		var ret string
		return ret
	}

	return *o.Privacy.Get()
}

// GetPrivacyOk returns a tuple with the Privacy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventDestination) GetPrivacyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Privacy.Get(), o.Privacy.IsSet()
}

// SetPrivacy sets field value
func (o *LiveEventDestination) SetPrivacy(v string) {
	o.Privacy.Set(&v)
}

// GetProviderBroadcastId returns the ProviderBroadcastId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LiveEventDestination) GetProviderBroadcastId() string {
	if o == nil || o.ProviderBroadcastId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProviderBroadcastId.Get()
}

// GetProviderBroadcastIdOk returns a tuple with the ProviderBroadcastId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventDestination) GetProviderBroadcastIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProviderBroadcastId.Get(), o.ProviderBroadcastId.IsSet()
}

// SetProviderBroadcastId sets field value
func (o *LiveEventDestination) SetProviderBroadcastId(v string) {
	o.ProviderBroadcastId.Set(&v)
}

// GetProviderDestinationId returns the ProviderDestinationId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LiveEventDestination) GetProviderDestinationId() string {
	if o == nil || o.ProviderDestinationId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProviderDestinationId.Get()
}

// GetProviderDestinationIdOk returns a tuple with the ProviderDestinationId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventDestination) GetProviderDestinationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProviderDestinationId.Get(), o.ProviderDestinationId.IsSet()
}

// SetProviderDestinationId sets field value
func (o *LiveEventDestination) SetProviderDestinationId(v string) {
	o.ProviderDestinationId.Set(&v)
}

// GetProviderUserId returns the ProviderUserId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LiveEventDestination) GetProviderUserId() string {
	if o == nil || o.ProviderUserId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProviderUserId.Get()
}

// GetProviderUserIdOk returns a tuple with the ProviderUserId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventDestination) GetProviderUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProviderUserId.Get(), o.ProviderUserId.IsSet()
}

// SetProviderUserId sets field value
func (o *LiveEventDestination) SetProviderUserId(v string) {
	o.ProviderUserId.Set(&v)
}

// GetProviderVideoId returns the ProviderVideoId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LiveEventDestination) GetProviderVideoId() string {
	if o == nil || o.ProviderVideoId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProviderVideoId.Get()
}

// GetProviderVideoIdOk returns a tuple with the ProviderVideoId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventDestination) GetProviderVideoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProviderVideoId.Get(), o.ProviderVideoId.IsSet()
}

// SetProviderVideoId sets field value
func (o *LiveEventDestination) SetProviderVideoId(v string) {
	o.ProviderVideoId.Set(&v)
}

// GetScheduledAt returns the ScheduledAt field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *LiveEventDestination) GetScheduledAt() float32 {
	if o == nil || o.ScheduledAt.Get() == nil {
		var ret float32
		return ret
	}

	return *o.ScheduledAt.Get()
}

// GetScheduledAtOk returns a tuple with the ScheduledAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventDestination) GetScheduledAtOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduledAt.Get(), o.ScheduledAt.IsSet()
}

// SetScheduledAt sets field value
func (o *LiveEventDestination) SetScheduledAt(v float32) {
	o.ScheduledAt.Set(&v)
}

// GetServiceName returns the ServiceName field value
func (o *LiveEventDestination) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *LiveEventDestination) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *LiveEventDestination) SetServiceName(v string) {
	o.ServiceName = v
}

// GetState returns the State field value
func (o *LiveEventDestination) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *LiveEventDestination) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *LiveEventDestination) SetState(v string) {
	o.State = v
}

// GetStateMessage returns the StateMessage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LiveEventDestination) GetStateMessage() string {
	if o == nil || o.StateMessage.Get() == nil {
		var ret string
		return ret
	}

	return *o.StateMessage.Get()
}

// GetStateMessageOk returns a tuple with the StateMessage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventDestination) GetStateMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateMessage.Get(), o.StateMessage.IsSet()
}

// SetStateMessage sets field value
func (o *LiveEventDestination) SetStateMessage(v string) {
	o.StateMessage.Set(&v)
}

// GetStreamKey returns the StreamKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LiveEventDestination) GetStreamKey() string {
	if o == nil || o.StreamKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.StreamKey.Get()
}

// GetStreamKeyOk returns a tuple with the StreamKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventDestination) GetStreamKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreamKey.Get(), o.StreamKey.IsSet()
}

// SetStreamKey sets field value
func (o *LiveEventDestination) SetStreamKey(v string) {
	o.StreamKey.Set(&v)
}

// GetStreamUrl returns the StreamUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LiveEventDestination) GetStreamUrl() string {
	if o == nil || o.StreamUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.StreamUrl.Get()
}

// GetStreamUrlOk returns a tuple with the StreamUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventDestination) GetStreamUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreamUrl.Get(), o.StreamUrl.IsSet()
}

// SetStreamUrl sets field value
func (o *LiveEventDestination) SetStreamUrl(v string) {
	o.StreamUrl.Set(&v)
}

// GetType returns the Type field value
func (o *LiveEventDestination) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LiveEventDestination) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LiveEventDestination) SetType(v string) {
	o.Type = v
}

// GetUserId returns the UserId field value
func (o *LiveEventDestination) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *LiveEventDestination) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *LiveEventDestination) SetUserId(v int32) {
	o.UserId = v
}

func (o LiveEventDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LiveEventDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["display_name"] = o.DisplayName
	toSerialize["id"] = o.Id
	toSerialize["is_enabled"] = o.IsEnabled
	toSerialize["live_clip_id"] = o.LiveClipId
	toSerialize["privacy"] = o.Privacy.Get()
	toSerialize["provider_broadcast_id"] = o.ProviderBroadcastId.Get()
	toSerialize["provider_destination_id"] = o.ProviderDestinationId.Get()
	toSerialize["provider_user_id"] = o.ProviderUserId.Get()
	toSerialize["provider_video_id"] = o.ProviderVideoId.Get()
	toSerialize["scheduled_at"] = o.ScheduledAt.Get()
	toSerialize["service_name"] = o.ServiceName
	toSerialize["state"] = o.State
	toSerialize["state_message"] = o.StateMessage.Get()
	toSerialize["stream_key"] = o.StreamKey.Get()
	toSerialize["stream_url"] = o.StreamUrl.Get()
	toSerialize["type"] = o.Type
	toSerialize["user_id"] = o.UserId
	return toSerialize, nil
}

type NullableLiveEventDestination struct {
	value *LiveEventDestination
	isSet bool
}

func (v NullableLiveEventDestination) Get() *LiveEventDestination {
	return v.value
}

func (v *NullableLiveEventDestination) Set(val *LiveEventDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveEventDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveEventDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveEventDestination(val *LiveEventDestination) *NullableLiveEventDestination {
	return &NullableLiveEventDestination{value: val, isSet: true}
}

func (v NullableLiveEventDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveEventDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


