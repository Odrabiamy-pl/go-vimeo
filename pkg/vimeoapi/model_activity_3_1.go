/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the Activity31 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Activity31{}

// Activity31 struct for Activity31
type Activity31 struct {
	Category *Category `json:"category,omitempty"`
	Channel *Channel `json:"channel,omitempty"`
	Clip Video `json:"clip"`
	Group *Group `json:"group,omitempty"`
	Metadata Activity31Metadata `json:"metadata"`
	Tag *Tag `json:"tag,omitempty"`
	// The time that the event occurred.
	Time string `json:"time"`
	// The activity type.  Option descriptions:  * `appearance` - The activity is an appearance action.  * `category` - The activity is a category action.  * `channel` - The activity is a channel action.  * `facebook_feed` - The activity is a Facebook feed action.  * `group` - The activity is a group action.  * `like` - The activity is a like action.  * `ondemand` - The activity is a Vimeo On Demand action.  * `share` - The activity is a share action.  * `tag` - The activity is a tag action.  * `twitter_timeline` - The activity is a Twitter timeline action.  * `upload` - The activity is an upload action. 
	Type string `json:"type"`
	User *User `json:"user,omitempty"`
}

// NewActivity31 instantiates a new Activity31 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivity31(clip Video, metadata Activity31Metadata, time string, type_ string) *Activity31 {
	this := Activity31{}
	this.Clip = clip
	this.Metadata = metadata
	this.Time = time
	this.Type = type_
	return &this
}

// NewActivity31WithDefaults instantiates a new Activity31 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivity31WithDefaults() *Activity31 {
	this := Activity31{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *Activity31) GetCategory() Category {
	if o == nil || IsNil(o.Category) {
		var ret Category
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Activity31) GetCategoryOk() (*Category, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *Activity31) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given Category and assigns it to the Category field.
func (o *Activity31) SetCategory(v Category) {
	o.Category = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *Activity31) GetChannel() Channel {
	if o == nil || IsNil(o.Channel) {
		var ret Channel
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Activity31) GetChannelOk() (*Channel, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *Activity31) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given Channel and assigns it to the Channel field.
func (o *Activity31) SetChannel(v Channel) {
	o.Channel = &v
}

// GetClip returns the Clip field value
func (o *Activity31) GetClip() Video {
	if o == nil {
		var ret Video
		return ret
	}

	return o.Clip
}

// GetClipOk returns a tuple with the Clip field value
// and a boolean to check if the value has been set.
func (o *Activity31) GetClipOk() (*Video, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Clip, true
}

// SetClip sets field value
func (o *Activity31) SetClip(v Video) {
	o.Clip = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *Activity31) GetGroup() Group {
	if o == nil || IsNil(o.Group) {
		var ret Group
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Activity31) GetGroupOk() (*Group, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *Activity31) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given Group and assigns it to the Group field.
func (o *Activity31) SetGroup(v Group) {
	o.Group = &v
}

// GetMetadata returns the Metadata field value
func (o *Activity31) GetMetadata() Activity31Metadata {
	if o == nil {
		var ret Activity31Metadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *Activity31) GetMetadataOk() (*Activity31Metadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *Activity31) SetMetadata(v Activity31Metadata) {
	o.Metadata = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *Activity31) GetTag() Tag {
	if o == nil || IsNil(o.Tag) {
		var ret Tag
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Activity31) GetTagOk() (*Tag, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *Activity31) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given Tag and assigns it to the Tag field.
func (o *Activity31) SetTag(v Tag) {
	o.Tag = &v
}

// GetTime returns the Time field value
func (o *Activity31) GetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *Activity31) GetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *Activity31) SetTime(v string) {
	o.Time = v
}

// GetType returns the Type field value
func (o *Activity31) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Activity31) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Activity31) SetType(v string) {
	o.Type = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Activity31) GetUser() User {
	if o == nil || IsNil(o.User) {
		var ret User
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Activity31) GetUserOk() (*User, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Activity31) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given User and assigns it to the User field.
func (o *Activity31) SetUser(v User) {
	o.User = &v
}

func (o Activity31) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Activity31) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	toSerialize["clip"] = o.Clip
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	toSerialize["metadata"] = o.Metadata
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	toSerialize["time"] = o.Time
	toSerialize["type"] = o.Type
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableActivity31 struct {
	value *Activity31
	isSet bool
}

func (v NullableActivity31) Get() *Activity31 {
	return v.value
}

func (v *NullableActivity31) Set(val *Activity31) {
	v.value = val
	v.isSet = true
}

func (v NullableActivity31) IsSet() bool {
	return v.isSet
}

func (v *NullableActivity31) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivity31(val *Activity31) *NullableActivity31 {
	return &NullableActivity31{value: val, isSet: true}
}

func (v NullableActivity31) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivity31) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


