/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the EditVideoRequestEmbedCardsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditVideoRequestEmbedCardsInner{}

// EditVideoRequestEmbedCardsInner struct for EditVideoRequestEmbedCardsInner
type EditVideoRequestEmbedCardsInner struct {
	// The number of seconds for which the card appears.
	DisplayTime *float32 `json:"display_time,omitempty"`
	// The title of the card.
	Headline *string `json:"headline,omitempty"`
	// The UUID of the card.
	Id *string `json:"id,omitempty"`
	// The URL of the thumbnail for the card.
	ImageUrl *string `json:"image_url,omitempty"`
	// The description of the card.
	Teaser *string `json:"teaser,omitempty"`
	// The playback timestamp, given in seconds, when the card appears.
	Timecode *float32 `json:"timecode,omitempty"`
	// The URL of the card.
	Url *string `json:"url,omitempty"`
}

// NewEditVideoRequestEmbedCardsInner instantiates a new EditVideoRequestEmbedCardsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditVideoRequestEmbedCardsInner() *EditVideoRequestEmbedCardsInner {
	this := EditVideoRequestEmbedCardsInner{}
	return &this
}

// NewEditVideoRequestEmbedCardsInnerWithDefaults instantiates a new EditVideoRequestEmbedCardsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditVideoRequestEmbedCardsInnerWithDefaults() *EditVideoRequestEmbedCardsInner {
	this := EditVideoRequestEmbedCardsInner{}
	return &this
}

// GetDisplayTime returns the DisplayTime field value if set, zero value otherwise.
func (o *EditVideoRequestEmbedCardsInner) GetDisplayTime() float32 {
	if o == nil || IsNil(o.DisplayTime) {
		var ret float32
		return ret
	}
	return *o.DisplayTime
}

// GetDisplayTimeOk returns a tuple with the DisplayTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestEmbedCardsInner) GetDisplayTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.DisplayTime) {
		return nil, false
	}
	return o.DisplayTime, true
}

// HasDisplayTime returns a boolean if a field has been set.
func (o *EditVideoRequestEmbedCardsInner) HasDisplayTime() bool {
	if o != nil && !IsNil(o.DisplayTime) {
		return true
	}

	return false
}

// SetDisplayTime gets a reference to the given float32 and assigns it to the DisplayTime field.
func (o *EditVideoRequestEmbedCardsInner) SetDisplayTime(v float32) {
	o.DisplayTime = &v
}

// GetHeadline returns the Headline field value if set, zero value otherwise.
func (o *EditVideoRequestEmbedCardsInner) GetHeadline() string {
	if o == nil || IsNil(o.Headline) {
		var ret string
		return ret
	}
	return *o.Headline
}

// GetHeadlineOk returns a tuple with the Headline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestEmbedCardsInner) GetHeadlineOk() (*string, bool) {
	if o == nil || IsNil(o.Headline) {
		return nil, false
	}
	return o.Headline, true
}

// HasHeadline returns a boolean if a field has been set.
func (o *EditVideoRequestEmbedCardsInner) HasHeadline() bool {
	if o != nil && !IsNil(o.Headline) {
		return true
	}

	return false
}

// SetHeadline gets a reference to the given string and assigns it to the Headline field.
func (o *EditVideoRequestEmbedCardsInner) SetHeadline(v string) {
	o.Headline = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EditVideoRequestEmbedCardsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestEmbedCardsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EditVideoRequestEmbedCardsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EditVideoRequestEmbedCardsInner) SetId(v string) {
	o.Id = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *EditVideoRequestEmbedCardsInner) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestEmbedCardsInner) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *EditVideoRequestEmbedCardsInner) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *EditVideoRequestEmbedCardsInner) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetTeaser returns the Teaser field value if set, zero value otherwise.
func (o *EditVideoRequestEmbedCardsInner) GetTeaser() string {
	if o == nil || IsNil(o.Teaser) {
		var ret string
		return ret
	}
	return *o.Teaser
}

// GetTeaserOk returns a tuple with the Teaser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestEmbedCardsInner) GetTeaserOk() (*string, bool) {
	if o == nil || IsNil(o.Teaser) {
		return nil, false
	}
	return o.Teaser, true
}

// HasTeaser returns a boolean if a field has been set.
func (o *EditVideoRequestEmbedCardsInner) HasTeaser() bool {
	if o != nil && !IsNil(o.Teaser) {
		return true
	}

	return false
}

// SetTeaser gets a reference to the given string and assigns it to the Teaser field.
func (o *EditVideoRequestEmbedCardsInner) SetTeaser(v string) {
	o.Teaser = &v
}

// GetTimecode returns the Timecode field value if set, zero value otherwise.
func (o *EditVideoRequestEmbedCardsInner) GetTimecode() float32 {
	if o == nil || IsNil(o.Timecode) {
		var ret float32
		return ret
	}
	return *o.Timecode
}

// GetTimecodeOk returns a tuple with the Timecode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestEmbedCardsInner) GetTimecodeOk() (*float32, bool) {
	if o == nil || IsNil(o.Timecode) {
		return nil, false
	}
	return o.Timecode, true
}

// HasTimecode returns a boolean if a field has been set.
func (o *EditVideoRequestEmbedCardsInner) HasTimecode() bool {
	if o != nil && !IsNil(o.Timecode) {
		return true
	}

	return false
}

// SetTimecode gets a reference to the given float32 and assigns it to the Timecode field.
func (o *EditVideoRequestEmbedCardsInner) SetTimecode(v float32) {
	o.Timecode = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *EditVideoRequestEmbedCardsInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVideoRequestEmbedCardsInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *EditVideoRequestEmbedCardsInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *EditVideoRequestEmbedCardsInner) SetUrl(v string) {
	o.Url = &v
}

func (o EditVideoRequestEmbedCardsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditVideoRequestEmbedCardsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayTime) {
		toSerialize["display_time"] = o.DisplayTime
	}
	if !IsNil(o.Headline) {
		toSerialize["headline"] = o.Headline
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ImageUrl) {
		toSerialize["image_url"] = o.ImageUrl
	}
	if !IsNil(o.Teaser) {
		toSerialize["teaser"] = o.Teaser
	}
	if !IsNil(o.Timecode) {
		toSerialize["timecode"] = o.Timecode
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableEditVideoRequestEmbedCardsInner struct {
	value *EditVideoRequestEmbedCardsInner
	isSet bool
}

func (v NullableEditVideoRequestEmbedCardsInner) Get() *EditVideoRequestEmbedCardsInner {
	return v.value
}

func (v *NullableEditVideoRequestEmbedCardsInner) Set(val *EditVideoRequestEmbedCardsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEditVideoRequestEmbedCardsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEditVideoRequestEmbedCardsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditVideoRequestEmbedCardsInner(val *EditVideoRequestEmbedCardsInner) *NullableEditVideoRequestEmbedCardsInner {
	return &NullableEditVideoRequestEmbedCardsInner{value: val, isSet: true}
}

func (v NullableEditVideoRequestEmbedCardsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditVideoRequestEmbedCardsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
