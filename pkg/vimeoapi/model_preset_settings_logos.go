/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the PresetSettingsLogos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PresetSettingsLogos{}

// PresetSettingsLogos struct for PresetSettingsLogos
type PresetSettingsLogos struct {
	// Whether the preset includes custom logo settings.
	Custom bool `json:"custom"`
	// Whether the present includes sticky custom logo settings.
	StickyCustom bool `json:"sticky_custom"`
	// Whether the preset includes Vimeo logo settings.
	Vimeo bool `json:"vimeo"`
}

// NewPresetSettingsLogos instantiates a new PresetSettingsLogos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPresetSettingsLogos(custom bool, stickyCustom bool, vimeo bool) *PresetSettingsLogos {
	this := PresetSettingsLogos{}
	this.Custom = custom
	this.StickyCustom = stickyCustom
	this.Vimeo = vimeo
	return &this
}

// NewPresetSettingsLogosWithDefaults instantiates a new PresetSettingsLogos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPresetSettingsLogosWithDefaults() *PresetSettingsLogos {
	this := PresetSettingsLogos{}
	return &this
}

// GetCustom returns the Custom field value
func (o *PresetSettingsLogos) GetCustom() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value
// and a boolean to check if the value has been set.
func (o *PresetSettingsLogos) GetCustomOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Custom, true
}

// SetCustom sets field value
func (o *PresetSettingsLogos) SetCustom(v bool) {
	o.Custom = v
}

// GetStickyCustom returns the StickyCustom field value
func (o *PresetSettingsLogos) GetStickyCustom() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.StickyCustom
}

// GetStickyCustomOk returns a tuple with the StickyCustom field value
// and a boolean to check if the value has been set.
func (o *PresetSettingsLogos) GetStickyCustomOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StickyCustom, true
}

// SetStickyCustom sets field value
func (o *PresetSettingsLogos) SetStickyCustom(v bool) {
	o.StickyCustom = v
}

// GetVimeo returns the Vimeo field value
func (o *PresetSettingsLogos) GetVimeo() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Vimeo
}

// GetVimeoOk returns a tuple with the Vimeo field value
// and a boolean to check if the value has been set.
func (o *PresetSettingsLogos) GetVimeoOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vimeo, true
}

// SetVimeo sets field value
func (o *PresetSettingsLogos) SetVimeo(v bool) {
	o.Vimeo = v
}

func (o PresetSettingsLogos) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PresetSettingsLogos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["custom"] = o.Custom
	toSerialize["sticky_custom"] = o.StickyCustom
	toSerialize["vimeo"] = o.Vimeo
	return toSerialize, nil
}

type NullablePresetSettingsLogos struct {
	value *PresetSettingsLogos
	isSet bool
}

func (v NullablePresetSettingsLogos) Get() *PresetSettingsLogos {
	return v.value
}

func (v *NullablePresetSettingsLogos) Set(val *PresetSettingsLogos) {
	v.value = val
	v.isSet = true
}

func (v NullablePresetSettingsLogos) IsSet() bool {
	return v.isSet
}

func (v *NullablePresetSettingsLogos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePresetSettingsLogos(val *PresetSettingsLogos) *NullablePresetSettingsLogos {
	return &NullablePresetSettingsLogos{value: val, isSet: true}
}

func (v NullablePresetSettingsLogos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePresetSettingsLogos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
