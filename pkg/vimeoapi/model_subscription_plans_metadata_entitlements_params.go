/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the SubscriptionPlansMetadataEntitlementsParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPlansMetadataEntitlementsParams{}

// SubscriptionPlansMetadataEntitlementsParams The list of entitlement parameters corresponding to the tier.
type SubscriptionPlansMetadataEntitlementsParams struct {
	// The number of team seats included with the tier.
	TeamSeats NullableString `json:"team_seats"`
	// The amount of video storage for the user's periodic quota.
	VideoStoragePeriodicQuota NullableString `json:"video_storage_periodic_quota"`
	// The video storage total lifetime cap.
	VideoStorageQuotaCap NullableString `json:"video_storage_quota_cap"`
	// The video storage quota period.  Option descriptions:  * `lifetime` - The product has a lifetime video storage quota period.  * `month` - The product has a monthly video storage quota period.  * `week` - The product has a weekly video storage quota period.  * `year` - The product has a yearly video storage quota period.
	VideoStorageQuotaPeriod string `json:"video_storage_quota_period"`
	// The unit of the video storage for the user's periodic quota.  Option descriptions:  * `video_count` - The product has video storage based on video count.  * `video_size` - The product has video storage based on video size.
	VideoStorageQuotaUnit string `json:"video_storage_quota_unit"`
}

// NewSubscriptionPlansMetadataEntitlementsParams instantiates a new SubscriptionPlansMetadataEntitlementsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPlansMetadataEntitlementsParams(teamSeats NullableString, videoStoragePeriodicQuota NullableString, videoStorageQuotaCap NullableString, videoStorageQuotaPeriod string, videoStorageQuotaUnit string) *SubscriptionPlansMetadataEntitlementsParams {
	this := SubscriptionPlansMetadataEntitlementsParams{}
	this.TeamSeats = teamSeats
	this.VideoStoragePeriodicQuota = videoStoragePeriodicQuota
	this.VideoStorageQuotaCap = videoStorageQuotaCap
	this.VideoStorageQuotaPeriod = videoStorageQuotaPeriod
	this.VideoStorageQuotaUnit = videoStorageQuotaUnit
	return &this
}

// NewSubscriptionPlansMetadataEntitlementsParamsWithDefaults instantiates a new SubscriptionPlansMetadataEntitlementsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPlansMetadataEntitlementsParamsWithDefaults() *SubscriptionPlansMetadataEntitlementsParams {
	this := SubscriptionPlansMetadataEntitlementsParams{}
	return &this
}

// GetTeamSeats returns the TeamSeats field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionPlansMetadataEntitlementsParams) GetTeamSeats() string {
	if o == nil || o.TeamSeats.Get() == nil {
		var ret string
		return ret
	}

	return *o.TeamSeats.Get()
}

// GetTeamSeatsOk returns a tuple with the TeamSeats field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionPlansMetadataEntitlementsParams) GetTeamSeatsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TeamSeats.Get(), o.TeamSeats.IsSet()
}

// SetTeamSeats sets field value
func (o *SubscriptionPlansMetadataEntitlementsParams) SetTeamSeats(v string) {
	o.TeamSeats.Set(&v)
}

// GetVideoStoragePeriodicQuota returns the VideoStoragePeriodicQuota field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionPlansMetadataEntitlementsParams) GetVideoStoragePeriodicQuota() string {
	if o == nil || o.VideoStoragePeriodicQuota.Get() == nil {
		var ret string
		return ret
	}

	return *o.VideoStoragePeriodicQuota.Get()
}

// GetVideoStoragePeriodicQuotaOk returns a tuple with the VideoStoragePeriodicQuota field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionPlansMetadataEntitlementsParams) GetVideoStoragePeriodicQuotaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoStoragePeriodicQuota.Get(), o.VideoStoragePeriodicQuota.IsSet()
}

// SetVideoStoragePeriodicQuota sets field value
func (o *SubscriptionPlansMetadataEntitlementsParams) SetVideoStoragePeriodicQuota(v string) {
	o.VideoStoragePeriodicQuota.Set(&v)
}

// GetVideoStorageQuotaCap returns the VideoStorageQuotaCap field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionPlansMetadataEntitlementsParams) GetVideoStorageQuotaCap() string {
	if o == nil || o.VideoStorageQuotaCap.Get() == nil {
		var ret string
		return ret
	}

	return *o.VideoStorageQuotaCap.Get()
}

// GetVideoStorageQuotaCapOk returns a tuple with the VideoStorageQuotaCap field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionPlansMetadataEntitlementsParams) GetVideoStorageQuotaCapOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoStorageQuotaCap.Get(), o.VideoStorageQuotaCap.IsSet()
}

// SetVideoStorageQuotaCap sets field value
func (o *SubscriptionPlansMetadataEntitlementsParams) SetVideoStorageQuotaCap(v string) {
	o.VideoStorageQuotaCap.Set(&v)
}

// GetVideoStorageQuotaPeriod returns the VideoStorageQuotaPeriod field value
func (o *SubscriptionPlansMetadataEntitlementsParams) GetVideoStorageQuotaPeriod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VideoStorageQuotaPeriod
}

// GetVideoStorageQuotaPeriodOk returns a tuple with the VideoStorageQuotaPeriod field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansMetadataEntitlementsParams) GetVideoStorageQuotaPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VideoStorageQuotaPeriod, true
}

// SetVideoStorageQuotaPeriod sets field value
func (o *SubscriptionPlansMetadataEntitlementsParams) SetVideoStorageQuotaPeriod(v string) {
	o.VideoStorageQuotaPeriod = v
}

// GetVideoStorageQuotaUnit returns the VideoStorageQuotaUnit field value
func (o *SubscriptionPlansMetadataEntitlementsParams) GetVideoStorageQuotaUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VideoStorageQuotaUnit
}

// GetVideoStorageQuotaUnitOk returns a tuple with the VideoStorageQuotaUnit field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansMetadataEntitlementsParams) GetVideoStorageQuotaUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VideoStorageQuotaUnit, true
}

// SetVideoStorageQuotaUnit sets field value
func (o *SubscriptionPlansMetadataEntitlementsParams) SetVideoStorageQuotaUnit(v string) {
	o.VideoStorageQuotaUnit = v
}

func (o SubscriptionPlansMetadataEntitlementsParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPlansMetadataEntitlementsParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["team_seats"] = o.TeamSeats.Get()
	toSerialize["video_storage_periodic_quota"] = o.VideoStoragePeriodicQuota.Get()
	toSerialize["video_storage_quota_cap"] = o.VideoStorageQuotaCap.Get()
	toSerialize["video_storage_quota_period"] = o.VideoStorageQuotaPeriod
	toSerialize["video_storage_quota_unit"] = o.VideoStorageQuotaUnit
	return toSerialize, nil
}

type NullableSubscriptionPlansMetadataEntitlementsParams struct {
	value *SubscriptionPlansMetadataEntitlementsParams
	isSet bool
}

func (v NullableSubscriptionPlansMetadataEntitlementsParams) Get() *SubscriptionPlansMetadataEntitlementsParams {
	return v.value
}

func (v *NullableSubscriptionPlansMetadataEntitlementsParams) Set(val *SubscriptionPlansMetadataEntitlementsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPlansMetadataEntitlementsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPlansMetadataEntitlementsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPlansMetadataEntitlementsParams(val *SubscriptionPlansMetadataEntitlementsParams) *NullableSubscriptionPlansMetadataEntitlementsParams {
	return &NullableSubscriptionPlansMetadataEntitlementsParams{value: val, isSet: true}
}

func (v NullableSubscriptionPlansMetadataEntitlementsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPlansMetadataEntitlementsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
