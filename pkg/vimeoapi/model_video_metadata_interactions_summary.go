/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VideoMetadataInteractionsSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoMetadataInteractionsSummary{}

// VideoMetadataInteractionsSummary Information about whether the current user can create or get a summary for the video.
type VideoMetadataInteractionsSummary struct {
	// Whether the summary method is disabled.
	Disabled bool `json:"disabled"`
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// TThe reason why the summary method is disabled.
	Reason NullableString `json:"reason"`
	// The API URI that resolves to the connection data.
	Uri string `json:"uri"`
}

type _VideoMetadataInteractionsSummary VideoMetadataInteractionsSummary

// NewVideoMetadataInteractionsSummary instantiates a new VideoMetadataInteractionsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoMetadataInteractionsSummary(disabled bool, options []string, reason NullableString, uri string) *VideoMetadataInteractionsSummary {
	this := VideoMetadataInteractionsSummary{}
	this.Disabled = disabled
	this.Options = options
	this.Reason = reason
	this.Uri = uri
	return &this
}

// NewVideoMetadataInteractionsSummaryWithDefaults instantiates a new VideoMetadataInteractionsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoMetadataInteractionsSummaryWithDefaults() *VideoMetadataInteractionsSummary {
	this := VideoMetadataInteractionsSummary{}
	return &this
}

// GetDisabled returns the Disabled field value
func (o *VideoMetadataInteractionsSummary) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsSummary) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *VideoMetadataInteractionsSummary) SetDisabled(v bool) {
	o.Disabled = v
}

// GetOptions returns the Options field value
func (o *VideoMetadataInteractionsSummary) GetOptions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsSummary) GetOptionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Options, true
}

// SetOptions sets field value
func (o *VideoMetadataInteractionsSummary) SetOptions(v []string) {
	o.Options = v
}

// GetReason returns the Reason field value
// If the value is explicit nil, the zero value for string will be returned
func (o *VideoMetadataInteractionsSummary) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}

	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VideoMetadataInteractionsSummary) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// SetReason sets field value
func (o *VideoMetadataInteractionsSummary) SetReason(v string) {
	o.Reason.Set(&v)
}

// GetUri returns the Uri field value
func (o *VideoMetadataInteractionsSummary) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsSummary) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *VideoMetadataInteractionsSummary) SetUri(v string) {
	o.Uri = v
}

func (o VideoMetadataInteractionsSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoMetadataInteractionsSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["disabled"] = o.Disabled
	toSerialize["options"] = o.Options
	toSerialize["reason"] = o.Reason.Get()
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

func (o *VideoMetadataInteractionsSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"disabled",
		"options",
		"reason",
		"uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVideoMetadataInteractionsSummary := _VideoMetadataInteractionsSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVideoMetadataInteractionsSummary)

	if err != nil {
		return err
	}

	*o = VideoMetadataInteractionsSummary(varVideoMetadataInteractionsSummary)

	return err
}

type NullableVideoMetadataInteractionsSummary struct {
	value *VideoMetadataInteractionsSummary
	isSet bool
}

func (v NullableVideoMetadataInteractionsSummary) Get() *VideoMetadataInteractionsSummary {
	return v.value
}

func (v *NullableVideoMetadataInteractionsSummary) Set(val *VideoMetadataInteractionsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoMetadataInteractionsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoMetadataInteractionsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoMetadataInteractionsSummary(val *VideoMetadataInteractionsSummary) *NullableVideoMetadataInteractionsSummary {
	return &NullableVideoMetadataInteractionsSummary{value: val, isSet: true}
}

func (v NullableVideoMetadataInteractionsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoMetadataInteractionsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


