/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EmailCaptureForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailCaptureForm{}

// EmailCaptureForm struct for EmailCaptureForm
type EmailCaptureForm struct {
	// The ID of the video associated with the form. If there is no associated video, the value of this field is `-1`.
	ClipId float32 `json:"clip_id"`
	// The time in ISO 8601 format when the form was created.
	CreatedTime string `json:"created_time"`
	// The fields to show in the form.
	CustomFields []EmailCaptureFormCustomFieldsInner `json:"custom_fields"`
	// The ID of the logo image to display on the form.
	CustomLogo float32 `json:"custom_logo"`
	// The message to display on the form.
	CustomMessage string `json:"custom_message"`
	// The mailing lists on a third-party email service provider that submissions should get synced to.
	EmailLists []EmailCaptureFormEmailListsInner `json:"email_lists"`
	// The hidden fields to show only in the webinar management page. These fields are hidden in the player registration form.
	HiddenFields []EmailCaptureFormCustomFieldsInner `json:"hidden_fields"`
	// The ID of the email capture form.
	Id float32 `json:"id"`
	// When the form appears relative to the video playback.  Option descriptions:  * `after-video` - The form appears immediately after the video ends.  * `before-video` - The form appears before the video begins.  * `during-video` - The form appears during the video at the time specified by the **timecode** field. 
	Position string `json:"position"`
	// The URL of the privacy policy related to the form.
	PrivacyPolicy string `json:"privacy_policy"`
	// Whether the user can skip the form.
	Skippable bool `json:"skippable"`
	// The timecode for when the form appears. This field is used when the value of **position** is `during-video`.
	Timecode string `json:"timecode"`
	// The canonical relative URI of the video's email capture form.
	Uri string `json:"uri"`
}

type _EmailCaptureForm EmailCaptureForm

// NewEmailCaptureForm instantiates a new EmailCaptureForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailCaptureForm(clipId float32, createdTime string, customFields []EmailCaptureFormCustomFieldsInner, customLogo float32, customMessage string, emailLists []EmailCaptureFormEmailListsInner, hiddenFields []EmailCaptureFormCustomFieldsInner, id float32, position string, privacyPolicy string, skippable bool, timecode string, uri string) *EmailCaptureForm {
	this := EmailCaptureForm{}
	this.ClipId = clipId
	this.CreatedTime = createdTime
	this.CustomFields = customFields
	this.CustomLogo = customLogo
	this.CustomMessage = customMessage
	this.EmailLists = emailLists
	this.HiddenFields = hiddenFields
	this.Id = id
	this.Position = position
	this.PrivacyPolicy = privacyPolicy
	this.Skippable = skippable
	this.Timecode = timecode
	this.Uri = uri
	return &this
}

// NewEmailCaptureFormWithDefaults instantiates a new EmailCaptureForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailCaptureFormWithDefaults() *EmailCaptureForm {
	this := EmailCaptureForm{}
	return &this
}

// GetClipId returns the ClipId field value
func (o *EmailCaptureForm) GetClipId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ClipId
}

// GetClipIdOk returns a tuple with the ClipId field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetClipIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClipId, true
}

// SetClipId sets field value
func (o *EmailCaptureForm) SetClipId(v float32) {
	o.ClipId = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *EmailCaptureForm) GetCreatedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetCreatedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *EmailCaptureForm) SetCreatedTime(v string) {
	o.CreatedTime = v
}

// GetCustomFields returns the CustomFields field value
func (o *EmailCaptureForm) GetCustomFields() []EmailCaptureFormCustomFieldsInner {
	if o == nil {
		var ret []EmailCaptureFormCustomFieldsInner
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetCustomFieldsOk() ([]EmailCaptureFormCustomFieldsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *EmailCaptureForm) SetCustomFields(v []EmailCaptureFormCustomFieldsInner) {
	o.CustomFields = v
}

// GetCustomLogo returns the CustomLogo field value
func (o *EmailCaptureForm) GetCustomLogo() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CustomLogo
}

// GetCustomLogoOk returns a tuple with the CustomLogo field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetCustomLogoOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomLogo, true
}

// SetCustomLogo sets field value
func (o *EmailCaptureForm) SetCustomLogo(v float32) {
	o.CustomLogo = v
}

// GetCustomMessage returns the CustomMessage field value
func (o *EmailCaptureForm) GetCustomMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomMessage
}

// GetCustomMessageOk returns a tuple with the CustomMessage field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetCustomMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomMessage, true
}

// SetCustomMessage sets field value
func (o *EmailCaptureForm) SetCustomMessage(v string) {
	o.CustomMessage = v
}

// GetEmailLists returns the EmailLists field value
func (o *EmailCaptureForm) GetEmailLists() []EmailCaptureFormEmailListsInner {
	if o == nil {
		var ret []EmailCaptureFormEmailListsInner
		return ret
	}

	return o.EmailLists
}

// GetEmailListsOk returns a tuple with the EmailLists field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetEmailListsOk() ([]EmailCaptureFormEmailListsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailLists, true
}

// SetEmailLists sets field value
func (o *EmailCaptureForm) SetEmailLists(v []EmailCaptureFormEmailListsInner) {
	o.EmailLists = v
}

// GetHiddenFields returns the HiddenFields field value
func (o *EmailCaptureForm) GetHiddenFields() []EmailCaptureFormCustomFieldsInner {
	if o == nil {
		var ret []EmailCaptureFormCustomFieldsInner
		return ret
	}

	return o.HiddenFields
}

// GetHiddenFieldsOk returns a tuple with the HiddenFields field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetHiddenFieldsOk() ([]EmailCaptureFormCustomFieldsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.HiddenFields, true
}

// SetHiddenFields sets field value
func (o *EmailCaptureForm) SetHiddenFields(v []EmailCaptureFormCustomFieldsInner) {
	o.HiddenFields = v
}

// GetId returns the Id field value
func (o *EmailCaptureForm) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EmailCaptureForm) SetId(v float32) {
	o.Id = v
}

// GetPosition returns the Position field value
func (o *EmailCaptureForm) GetPosition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetPositionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *EmailCaptureForm) SetPosition(v string) {
	o.Position = v
}

// GetPrivacyPolicy returns the PrivacyPolicy field value
func (o *EmailCaptureForm) GetPrivacyPolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivacyPolicy
}

// GetPrivacyPolicyOk returns a tuple with the PrivacyPolicy field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetPrivacyPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivacyPolicy, true
}

// SetPrivacyPolicy sets field value
func (o *EmailCaptureForm) SetPrivacyPolicy(v string) {
	o.PrivacyPolicy = v
}

// GetSkippable returns the Skippable field value
func (o *EmailCaptureForm) GetSkippable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Skippable
}

// GetSkippableOk returns a tuple with the Skippable field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetSkippableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Skippable, true
}

// SetSkippable sets field value
func (o *EmailCaptureForm) SetSkippable(v bool) {
	o.Skippable = v
}

// GetTimecode returns the Timecode field value
func (o *EmailCaptureForm) GetTimecode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timecode
}

// GetTimecodeOk returns a tuple with the Timecode field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetTimecodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timecode, true
}

// SetTimecode sets field value
func (o *EmailCaptureForm) SetTimecode(v string) {
	o.Timecode = v
}

// GetUri returns the Uri field value
func (o *EmailCaptureForm) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *EmailCaptureForm) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *EmailCaptureForm) SetUri(v string) {
	o.Uri = v
}

func (o EmailCaptureForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailCaptureForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clip_id"] = o.ClipId
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["custom_fields"] = o.CustomFields
	toSerialize["custom_logo"] = o.CustomLogo
	toSerialize["custom_message"] = o.CustomMessage
	toSerialize["email_lists"] = o.EmailLists
	toSerialize["hidden_fields"] = o.HiddenFields
	toSerialize["id"] = o.Id
	toSerialize["position"] = o.Position
	toSerialize["privacy_policy"] = o.PrivacyPolicy
	toSerialize["skippable"] = o.Skippable
	toSerialize["timecode"] = o.Timecode
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

func (o *EmailCaptureForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clip_id",
		"created_time",
		"custom_fields",
		"custom_logo",
		"custom_message",
		"email_lists",
		"hidden_fields",
		"id",
		"position",
		"privacy_policy",
		"skippable",
		"timecode",
		"uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmailCaptureForm := _EmailCaptureForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEmailCaptureForm)

	if err != nil {
		return err
	}

	*o = EmailCaptureForm(varEmailCaptureForm)

	return err
}

type NullableEmailCaptureForm struct {
	value *EmailCaptureForm
	isSet bool
}

func (v NullableEmailCaptureForm) Get() *EmailCaptureForm {
	return v.value
}

func (v *NullableEmailCaptureForm) Set(val *EmailCaptureForm) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailCaptureForm) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailCaptureForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailCaptureForm(val *EmailCaptureForm) *NullableEmailCaptureForm {
	return &NullableEmailCaptureForm{value: val, isSet: true}
}

func (v NullableEmailCaptureForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailCaptureForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


