/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the CreateEmbedPresetsAlt1RequestEmbedColors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEmbedPresetsAlt1RequestEmbedColors{}

// CreateEmbedPresetsAlt1RequestEmbedColors struct for CreateEmbedPresetsAlt1RequestEmbedColors
type CreateEmbedPresetsAlt1RequestEmbedColors struct {
	// The hexadecimal color code of the fourth player color, which controls the player background color.
	ColorFour *string `json:"color_four,omitempty"`
	// The hexadecimal color code of the first player color, which controls the color of the progress bar, buttons, and more.
	ColorOne *string `json:"color_one,omitempty"`
	// The hexadecimal color code of the third player color, which controls the color of text and icons.
	ColorThree *string `json:"color_three,omitempty"`
	// The hexadecimal color code of the second player color, which controls the player accent color.
	ColorTwo *string `json:"color_two,omitempty"`
}

// NewCreateEmbedPresetsAlt1RequestEmbedColors instantiates a new CreateEmbedPresetsAlt1RequestEmbedColors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEmbedPresetsAlt1RequestEmbedColors() *CreateEmbedPresetsAlt1RequestEmbedColors {
	this := CreateEmbedPresetsAlt1RequestEmbedColors{}
	return &this
}

// NewCreateEmbedPresetsAlt1RequestEmbedColorsWithDefaults instantiates a new CreateEmbedPresetsAlt1RequestEmbedColors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEmbedPresetsAlt1RequestEmbedColorsWithDefaults() *CreateEmbedPresetsAlt1RequestEmbedColors {
	this := CreateEmbedPresetsAlt1RequestEmbedColors{}
	return &this
}

// GetColorFour returns the ColorFour field value if set, zero value otherwise.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) GetColorFour() string {
	if o == nil || IsNil(o.ColorFour) {
		var ret string
		return ret
	}
	return *o.ColorFour
}

// GetColorFourOk returns a tuple with the ColorFour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) GetColorFourOk() (*string, bool) {
	if o == nil || IsNil(o.ColorFour) {
		return nil, false
	}
	return o.ColorFour, true
}

// HasColorFour returns a boolean if a field has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) HasColorFour() bool {
	if o != nil && !IsNil(o.ColorFour) {
		return true
	}

	return false
}

// SetColorFour gets a reference to the given string and assigns it to the ColorFour field.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) SetColorFour(v string) {
	o.ColorFour = &v
}

// GetColorOne returns the ColorOne field value if set, zero value otherwise.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) GetColorOne() string {
	if o == nil || IsNil(o.ColorOne) {
		var ret string
		return ret
	}
	return *o.ColorOne
}

// GetColorOneOk returns a tuple with the ColorOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) GetColorOneOk() (*string, bool) {
	if o == nil || IsNil(o.ColorOne) {
		return nil, false
	}
	return o.ColorOne, true
}

// HasColorOne returns a boolean if a field has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) HasColorOne() bool {
	if o != nil && !IsNil(o.ColorOne) {
		return true
	}

	return false
}

// SetColorOne gets a reference to the given string and assigns it to the ColorOne field.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) SetColorOne(v string) {
	o.ColorOne = &v
}

// GetColorThree returns the ColorThree field value if set, zero value otherwise.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) GetColorThree() string {
	if o == nil || IsNil(o.ColorThree) {
		var ret string
		return ret
	}
	return *o.ColorThree
}

// GetColorThreeOk returns a tuple with the ColorThree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) GetColorThreeOk() (*string, bool) {
	if o == nil || IsNil(o.ColorThree) {
		return nil, false
	}
	return o.ColorThree, true
}

// HasColorThree returns a boolean if a field has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) HasColorThree() bool {
	if o != nil && !IsNil(o.ColorThree) {
		return true
	}

	return false
}

// SetColorThree gets a reference to the given string and assigns it to the ColorThree field.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) SetColorThree(v string) {
	o.ColorThree = &v
}

// GetColorTwo returns the ColorTwo field value if set, zero value otherwise.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) GetColorTwo() string {
	if o == nil || IsNil(o.ColorTwo) {
		var ret string
		return ret
	}
	return *o.ColorTwo
}

// GetColorTwoOk returns a tuple with the ColorTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) GetColorTwoOk() (*string, bool) {
	if o == nil || IsNil(o.ColorTwo) {
		return nil, false
	}
	return o.ColorTwo, true
}

// HasColorTwo returns a boolean if a field has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) HasColorTwo() bool {
	if o != nil && !IsNil(o.ColorTwo) {
		return true
	}

	return false
}

// SetColorTwo gets a reference to the given string and assigns it to the ColorTwo field.
func (o *CreateEmbedPresetsAlt1RequestEmbedColors) SetColorTwo(v string) {
	o.ColorTwo = &v
}

func (o CreateEmbedPresetsAlt1RequestEmbedColors) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEmbedPresetsAlt1RequestEmbedColors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ColorFour) {
		toSerialize["color_four"] = o.ColorFour
	}
	if !IsNil(o.ColorOne) {
		toSerialize["color_one"] = o.ColorOne
	}
	if !IsNil(o.ColorThree) {
		toSerialize["color_three"] = o.ColorThree
	}
	if !IsNil(o.ColorTwo) {
		toSerialize["color_two"] = o.ColorTwo
	}
	return toSerialize, nil
}

type NullableCreateEmbedPresetsAlt1RequestEmbedColors struct {
	value *CreateEmbedPresetsAlt1RequestEmbedColors
	isSet bool
}

func (v NullableCreateEmbedPresetsAlt1RequestEmbedColors) Get() *CreateEmbedPresetsAlt1RequestEmbedColors {
	return v.value
}

func (v *NullableCreateEmbedPresetsAlt1RequestEmbedColors) Set(val *CreateEmbedPresetsAlt1RequestEmbedColors) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEmbedPresetsAlt1RequestEmbedColors) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEmbedPresetsAlt1RequestEmbedColors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEmbedPresetsAlt1RequestEmbedColors(val *CreateEmbedPresetsAlt1RequestEmbedColors) *NullableCreateEmbedPresetsAlt1RequestEmbedColors {
	return &NullableCreateEmbedPresetsAlt1RequestEmbedColors{value: val, isSet: true}
}

func (v NullableCreateEmbedPresetsAlt1RequestEmbedColors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEmbedPresetsAlt1RequestEmbedColors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
