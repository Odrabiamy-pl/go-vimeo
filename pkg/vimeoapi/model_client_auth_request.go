/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClientAuthRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientAuthRequest{}

// ClientAuthRequest struct for ClientAuthRequest
type ClientAuthRequest struct {
	// The grant type. The value of this field must be `client_credentials`.
	GrantType string `json:"grant_type"`
	// A space-separated list of the authentication scopes to access. The default is `public`.
	Scope string `json:"scope"`
}

type _ClientAuthRequest ClientAuthRequest

// NewClientAuthRequest instantiates a new ClientAuthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientAuthRequest(grantType string, scope string) *ClientAuthRequest {
	this := ClientAuthRequest{}
	this.GrantType = grantType
	this.Scope = scope
	return &this
}

// NewClientAuthRequestWithDefaults instantiates a new ClientAuthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientAuthRequestWithDefaults() *ClientAuthRequest {
	this := ClientAuthRequest{}
	return &this
}

// GetGrantType returns the GrantType field value
func (o *ClientAuthRequest) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *ClientAuthRequest) GetGrantTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *ClientAuthRequest) SetGrantType(v string) {
	o.GrantType = v
}

// GetScope returns the Scope field value
func (o *ClientAuthRequest) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *ClientAuthRequest) GetScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *ClientAuthRequest) SetScope(v string) {
	o.Scope = v
}

func (o ClientAuthRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAuthRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["grant_type"] = o.GrantType
	toSerialize["scope"] = o.Scope
	return toSerialize, nil
}

func (o *ClientAuthRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"grant_type",
		"scope",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClientAuthRequest := _ClientAuthRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClientAuthRequest)

	if err != nil {
		return err
	}

	*o = ClientAuthRequest(varClientAuthRequest)

	return err
}

type NullableClientAuthRequest struct {
	value *ClientAuthRequest
	isSet bool
}

func (v NullableClientAuthRequest) Get() *ClientAuthRequest {
	return v.value
}

func (v *NullableClientAuthRequest) Set(val *ClientAuthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAuthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAuthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAuthRequest(val *ClientAuthRequest) *NullableClientAuthRequest {
	return &NullableClientAuthRequest{value: val, isSet: true}
}

func (v NullableClientAuthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAuthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


