/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the VideoMetadataInteractionsLike type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoMetadataInteractionsLike{}

// VideoMetadataInteractionsLike Information about whether the user has liked this video.
type VideoMetadataInteractionsLike struct {
	// Whether the user has liked the video.
	Added bool `json:"added"`
	// The time in ISO 8601 format when the user liked the video.
	AddedTime string `json:"added_time"`
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// Whether the user can access the video's number of likes.
	ShowCount bool `json:"show_count"`
	// The API URI that resolves to the connection data.
	Uri string `json:"uri"`
}

// NewVideoMetadataInteractionsLike instantiates a new VideoMetadataInteractionsLike object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoMetadataInteractionsLike(added bool, addedTime string, options []string, showCount bool, uri string) *VideoMetadataInteractionsLike {
	this := VideoMetadataInteractionsLike{}
	this.Added = added
	this.AddedTime = addedTime
	this.Options = options
	this.ShowCount = showCount
	this.Uri = uri
	return &this
}

// NewVideoMetadataInteractionsLikeWithDefaults instantiates a new VideoMetadataInteractionsLike object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoMetadataInteractionsLikeWithDefaults() *VideoMetadataInteractionsLike {
	this := VideoMetadataInteractionsLike{}
	return &this
}

// GetAdded returns the Added field value
func (o *VideoMetadataInteractionsLike) GetAdded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Added
}

// GetAddedOk returns a tuple with the Added field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsLike) GetAddedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Added, true
}

// SetAdded sets field value
func (o *VideoMetadataInteractionsLike) SetAdded(v bool) {
	o.Added = v
}

// GetAddedTime returns the AddedTime field value
func (o *VideoMetadataInteractionsLike) GetAddedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddedTime
}

// GetAddedTimeOk returns a tuple with the AddedTime field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsLike) GetAddedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddedTime, true
}

// SetAddedTime sets field value
func (o *VideoMetadataInteractionsLike) SetAddedTime(v string) {
	o.AddedTime = v
}

// GetOptions returns the Options field value
func (o *VideoMetadataInteractionsLike) GetOptions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsLike) GetOptionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Options, true
}

// SetOptions sets field value
func (o *VideoMetadataInteractionsLike) SetOptions(v []string) {
	o.Options = v
}

// GetShowCount returns the ShowCount field value
func (o *VideoMetadataInteractionsLike) GetShowCount() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShowCount
}

// GetShowCountOk returns a tuple with the ShowCount field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsLike) GetShowCountOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShowCount, true
}

// SetShowCount sets field value
func (o *VideoMetadataInteractionsLike) SetShowCount(v bool) {
	o.ShowCount = v
}

// GetUri returns the Uri field value
func (o *VideoMetadataInteractionsLike) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsLike) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *VideoMetadataInteractionsLike) SetUri(v string) {
	o.Uri = v
}

func (o VideoMetadataInteractionsLike) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoMetadataInteractionsLike) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["added"] = o.Added
	toSerialize["added_time"] = o.AddedTime
	toSerialize["options"] = o.Options
	toSerialize["show_count"] = o.ShowCount
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

type NullableVideoMetadataInteractionsLike struct {
	value *VideoMetadataInteractionsLike
	isSet bool
}

func (v NullableVideoMetadataInteractionsLike) Get() *VideoMetadataInteractionsLike {
	return v.value
}

func (v *NullableVideoMetadataInteractionsLike) Set(val *VideoMetadataInteractionsLike) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoMetadataInteractionsLike) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoMetadataInteractionsLike) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoMetadataInteractionsLike(val *VideoMetadataInteractionsLike) *NullableVideoMetadataInteractionsLike {
	return &NullableVideoMetadataInteractionsLike{value: val, isSet: true}
}

func (v NullableVideoMetadataInteractionsLike) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoMetadataInteractionsLike) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


