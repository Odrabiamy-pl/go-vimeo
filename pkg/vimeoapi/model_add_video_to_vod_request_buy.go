/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the AddVideoToVodRequestBuy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVideoToVodRequestBuy{}

// AddVideoToVodRequestBuy struct for AddVideoToVodRequestBuy
type AddVideoToVodRequestBuy struct {
	Price *AddVideoToVodRequestBuyPrice `json:"price,omitempty"`
}

// NewAddVideoToVodRequestBuy instantiates a new AddVideoToVodRequestBuy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVideoToVodRequestBuy() *AddVideoToVodRequestBuy {
	this := AddVideoToVodRequestBuy{}
	return &this
}

// NewAddVideoToVodRequestBuyWithDefaults instantiates a new AddVideoToVodRequestBuy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVideoToVodRequestBuyWithDefaults() *AddVideoToVodRequestBuy {
	this := AddVideoToVodRequestBuy{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *AddVideoToVodRequestBuy) GetPrice() AddVideoToVodRequestBuyPrice {
	if o == nil || IsNil(o.Price) {
		var ret AddVideoToVodRequestBuyPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestBuy) GetPriceOk() (*AddVideoToVodRequestBuyPrice, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *AddVideoToVodRequestBuy) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given AddVideoToVodRequestBuyPrice and assigns it to the Price field.
func (o *AddVideoToVodRequestBuy) SetPrice(v AddVideoToVodRequestBuyPrice) {
	o.Price = &v
}

func (o AddVideoToVodRequestBuy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVideoToVodRequestBuy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableAddVideoToVodRequestBuy struct {
	value *AddVideoToVodRequestBuy
	isSet bool
}

func (v NullableAddVideoToVodRequestBuy) Get() *AddVideoToVodRequestBuy {
	return v.value
}

func (v *NullableAddVideoToVodRequestBuy) Set(val *AddVideoToVodRequestBuy) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVideoToVodRequestBuy) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVideoToVodRequestBuy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVideoToVodRequestBuy(val *AddVideoToVodRequestBuy) *NullableAddVideoToVodRequestBuy {
	return &NullableAddVideoToVodRequestBuy{value: val, isSet: true}
}

func (v NullableAddVideoToVodRequestBuy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVideoToVodRequestBuy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
