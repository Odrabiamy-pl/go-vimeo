/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the PaymentMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethod{}

// PaymentMethod struct for PaymentMethod
type PaymentMethod struct {
	// The ID of the account.
	AccountId string `json:"account_id"`
	Card *PaymentMethodCard `json:"card,omitempty"`
	// The time when the payment method was created.
	CreatedAt string `json:"created_at"`
	// The time when the payment method was disabled.
	DisabledAt string `json:"disabled_at"`
	// The ID of the payment method.
	Id string `json:"id"`
	// Whether the payment method is the default payment method for the account.
	IsDefault bool `json:"is_default"`
	// The type of payment method.  Option descriptions:  * `0` - The payment method type is unspecified.  * `1` - The payment method is a card.  * `2` - The payment method is a PayPal account.  * `3` - The payment method is a bank account.  * `4` - The payment method is Apple Pay.  * `5` - The payment method is Google Pay. 
	Type string `json:"type"`
	// The time when the payment method was last updated.
	UpdatedAt string `json:"updated_at"`
}

// NewPaymentMethod instantiates a new PaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethod(accountId string, createdAt string, disabledAt string, id string, isDefault bool, type_ string, updatedAt string) *PaymentMethod {
	this := PaymentMethod{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.DisabledAt = disabledAt
	this.Id = id
	this.IsDefault = isDefault
	this.Type = type_
	this.UpdatedAt = updatedAt
	return &this
}

// NewPaymentMethodWithDefaults instantiates a new PaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodWithDefaults() *PaymentMethod {
	this := PaymentMethod{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *PaymentMethod) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *PaymentMethod) SetAccountId(v string) {
	o.AccountId = v
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *PaymentMethod) GetCard() PaymentMethodCard {
	if o == nil || IsNil(o.Card) {
		var ret PaymentMethodCard
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetCardOk() (*PaymentMethodCard, bool) {
	if o == nil || IsNil(o.Card) {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *PaymentMethod) HasCard() bool {
	if o != nil && !IsNil(o.Card) {
		return true
	}

	return false
}

// SetCard gets a reference to the given PaymentMethodCard and assigns it to the Card field.
func (o *PaymentMethod) SetCard(v PaymentMethodCard) {
	o.Card = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PaymentMethod) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PaymentMethod) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDisabledAt returns the DisabledAt field value
func (o *PaymentMethod) GetDisabledAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisabledAt
}

// GetDisabledAtOk returns a tuple with the DisabledAt field value
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetDisabledAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisabledAt, true
}

// SetDisabledAt sets field value
func (o *PaymentMethod) SetDisabledAt(v string) {
	o.DisabledAt = v
}

// GetId returns the Id field value
func (o *PaymentMethod) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PaymentMethod) SetId(v string) {
	o.Id = v
}

// GetIsDefault returns the IsDefault field value
func (o *PaymentMethod) GetIsDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDefault, true
}

// SetIsDefault sets field value
func (o *PaymentMethod) SetIsDefault(v bool) {
	o.IsDefault = v
}

// GetType returns the Type field value
func (o *PaymentMethod) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PaymentMethod) SetType(v string) {
	o.Type = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PaymentMethod) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PaymentMethod) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o PaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	if !IsNil(o.Card) {
		toSerialize["card"] = o.Card
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["disabled_at"] = o.DisabledAt
	toSerialize["id"] = o.Id
	toSerialize["is_default"] = o.IsDefault
	toSerialize["type"] = o.Type
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

type NullablePaymentMethod struct {
	value *PaymentMethod
	isSet bool
}

func (v NullablePaymentMethod) Get() *PaymentMethod {
	return v.value
}

func (v *NullablePaymentMethod) Set(val *PaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethod(val *PaymentMethod) *NullablePaymentMethod {
	return &NullablePaymentMethod{value: val, isSet: true}
}

func (v NullablePaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


