/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReplaceChannelModeratorsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplaceChannelModeratorsRequest{}

// ReplaceChannelModeratorsRequest struct for ReplaceChannelModeratorsRequest
type ReplaceChannelModeratorsRequest struct {
	// The URI of the user to add as a moderator.
	UserUri string `json:"user_uri"`
}

type _ReplaceChannelModeratorsRequest ReplaceChannelModeratorsRequest

// NewReplaceChannelModeratorsRequest instantiates a new ReplaceChannelModeratorsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplaceChannelModeratorsRequest(userUri string) *ReplaceChannelModeratorsRequest {
	this := ReplaceChannelModeratorsRequest{}
	this.UserUri = userUri
	return &this
}

// NewReplaceChannelModeratorsRequestWithDefaults instantiates a new ReplaceChannelModeratorsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplaceChannelModeratorsRequestWithDefaults() *ReplaceChannelModeratorsRequest {
	this := ReplaceChannelModeratorsRequest{}
	return &this
}

// GetUserUri returns the UserUri field value
func (o *ReplaceChannelModeratorsRequest) GetUserUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserUri
}

// GetUserUriOk returns a tuple with the UserUri field value
// and a boolean to check if the value has been set.
func (o *ReplaceChannelModeratorsRequest) GetUserUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserUri, true
}

// SetUserUri sets field value
func (o *ReplaceChannelModeratorsRequest) SetUserUri(v string) {
	o.UserUri = v
}

func (o ReplaceChannelModeratorsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplaceChannelModeratorsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_uri"] = o.UserUri
	return toSerialize, nil
}

func (o *ReplaceChannelModeratorsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplaceChannelModeratorsRequest := _ReplaceChannelModeratorsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplaceChannelModeratorsRequest)

	if err != nil {
		return err
	}

	*o = ReplaceChannelModeratorsRequest(varReplaceChannelModeratorsRequest)

	return err
}

type NullableReplaceChannelModeratorsRequest struct {
	value *ReplaceChannelModeratorsRequest
	isSet bool
}

func (v NullableReplaceChannelModeratorsRequest) Get() *ReplaceChannelModeratorsRequest {
	return v.value
}

func (v *NullableReplaceChannelModeratorsRequest) Set(val *ReplaceChannelModeratorsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReplaceChannelModeratorsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReplaceChannelModeratorsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplaceChannelModeratorsRequest(val *ReplaceChannelModeratorsRequest) *NullableReplaceChannelModeratorsRequest {
	return &NullableReplaceChannelModeratorsRequest{value: val, isSet: true}
}

func (v NullableReplaceChannelModeratorsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplaceChannelModeratorsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


