/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the SubscriptionPlansPromotion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPlansPromotion{}

// SubscriptionPlansPromotion Information about the plan's promotion.
type SubscriptionPlansPromotion struct {
	// The promotion code.
	Code string `json:"code"`
	// The promotion discount percentage.
	Discount float32                         `json:"discount"`
	Price    SubscriptionPlansPromotionPrice `json:"price"`
	Uri      SubscriptionPlansPromotionUri   `json:"uri"`
}

// NewSubscriptionPlansPromotion instantiates a new SubscriptionPlansPromotion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPlansPromotion(code string, discount float32, price SubscriptionPlansPromotionPrice, uri SubscriptionPlansPromotionUri) *SubscriptionPlansPromotion {
	this := SubscriptionPlansPromotion{}
	this.Code = code
	this.Discount = discount
	this.Price = price
	this.Uri = uri
	return &this
}

// NewSubscriptionPlansPromotionWithDefaults instantiates a new SubscriptionPlansPromotion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPlansPromotionWithDefaults() *SubscriptionPlansPromotion {
	this := SubscriptionPlansPromotion{}
	return &this
}

// GetCode returns the Code field value
func (o *SubscriptionPlansPromotion) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansPromotion) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *SubscriptionPlansPromotion) SetCode(v string) {
	o.Code = v
}

// GetDiscount returns the Discount field value
func (o *SubscriptionPlansPromotion) GetDiscount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansPromotion) GetDiscountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Discount, true
}

// SetDiscount sets field value
func (o *SubscriptionPlansPromotion) SetDiscount(v float32) {
	o.Discount = v
}

// GetPrice returns the Price field value
func (o *SubscriptionPlansPromotion) GetPrice() SubscriptionPlansPromotionPrice {
	if o == nil {
		var ret SubscriptionPlansPromotionPrice
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansPromotion) GetPriceOk() (*SubscriptionPlansPromotionPrice, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *SubscriptionPlansPromotion) SetPrice(v SubscriptionPlansPromotionPrice) {
	o.Price = v
}

// GetUri returns the Uri field value
func (o *SubscriptionPlansPromotion) GetUri() SubscriptionPlansPromotionUri {
	if o == nil {
		var ret SubscriptionPlansPromotionUri
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansPromotion) GetUriOk() (*SubscriptionPlansPromotionUri, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *SubscriptionPlansPromotion) SetUri(v SubscriptionPlansPromotionUri) {
	o.Uri = v
}

func (o SubscriptionPlansPromotion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPlansPromotion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["discount"] = o.Discount
	toSerialize["price"] = o.Price
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

type NullableSubscriptionPlansPromotion struct {
	value *SubscriptionPlansPromotion
	isSet bool
}

func (v NullableSubscriptionPlansPromotion) Get() *SubscriptionPlansPromotion {
	return v.value
}

func (v *NullableSubscriptionPlansPromotion) Set(val *SubscriptionPlansPromotion) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPlansPromotion) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPlansPromotion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPlansPromotion(val *SubscriptionPlansPromotion) *NullableSubscriptionPlansPromotion {
	return &NullableSubscriptionPlansPromotion{value: val, isSet: true}
}

func (v NullableSubscriptionPlansPromotion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPlansPromotion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
