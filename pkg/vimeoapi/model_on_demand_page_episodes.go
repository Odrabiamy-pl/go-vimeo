/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OnDemandPageEpisodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnDemandPageEpisodes{}

// OnDemandPageEpisodes Information about the On Demand page's episodes, if the page is for a series.
type OnDemandPageEpisodes struct {
	Buy OnDemandPageEpisodesBuy `json:"buy"`
	Rent OnDemandPageEpisodesRent `json:"rent"`
}

type _OnDemandPageEpisodes OnDemandPageEpisodes

// NewOnDemandPageEpisodes instantiates a new OnDemandPageEpisodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnDemandPageEpisodes(buy OnDemandPageEpisodesBuy, rent OnDemandPageEpisodesRent) *OnDemandPageEpisodes {
	this := OnDemandPageEpisodes{}
	this.Buy = buy
	this.Rent = rent
	return &this
}

// NewOnDemandPageEpisodesWithDefaults instantiates a new OnDemandPageEpisodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnDemandPageEpisodesWithDefaults() *OnDemandPageEpisodes {
	this := OnDemandPageEpisodes{}
	return &this
}

// GetBuy returns the Buy field value
func (o *OnDemandPageEpisodes) GetBuy() OnDemandPageEpisodesBuy {
	if o == nil {
		var ret OnDemandPageEpisodesBuy
		return ret
	}

	return o.Buy
}

// GetBuyOk returns a tuple with the Buy field value
// and a boolean to check if the value has been set.
func (o *OnDemandPageEpisodes) GetBuyOk() (*OnDemandPageEpisodesBuy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Buy, true
}

// SetBuy sets field value
func (o *OnDemandPageEpisodes) SetBuy(v OnDemandPageEpisodesBuy) {
	o.Buy = v
}

// GetRent returns the Rent field value
func (o *OnDemandPageEpisodes) GetRent() OnDemandPageEpisodesRent {
	if o == nil {
		var ret OnDemandPageEpisodesRent
		return ret
	}

	return o.Rent
}

// GetRentOk returns a tuple with the Rent field value
// and a boolean to check if the value has been set.
func (o *OnDemandPageEpisodes) GetRentOk() (*OnDemandPageEpisodesRent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rent, true
}

// SetRent sets field value
func (o *OnDemandPageEpisodes) SetRent(v OnDemandPageEpisodesRent) {
	o.Rent = v
}

func (o OnDemandPageEpisodes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnDemandPageEpisodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["buy"] = o.Buy
	toSerialize["rent"] = o.Rent
	return toSerialize, nil
}

func (o *OnDemandPageEpisodes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"buy",
		"rent",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOnDemandPageEpisodes := _OnDemandPageEpisodes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOnDemandPageEpisodes)

	if err != nil {
		return err
	}

	*o = OnDemandPageEpisodes(varOnDemandPageEpisodes)

	return err
}

type NullableOnDemandPageEpisodes struct {
	value *OnDemandPageEpisodes
	isSet bool
}

func (v NullableOnDemandPageEpisodes) Get() *OnDemandPageEpisodes {
	return v.value
}

func (v *NullableOnDemandPageEpisodes) Set(val *OnDemandPageEpisodes) {
	v.value = val
	v.isSet = true
}

func (v NullableOnDemandPageEpisodes) IsSet() bool {
	return v.isSet
}

func (v *NullableOnDemandPageEpisodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnDemandPageEpisodes(val *OnDemandPageEpisodes) *NullableOnDemandPageEpisodes {
	return &NullableOnDemandPageEpisodes{value: val, isSet: true}
}

func (v NullableOnDemandPageEpisodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnDemandPageEpisodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


