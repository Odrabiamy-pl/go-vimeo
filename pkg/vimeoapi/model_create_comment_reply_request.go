/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the CreateCommentReplyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCommentReplyRequest{}

// CreateCommentReplyRequest struct for CreateCommentReplyRequest
type CreateCommentReplyRequest struct {
	// The reply to the comment.
	Text string `json:"text"`
}

// NewCreateCommentReplyRequest instantiates a new CreateCommentReplyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCommentReplyRequest(text string) *CreateCommentReplyRequest {
	this := CreateCommentReplyRequest{}
	this.Text = text
	return &this
}

// NewCreateCommentReplyRequestWithDefaults instantiates a new CreateCommentReplyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCommentReplyRequestWithDefaults() *CreateCommentReplyRequest {
	this := CreateCommentReplyRequest{}
	return &this
}

// GetText returns the Text field value
func (o *CreateCommentReplyRequest) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *CreateCommentReplyRequest) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *CreateCommentReplyRequest) SetText(v string) {
	o.Text = v
}

func (o CreateCommentReplyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCommentReplyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	return toSerialize, nil
}

type NullableCreateCommentReplyRequest struct {
	value *CreateCommentReplyRequest
	isSet bool
}

func (v NullableCreateCommentReplyRequest) Get() *CreateCommentReplyRequest {
	return v.value
}

func (v *NullableCreateCommentReplyRequest) Set(val *CreateCommentReplyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCommentReplyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCommentReplyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCommentReplyRequest(val *CreateCommentReplyRequest) *NullableCreateCommentReplyRequest {
	return &NullableCreateCommentReplyRequest{value: val, isSet: true}
}

func (v NullableCreateCommentReplyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCommentReplyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


