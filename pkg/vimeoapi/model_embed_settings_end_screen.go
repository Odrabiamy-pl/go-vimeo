/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the EmbedSettingsEndScreen type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbedSettingsEndScreen{}

// EmbedSettingsEndScreen A collection of information about the embeddable player's end screen.
type EmbedSettingsEndScreen struct {
	// How the embeddable player handles the end screen.  Option descriptions:  * `empty` - The end screen is empty.  * `loop` - The end screen loops the video playback.  * `share` - The end screen includes sharing options.  * `thumbnail` - The end screen includes the thumbnail of the video.
	Type string `json:"type"`
}

// NewEmbedSettingsEndScreen instantiates a new EmbedSettingsEndScreen object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbedSettingsEndScreen(type_ string) *EmbedSettingsEndScreen {
	this := EmbedSettingsEndScreen{}
	this.Type = type_
	return &this
}

// NewEmbedSettingsEndScreenWithDefaults instantiates a new EmbedSettingsEndScreen object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbedSettingsEndScreenWithDefaults() *EmbedSettingsEndScreen {
	this := EmbedSettingsEndScreen{}
	return &this
}

// GetType returns the Type field value
func (o *EmbedSettingsEndScreen) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsEndScreen) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *EmbedSettingsEndScreen) SetType(v string) {
	o.Type = v
}

func (o EmbedSettingsEndScreen) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbedSettingsEndScreen) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableEmbedSettingsEndScreen struct {
	value *EmbedSettingsEndScreen
	isSet bool
}

func (v NullableEmbedSettingsEndScreen) Get() *EmbedSettingsEndScreen {
	return v.value
}

func (v *NullableEmbedSettingsEndScreen) Set(val *EmbedSettingsEndScreen) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbedSettingsEndScreen) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbedSettingsEndScreen) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbedSettingsEndScreen(val *EmbedSettingsEndScreen) *NullableEmbedSettingsEndScreen {
	return &NullableEmbedSettingsEndScreen{value: val, isSet: true}
}

func (v NullableEmbedSettingsEndScreen) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbedSettingsEndScreen) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
