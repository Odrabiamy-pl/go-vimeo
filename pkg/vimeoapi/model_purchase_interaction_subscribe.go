/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the PurchaseInteractionSubscribe type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PurchaseInteractionSubscribe{}

// PurchaseInteractionSubscribe Information on subscribing to the On Demand video.
type PurchaseInteractionSubscribe struct {
	// Whether the On Demand subscription has DRM.
	Drm *bool `json:"drm,omitempty"`
	// The time in ISO 8601 format when the On Demand video expires.
	ExpiresTime NullableString `json:"expires_time,omitempty"`
	// The URL to purchase the On Demand subscription on Vimeo.
	Link NullableString `json:"link,omitempty"`
	// The time in ISO 8601 format when the On Demand video was purchased.
	PurchaseTime NullableString `json:"purchase_time,omitempty"`
	// The user's streaming access to the On Demand subscription.  Option descriptions:  * `available` - The On Demand subscription is available for streaming.  * `purchased` - The On Demand subscription has been purchased.  * `restricted` - Streaming for the On Demand subscription is restricted.  * `unavailable` - The On Demand subscription is unavailable.
	Stream *string `json:"stream,omitempty"`
	// The On Demand subscription's product URI.
	Uri NullableString `json:"uri,omitempty"`
}

// NewPurchaseInteractionSubscribe instantiates a new PurchaseInteractionSubscribe object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseInteractionSubscribe() *PurchaseInteractionSubscribe {
	this := PurchaseInteractionSubscribe{}
	return &this
}

// NewPurchaseInteractionSubscribeWithDefaults instantiates a new PurchaseInteractionSubscribe object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseInteractionSubscribeWithDefaults() *PurchaseInteractionSubscribe {
	this := PurchaseInteractionSubscribe{}
	return &this
}

// GetDrm returns the Drm field value if set, zero value otherwise.
func (o *PurchaseInteractionSubscribe) GetDrm() bool {
	if o == nil || IsNil(o.Drm) {
		var ret bool
		return ret
	}
	return *o.Drm
}

// GetDrmOk returns a tuple with the Drm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseInteractionSubscribe) GetDrmOk() (*bool, bool) {
	if o == nil || IsNil(o.Drm) {
		return nil, false
	}
	return o.Drm, true
}

// HasDrm returns a boolean if a field has been set.
func (o *PurchaseInteractionSubscribe) HasDrm() bool {
	if o != nil && !IsNil(o.Drm) {
		return true
	}

	return false
}

// SetDrm gets a reference to the given bool and assigns it to the Drm field.
func (o *PurchaseInteractionSubscribe) SetDrm(v bool) {
	o.Drm = &v
}

// GetExpiresTime returns the ExpiresTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseInteractionSubscribe) GetExpiresTime() string {
	if o == nil || IsNil(o.ExpiresTime.Get()) {
		var ret string
		return ret
	}
	return *o.ExpiresTime.Get()
}

// GetExpiresTimeOk returns a tuple with the ExpiresTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseInteractionSubscribe) GetExpiresTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresTime.Get(), o.ExpiresTime.IsSet()
}

// HasExpiresTime returns a boolean if a field has been set.
func (o *PurchaseInteractionSubscribe) HasExpiresTime() bool {
	if o != nil && o.ExpiresTime.IsSet() {
		return true
	}

	return false
}

// SetExpiresTime gets a reference to the given NullableString and assigns it to the ExpiresTime field.
func (o *PurchaseInteractionSubscribe) SetExpiresTime(v string) {
	o.ExpiresTime.Set(&v)
}

// SetExpiresTimeNil sets the value for ExpiresTime to be an explicit nil
func (o *PurchaseInteractionSubscribe) SetExpiresTimeNil() {
	o.ExpiresTime.Set(nil)
}

// UnsetExpiresTime ensures that no value is present for ExpiresTime, not even an explicit nil
func (o *PurchaseInteractionSubscribe) UnsetExpiresTime() {
	o.ExpiresTime.Unset()
}

// GetLink returns the Link field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseInteractionSubscribe) GetLink() string {
	if o == nil || IsNil(o.Link.Get()) {
		var ret string
		return ret
	}
	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseInteractionSubscribe) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// HasLink returns a boolean if a field has been set.
func (o *PurchaseInteractionSubscribe) HasLink() bool {
	if o != nil && o.Link.IsSet() {
		return true
	}

	return false
}

// SetLink gets a reference to the given NullableString and assigns it to the Link field.
func (o *PurchaseInteractionSubscribe) SetLink(v string) {
	o.Link.Set(&v)
}

// SetLinkNil sets the value for Link to be an explicit nil
func (o *PurchaseInteractionSubscribe) SetLinkNil() {
	o.Link.Set(nil)
}

// UnsetLink ensures that no value is present for Link, not even an explicit nil
func (o *PurchaseInteractionSubscribe) UnsetLink() {
	o.Link.Unset()
}

// GetPurchaseTime returns the PurchaseTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseInteractionSubscribe) GetPurchaseTime() string {
	if o == nil || IsNil(o.PurchaseTime.Get()) {
		var ret string
		return ret
	}
	return *o.PurchaseTime.Get()
}

// GetPurchaseTimeOk returns a tuple with the PurchaseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseInteractionSubscribe) GetPurchaseTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseTime.Get(), o.PurchaseTime.IsSet()
}

// HasPurchaseTime returns a boolean if a field has been set.
func (o *PurchaseInteractionSubscribe) HasPurchaseTime() bool {
	if o != nil && o.PurchaseTime.IsSet() {
		return true
	}

	return false
}

// SetPurchaseTime gets a reference to the given NullableString and assigns it to the PurchaseTime field.
func (o *PurchaseInteractionSubscribe) SetPurchaseTime(v string) {
	o.PurchaseTime.Set(&v)
}

// SetPurchaseTimeNil sets the value for PurchaseTime to be an explicit nil
func (o *PurchaseInteractionSubscribe) SetPurchaseTimeNil() {
	o.PurchaseTime.Set(nil)
}

// UnsetPurchaseTime ensures that no value is present for PurchaseTime, not even an explicit nil
func (o *PurchaseInteractionSubscribe) UnsetPurchaseTime() {
	o.PurchaseTime.Unset()
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *PurchaseInteractionSubscribe) GetStream() string {
	if o == nil || IsNil(o.Stream) {
		var ret string
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseInteractionSubscribe) GetStreamOk() (*string, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *PurchaseInteractionSubscribe) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given string and assigns it to the Stream field.
func (o *PurchaseInteractionSubscribe) SetStream(v string) {
	o.Stream = &v
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseInteractionSubscribe) GetUri() string {
	if o == nil || IsNil(o.Uri.Get()) {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseInteractionSubscribe) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *PurchaseInteractionSubscribe) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *PurchaseInteractionSubscribe) SetUri(v string) {
	o.Uri.Set(&v)
}

// SetUriNil sets the value for Uri to be an explicit nil
func (o *PurchaseInteractionSubscribe) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *PurchaseInteractionSubscribe) UnsetUri() {
	o.Uri.Unset()
}

func (o PurchaseInteractionSubscribe) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PurchaseInteractionSubscribe) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Drm) {
		toSerialize["drm"] = o.Drm
	}
	if o.ExpiresTime.IsSet() {
		toSerialize["expires_time"] = o.ExpiresTime.Get()
	}
	if o.Link.IsSet() {
		toSerialize["link"] = o.Link.Get()
	}
	if o.PurchaseTime.IsSet() {
		toSerialize["purchase_time"] = o.PurchaseTime.Get()
	}
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	return toSerialize, nil
}

type NullablePurchaseInteractionSubscribe struct {
	value *PurchaseInteractionSubscribe
	isSet bool
}

func (v NullablePurchaseInteractionSubscribe) Get() *PurchaseInteractionSubscribe {
	return v.value
}

func (v *NullablePurchaseInteractionSubscribe) Set(val *PurchaseInteractionSubscribe) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseInteractionSubscribe) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseInteractionSubscribe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseInteractionSubscribe(val *PurchaseInteractionSubscribe) *NullablePurchaseInteractionSubscribe {
	return &NullablePurchaseInteractionSubscribe{value: val, isSet: true}
}

func (v NullablePurchaseInteractionSubscribe) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseInteractionSubscribe) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
