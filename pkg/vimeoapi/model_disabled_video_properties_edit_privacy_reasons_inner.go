/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the DisabledVideoPropertiesEditPrivacyReasonsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisabledVideoPropertiesEditPrivacyReasonsInner{}

// DisabledVideoPropertiesEditPrivacyReasonsInner struct for DisabledVideoPropertiesEditPrivacyReasonsInner
type DisabledVideoPropertiesEditPrivacyReasonsInner struct {
	// The icon that represents the reason why privacy editing is disabled.  Option descriptions:  * `clock` - The reason is represented by a clock icon.  * `create` - The reason is represented by a create icon.  * `image` - The reason is represented by an image icon.  * `theme` - The reason is represented by a theme icon.
	Icon string `json:"icon"`
	// A user-deliverable message of why the privacy editing is disabled.
	Message string `json:"message"`
}

// NewDisabledVideoPropertiesEditPrivacyReasonsInner instantiates a new DisabledVideoPropertiesEditPrivacyReasonsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisabledVideoPropertiesEditPrivacyReasonsInner(icon string, message string) *DisabledVideoPropertiesEditPrivacyReasonsInner {
	this := DisabledVideoPropertiesEditPrivacyReasonsInner{}
	this.Icon = icon
	this.Message = message
	return &this
}

// NewDisabledVideoPropertiesEditPrivacyReasonsInnerWithDefaults instantiates a new DisabledVideoPropertiesEditPrivacyReasonsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisabledVideoPropertiesEditPrivacyReasonsInnerWithDefaults() *DisabledVideoPropertiesEditPrivacyReasonsInner {
	this := DisabledVideoPropertiesEditPrivacyReasonsInner{}
	return &this
}

// GetIcon returns the Icon field value
func (o *DisabledVideoPropertiesEditPrivacyReasonsInner) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoPropertiesEditPrivacyReasonsInner) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *DisabledVideoPropertiesEditPrivacyReasonsInner) SetIcon(v string) {
	o.Icon = v
}

// GetMessage returns the Message field value
func (o *DisabledVideoPropertiesEditPrivacyReasonsInner) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *DisabledVideoPropertiesEditPrivacyReasonsInner) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *DisabledVideoPropertiesEditPrivacyReasonsInner) SetMessage(v string) {
	o.Message = v
}

func (o DisabledVideoPropertiesEditPrivacyReasonsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisabledVideoPropertiesEditPrivacyReasonsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["icon"] = o.Icon
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableDisabledVideoPropertiesEditPrivacyReasonsInner struct {
	value *DisabledVideoPropertiesEditPrivacyReasonsInner
	isSet bool
}

func (v NullableDisabledVideoPropertiesEditPrivacyReasonsInner) Get() *DisabledVideoPropertiesEditPrivacyReasonsInner {
	return v.value
}

func (v *NullableDisabledVideoPropertiesEditPrivacyReasonsInner) Set(val *DisabledVideoPropertiesEditPrivacyReasonsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDisabledVideoPropertiesEditPrivacyReasonsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDisabledVideoPropertiesEditPrivacyReasonsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisabledVideoPropertiesEditPrivacyReasonsInner(val *DisabledVideoPropertiesEditPrivacyReasonsInner) *NullableDisabledVideoPropertiesEditPrivacyReasonsInner {
	return &NullableDisabledVideoPropertiesEditPrivacyReasonsInner{value: val, isSet: true}
}

func (v NullableDisabledVideoPropertiesEditPrivacyReasonsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisabledVideoPropertiesEditPrivacyReasonsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
