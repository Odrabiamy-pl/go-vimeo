/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the EmbedSettingsBadgesStaffPick type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbedSettingsBadgesStaffPick{}

// EmbedSettingsBadgesStaffPick struct for EmbedSettingsBadgesStaffPick
type EmbedSettingsBadgesStaffPick struct {
	// Whether the video is a Vimeo Staff Pick Best of the Month.
	BestOfTheMonth bool `json:"best_of_the_month"`
	// Whether the video is a Vimeo Staff Pick Best of the Year.
	BestOfTheYear bool `json:"best_of_the_year"`
	// Whether the video is a Vimeo Staff Pick.
	Normal bool `json:"normal"`
	// Whether the video is a Vimeo Staff Pick Premiere.
	Premiere bool `json:"premiere"`
}

// NewEmbedSettingsBadgesStaffPick instantiates a new EmbedSettingsBadgesStaffPick object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbedSettingsBadgesStaffPick(bestOfTheMonth bool, bestOfTheYear bool, normal bool, premiere bool) *EmbedSettingsBadgesStaffPick {
	this := EmbedSettingsBadgesStaffPick{}
	this.BestOfTheMonth = bestOfTheMonth
	this.BestOfTheYear = bestOfTheYear
	this.Normal = normal
	this.Premiere = premiere
	return &this
}

// NewEmbedSettingsBadgesStaffPickWithDefaults instantiates a new EmbedSettingsBadgesStaffPick object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbedSettingsBadgesStaffPickWithDefaults() *EmbedSettingsBadgesStaffPick {
	this := EmbedSettingsBadgesStaffPick{}
	return &this
}

// GetBestOfTheMonth returns the BestOfTheMonth field value
func (o *EmbedSettingsBadgesStaffPick) GetBestOfTheMonth() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BestOfTheMonth
}

// GetBestOfTheMonthOk returns a tuple with the BestOfTheMonth field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsBadgesStaffPick) GetBestOfTheMonthOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BestOfTheMonth, true
}

// SetBestOfTheMonth sets field value
func (o *EmbedSettingsBadgesStaffPick) SetBestOfTheMonth(v bool) {
	o.BestOfTheMonth = v
}

// GetBestOfTheYear returns the BestOfTheYear field value
func (o *EmbedSettingsBadgesStaffPick) GetBestOfTheYear() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BestOfTheYear
}

// GetBestOfTheYearOk returns a tuple with the BestOfTheYear field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsBadgesStaffPick) GetBestOfTheYearOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BestOfTheYear, true
}

// SetBestOfTheYear sets field value
func (o *EmbedSettingsBadgesStaffPick) SetBestOfTheYear(v bool) {
	o.BestOfTheYear = v
}

// GetNormal returns the Normal field value
func (o *EmbedSettingsBadgesStaffPick) GetNormal() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Normal
}

// GetNormalOk returns a tuple with the Normal field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsBadgesStaffPick) GetNormalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Normal, true
}

// SetNormal sets field value
func (o *EmbedSettingsBadgesStaffPick) SetNormal(v bool) {
	o.Normal = v
}

// GetPremiere returns the Premiere field value
func (o *EmbedSettingsBadgesStaffPick) GetPremiere() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Premiere
}

// GetPremiereOk returns a tuple with the Premiere field value
// and a boolean to check if the value has been set.
func (o *EmbedSettingsBadgesStaffPick) GetPremiereOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Premiere, true
}

// SetPremiere sets field value
func (o *EmbedSettingsBadgesStaffPick) SetPremiere(v bool) {
	o.Premiere = v
}

func (o EmbedSettingsBadgesStaffPick) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbedSettingsBadgesStaffPick) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["best_of_the_month"] = o.BestOfTheMonth
	toSerialize["best_of_the_year"] = o.BestOfTheYear
	toSerialize["normal"] = o.Normal
	toSerialize["premiere"] = o.Premiere
	return toSerialize, nil
}

type NullableEmbedSettingsBadgesStaffPick struct {
	value *EmbedSettingsBadgesStaffPick
	isSet bool
}

func (v NullableEmbedSettingsBadgesStaffPick) Get() *EmbedSettingsBadgesStaffPick {
	return v.value
}

func (v *NullableEmbedSettingsBadgesStaffPick) Set(val *EmbedSettingsBadgesStaffPick) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbedSettingsBadgesStaffPick) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbedSettingsBadgesStaffPick) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbedSettingsBadgesStaffPick(val *EmbedSettingsBadgesStaffPick) *NullableEmbedSettingsBadgesStaffPick {
	return &NullableEmbedSettingsBadgesStaffPick{value: val, isSet: true}
}

func (v NullableEmbedSettingsBadgesStaffPick) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbedSettingsBadgesStaffPick) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
