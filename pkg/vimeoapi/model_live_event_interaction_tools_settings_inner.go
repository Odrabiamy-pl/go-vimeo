/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the LiveEventInteractionToolsSettingsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LiveEventInteractionToolsSettingsInner{}

// LiveEventInteractionToolsSettingsInner struct for LiveEventInteractionToolsSettingsInner
type LiveEventInteractionToolsSettingsInner struct {
	// Whether anonymous questions are disabled for the interaction tools settings.
	IsAnonymousQuestionsDisabled bool `json:"is_anonymous_questions_disabled"`
	// Whether the Q&A is moderated for the interaction tools settings.
	IsQnaModerated bool `json:"is_qna_moderated"`
}

// NewLiveEventInteractionToolsSettingsInner instantiates a new LiveEventInteractionToolsSettingsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveEventInteractionToolsSettingsInner(isAnonymousQuestionsDisabled bool, isQnaModerated bool) *LiveEventInteractionToolsSettingsInner {
	this := LiveEventInteractionToolsSettingsInner{}
	this.IsAnonymousQuestionsDisabled = isAnonymousQuestionsDisabled
	this.IsQnaModerated = isQnaModerated
	return &this
}

// NewLiveEventInteractionToolsSettingsInnerWithDefaults instantiates a new LiveEventInteractionToolsSettingsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveEventInteractionToolsSettingsInnerWithDefaults() *LiveEventInteractionToolsSettingsInner {
	this := LiveEventInteractionToolsSettingsInner{}
	return &this
}

// GetIsAnonymousQuestionsDisabled returns the IsAnonymousQuestionsDisabled field value
func (o *LiveEventInteractionToolsSettingsInner) GetIsAnonymousQuestionsDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAnonymousQuestionsDisabled
}

// GetIsAnonymousQuestionsDisabledOk returns a tuple with the IsAnonymousQuestionsDisabled field value
// and a boolean to check if the value has been set.
func (o *LiveEventInteractionToolsSettingsInner) GetIsAnonymousQuestionsDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAnonymousQuestionsDisabled, true
}

// SetIsAnonymousQuestionsDisabled sets field value
func (o *LiveEventInteractionToolsSettingsInner) SetIsAnonymousQuestionsDisabled(v bool) {
	o.IsAnonymousQuestionsDisabled = v
}

// GetIsQnaModerated returns the IsQnaModerated field value
func (o *LiveEventInteractionToolsSettingsInner) GetIsQnaModerated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsQnaModerated
}

// GetIsQnaModeratedOk returns a tuple with the IsQnaModerated field value
// and a boolean to check if the value has been set.
func (o *LiveEventInteractionToolsSettingsInner) GetIsQnaModeratedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsQnaModerated, true
}

// SetIsQnaModerated sets field value
func (o *LiveEventInteractionToolsSettingsInner) SetIsQnaModerated(v bool) {
	o.IsQnaModerated = v
}

func (o LiveEventInteractionToolsSettingsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LiveEventInteractionToolsSettingsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_anonymous_questions_disabled"] = o.IsAnonymousQuestionsDisabled
	toSerialize["is_qna_moderated"] = o.IsQnaModerated
	return toSerialize, nil
}

type NullableLiveEventInteractionToolsSettingsInner struct {
	value *LiveEventInteractionToolsSettingsInner
	isSet bool
}

func (v NullableLiveEventInteractionToolsSettingsInner) Get() *LiveEventInteractionToolsSettingsInner {
	return v.value
}

func (v *NullableLiveEventInteractionToolsSettingsInner) Set(val *LiveEventInteractionToolsSettingsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveEventInteractionToolsSettingsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveEventInteractionToolsSettingsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveEventInteractionToolsSettingsInner(val *LiveEventInteractionToolsSettingsInner) *NullableLiveEventInteractionToolsSettingsInner {
	return &NullableLiveEventInteractionToolsSettingsInner{value: val, isSet: true}
}

func (v NullableLiveEventInteractionToolsSettingsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveEventInteractionToolsSettingsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
