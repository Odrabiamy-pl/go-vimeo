/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the SetChannelPrivacyUsersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetChannelPrivacyUsersRequest{}

// SetChannelPrivacyUsersRequest struct for SetChannelPrivacyUsersRequest
type SetChannelPrivacyUsersRequest struct {
	// The array of either the user URIs or the user IDs to permit to access the private channel.
	Users []string `json:"users"`
}

// NewSetChannelPrivacyUsersRequest instantiates a new SetChannelPrivacyUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetChannelPrivacyUsersRequest(users []string) *SetChannelPrivacyUsersRequest {
	this := SetChannelPrivacyUsersRequest{}
	this.Users = users
	return &this
}

// NewSetChannelPrivacyUsersRequestWithDefaults instantiates a new SetChannelPrivacyUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetChannelPrivacyUsersRequestWithDefaults() *SetChannelPrivacyUsersRequest {
	this := SetChannelPrivacyUsersRequest{}
	return &this
}

// GetUsers returns the Users field value
func (o *SetChannelPrivacyUsersRequest) GetUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *SetChannelPrivacyUsersRequest) GetUsersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *SetChannelPrivacyUsersRequest) SetUsers(v []string) {
	o.Users = v
}

func (o SetChannelPrivacyUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetChannelPrivacyUsersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["users"] = o.Users
	return toSerialize, nil
}

type NullableSetChannelPrivacyUsersRequest struct {
	value *SetChannelPrivacyUsersRequest
	isSet bool
}

func (v NullableSetChannelPrivacyUsersRequest) Get() *SetChannelPrivacyUsersRequest {
	return v.value
}

func (v *NullableSetChannelPrivacyUsersRequest) Set(val *SetChannelPrivacyUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetChannelPrivacyUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetChannelPrivacyUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetChannelPrivacyUsersRequest(val *SetChannelPrivacyUsersRequest) *NullableSetChannelPrivacyUsersRequest {
	return &NullableSetChannelPrivacyUsersRequest{value: val, isSet: true}
}

func (v NullableSetChannelPrivacyUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetChannelPrivacyUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


