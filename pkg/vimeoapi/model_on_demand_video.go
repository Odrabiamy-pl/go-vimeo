/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the OnDemandVideo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnDemandVideo{}

// OnDemandVideo struct for OnDemandVideo
type OnDemandVideo struct {
	Buy NullableOnDemandVideoBuy `json:"buy"`
	// The description of the video.
	Description *string `json:"description,omitempty"`
	// The duration of the video.
	Duration *string `json:"duration,omitempty"`
	// The episode number of the video.
	Episode      *float32                  `json:"episode,omitempty"`
	Interactions OnDemandVideoInteractions `json:"interactions"`
	// The link to the video on Vimeo.
	Link     string                `json:"link"`
	Metadata OnDemandVideoMetadata `json:"metadata"`
	// The title of the video.
	Name *string `json:"name,omitempty"`
	// An array of HTTP methods permitted on this URI.
	Options  []string `json:"options,omitempty"`
	Pictures *Picture `json:"pictures,omitempty"`
	// The authenticated user's most recent play position in the video, in seconds.
	PlayProgress float32 `json:"play_progress"`
	// The position of the video relative to the other videos on the On Demand page.
	Position *float32 `json:"position,omitempty"`
	// The time in ISO 8601 format when the video was created or published.
	ReleaseDate *string `json:"release_date,omitempty"`
	// The year that the video was released.
	ReleaseYear NullableFloat32           `json:"release_year"`
	Rent        NullableOnDemandVideoRent `json:"rent"`
	// The type of video.  Option descriptions:  * `extra` - The video is an extra feature.  * `main` - The video is a main feature.  * `trailer` - The video is a trailer.
	Type string `json:"type"`
	// The video container's relative URI.
	Uri  string `json:"uri"`
	User *User  `json:"user,omitempty"`
}

// NewOnDemandVideo instantiates a new OnDemandVideo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnDemandVideo(buy NullableOnDemandVideoBuy, interactions OnDemandVideoInteractions, link string, metadata OnDemandVideoMetadata, playProgress float32, releaseYear NullableFloat32, rent NullableOnDemandVideoRent, type_ string, uri string) *OnDemandVideo {
	this := OnDemandVideo{}
	this.Buy = buy
	this.Interactions = interactions
	this.Link = link
	this.Metadata = metadata
	this.PlayProgress = playProgress
	this.ReleaseYear = releaseYear
	this.Rent = rent
	this.Type = type_
	this.Uri = uri
	return &this
}

// NewOnDemandVideoWithDefaults instantiates a new OnDemandVideo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnDemandVideoWithDefaults() *OnDemandVideo {
	this := OnDemandVideo{}
	return &this
}

// GetBuy returns the Buy field value
// If the value is explicit nil, the zero value for OnDemandVideoBuy will be returned
func (o *OnDemandVideo) GetBuy() OnDemandVideoBuy {
	if o == nil || o.Buy.Get() == nil {
		var ret OnDemandVideoBuy
		return ret
	}

	return *o.Buy.Get()
}

// GetBuyOk returns a tuple with the Buy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnDemandVideo) GetBuyOk() (*OnDemandVideoBuy, bool) {
	if o == nil {
		return nil, false
	}
	return o.Buy.Get(), o.Buy.IsSet()
}

// SetBuy sets field value
func (o *OnDemandVideo) SetBuy(v OnDemandVideoBuy) {
	o.Buy.Set(&v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OnDemandVideo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OnDemandVideo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OnDemandVideo) SetDescription(v string) {
	o.Description = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *OnDemandVideo) GetDuration() string {
	if o == nil || IsNil(o.Duration) {
		var ret string
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetDurationOk() (*string, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *OnDemandVideo) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given string and assigns it to the Duration field.
func (o *OnDemandVideo) SetDuration(v string) {
	o.Duration = &v
}

// GetEpisode returns the Episode field value if set, zero value otherwise.
func (o *OnDemandVideo) GetEpisode() float32 {
	if o == nil || IsNil(o.Episode) {
		var ret float32
		return ret
	}
	return *o.Episode
}

// GetEpisodeOk returns a tuple with the Episode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetEpisodeOk() (*float32, bool) {
	if o == nil || IsNil(o.Episode) {
		return nil, false
	}
	return o.Episode, true
}

// HasEpisode returns a boolean if a field has been set.
func (o *OnDemandVideo) HasEpisode() bool {
	if o != nil && !IsNil(o.Episode) {
		return true
	}

	return false
}

// SetEpisode gets a reference to the given float32 and assigns it to the Episode field.
func (o *OnDemandVideo) SetEpisode(v float32) {
	o.Episode = &v
}

// GetInteractions returns the Interactions field value
func (o *OnDemandVideo) GetInteractions() OnDemandVideoInteractions {
	if o == nil {
		var ret OnDemandVideoInteractions
		return ret
	}

	return o.Interactions
}

// GetInteractionsOk returns a tuple with the Interactions field value
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetInteractionsOk() (*OnDemandVideoInteractions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interactions, true
}

// SetInteractions sets field value
func (o *OnDemandVideo) SetInteractions(v OnDemandVideoInteractions) {
	o.Interactions = v
}

// GetLink returns the Link field value
func (o *OnDemandVideo) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *OnDemandVideo) SetLink(v string) {
	o.Link = v
}

// GetMetadata returns the Metadata field value
func (o *OnDemandVideo) GetMetadata() OnDemandVideoMetadata {
	if o == nil {
		var ret OnDemandVideoMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetMetadataOk() (*OnDemandVideoMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *OnDemandVideo) SetMetadata(v OnDemandVideoMetadata) {
	o.Metadata = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OnDemandVideo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OnDemandVideo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OnDemandVideo) SetName(v string) {
	o.Name = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *OnDemandVideo) GetOptions() []string {
	if o == nil || IsNil(o.Options) {
		var ret []string
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetOptionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *OnDemandVideo) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []string and assigns it to the Options field.
func (o *OnDemandVideo) SetOptions(v []string) {
	o.Options = v
}

// GetPictures returns the Pictures field value if set, zero value otherwise.
func (o *OnDemandVideo) GetPictures() Picture {
	if o == nil || IsNil(o.Pictures) {
		var ret Picture
		return ret
	}
	return *o.Pictures
}

// GetPicturesOk returns a tuple with the Pictures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetPicturesOk() (*Picture, bool) {
	if o == nil || IsNil(o.Pictures) {
		return nil, false
	}
	return o.Pictures, true
}

// HasPictures returns a boolean if a field has been set.
func (o *OnDemandVideo) HasPictures() bool {
	if o != nil && !IsNil(o.Pictures) {
		return true
	}

	return false
}

// SetPictures gets a reference to the given Picture and assigns it to the Pictures field.
func (o *OnDemandVideo) SetPictures(v Picture) {
	o.Pictures = &v
}

// GetPlayProgress returns the PlayProgress field value
func (o *OnDemandVideo) GetPlayProgress() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PlayProgress
}

// GetPlayProgressOk returns a tuple with the PlayProgress field value
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetPlayProgressOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayProgress, true
}

// SetPlayProgress sets field value
func (o *OnDemandVideo) SetPlayProgress(v float32) {
	o.PlayProgress = v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *OnDemandVideo) GetPosition() float32 {
	if o == nil || IsNil(o.Position) {
		var ret float32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetPositionOk() (*float32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *OnDemandVideo) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given float32 and assigns it to the Position field.
func (o *OnDemandVideo) SetPosition(v float32) {
	o.Position = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *OnDemandVideo) GetReleaseDate() string {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *OnDemandVideo) HasReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *OnDemandVideo) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetReleaseYear returns the ReleaseYear field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *OnDemandVideo) GetReleaseYear() float32 {
	if o == nil || o.ReleaseYear.Get() == nil {
		var ret float32
		return ret
	}

	return *o.ReleaseYear.Get()
}

// GetReleaseYearOk returns a tuple with the ReleaseYear field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnDemandVideo) GetReleaseYearOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReleaseYear.Get(), o.ReleaseYear.IsSet()
}

// SetReleaseYear sets field value
func (o *OnDemandVideo) SetReleaseYear(v float32) {
	o.ReleaseYear.Set(&v)
}

// GetRent returns the Rent field value
// If the value is explicit nil, the zero value for OnDemandVideoRent will be returned
func (o *OnDemandVideo) GetRent() OnDemandVideoRent {
	if o == nil || o.Rent.Get() == nil {
		var ret OnDemandVideoRent
		return ret
	}

	return *o.Rent.Get()
}

// GetRentOk returns a tuple with the Rent field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnDemandVideo) GetRentOk() (*OnDemandVideoRent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rent.Get(), o.Rent.IsSet()
}

// SetRent sets field value
func (o *OnDemandVideo) SetRent(v OnDemandVideoRent) {
	o.Rent.Set(&v)
}

// GetType returns the Type field value
func (o *OnDemandVideo) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OnDemandVideo) SetType(v string) {
	o.Type = v
}

// GetUri returns the Uri field value
func (o *OnDemandVideo) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *OnDemandVideo) SetUri(v string) {
	o.Uri = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *OnDemandVideo) GetUser() User {
	if o == nil || IsNil(o.User) {
		var ret User
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandVideo) GetUserOk() (*User, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *OnDemandVideo) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given User and assigns it to the User field.
func (o *OnDemandVideo) SetUser(v User) {
	o.User = &v
}

func (o OnDemandVideo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnDemandVideo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["buy"] = o.Buy.Get()
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Episode) {
		toSerialize["episode"] = o.Episode
	}
	toSerialize["interactions"] = o.Interactions
	toSerialize["link"] = o.Link
	toSerialize["metadata"] = o.Metadata
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Pictures) {
		toSerialize["pictures"] = o.Pictures
	}
	toSerialize["play_progress"] = o.PlayProgress
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["release_date"] = o.ReleaseDate
	}
	toSerialize["release_year"] = o.ReleaseYear.Get()
	toSerialize["rent"] = o.Rent.Get()
	toSerialize["type"] = o.Type
	toSerialize["uri"] = o.Uri
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableOnDemandVideo struct {
	value *OnDemandVideo
	isSet bool
}

func (v NullableOnDemandVideo) Get() *OnDemandVideo {
	return v.value
}

func (v *NullableOnDemandVideo) Set(val *OnDemandVideo) {
	v.value = val
	v.isSet = true
}

func (v NullableOnDemandVideo) IsSet() bool {
	return v.isSet
}

func (v *NullableOnDemandVideo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnDemandVideo(val *OnDemandVideo) *NullableOnDemandVideo {
	return &NullableOnDemandVideo{value: val, isSet: true}
}

func (v NullableOnDemandVideo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnDemandVideo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
