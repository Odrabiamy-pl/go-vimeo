/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LiveEventMetadataInteractions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LiveEventMetadataInteractions{}

// LiveEventMetadataInteractions A list of resource URIs related to the event.
type LiveEventMetadataInteractions struct {
	Activate NullableLiveEventMetadataInteractionsActivate `json:"activate"`
	Delete NullableLiveEventMetadataInteractionsDelete `json:"delete"`
	Edit NullableLiveEventMetadataInteractionsEdit `json:"edit"`
}

type _LiveEventMetadataInteractions LiveEventMetadataInteractions

// NewLiveEventMetadataInteractions instantiates a new LiveEventMetadataInteractions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveEventMetadataInteractions(activate NullableLiveEventMetadataInteractionsActivate, delete NullableLiveEventMetadataInteractionsDelete, edit NullableLiveEventMetadataInteractionsEdit) *LiveEventMetadataInteractions {
	this := LiveEventMetadataInteractions{}
	this.Activate = activate
	this.Delete = delete
	this.Edit = edit
	return &this
}

// NewLiveEventMetadataInteractionsWithDefaults instantiates a new LiveEventMetadataInteractions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveEventMetadataInteractionsWithDefaults() *LiveEventMetadataInteractions {
	this := LiveEventMetadataInteractions{}
	return &this
}

// GetActivate returns the Activate field value
// If the value is explicit nil, the zero value for LiveEventMetadataInteractionsActivate will be returned
func (o *LiveEventMetadataInteractions) GetActivate() LiveEventMetadataInteractionsActivate {
	if o == nil || o.Activate.Get() == nil {
		var ret LiveEventMetadataInteractionsActivate
		return ret
	}

	return *o.Activate.Get()
}

// GetActivateOk returns a tuple with the Activate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventMetadataInteractions) GetActivateOk() (*LiveEventMetadataInteractionsActivate, bool) {
	if o == nil {
		return nil, false
	}
	return o.Activate.Get(), o.Activate.IsSet()
}

// SetActivate sets field value
func (o *LiveEventMetadataInteractions) SetActivate(v LiveEventMetadataInteractionsActivate) {
	o.Activate.Set(&v)
}

// GetDelete returns the Delete field value
// If the value is explicit nil, the zero value for LiveEventMetadataInteractionsDelete will be returned
func (o *LiveEventMetadataInteractions) GetDelete() LiveEventMetadataInteractionsDelete {
	if o == nil || o.Delete.Get() == nil {
		var ret LiveEventMetadataInteractionsDelete
		return ret
	}

	return *o.Delete.Get()
}

// GetDeleteOk returns a tuple with the Delete field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventMetadataInteractions) GetDeleteOk() (*LiveEventMetadataInteractionsDelete, bool) {
	if o == nil {
		return nil, false
	}
	return o.Delete.Get(), o.Delete.IsSet()
}

// SetDelete sets field value
func (o *LiveEventMetadataInteractions) SetDelete(v LiveEventMetadataInteractionsDelete) {
	o.Delete.Set(&v)
}

// GetEdit returns the Edit field value
// If the value is explicit nil, the zero value for LiveEventMetadataInteractionsEdit will be returned
func (o *LiveEventMetadataInteractions) GetEdit() LiveEventMetadataInteractionsEdit {
	if o == nil || o.Edit.Get() == nil {
		var ret LiveEventMetadataInteractionsEdit
		return ret
	}

	return *o.Edit.Get()
}

// GetEditOk returns a tuple with the Edit field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveEventMetadataInteractions) GetEditOk() (*LiveEventMetadataInteractionsEdit, bool) {
	if o == nil {
		return nil, false
	}
	return o.Edit.Get(), o.Edit.IsSet()
}

// SetEdit sets field value
func (o *LiveEventMetadataInteractions) SetEdit(v LiveEventMetadataInteractionsEdit) {
	o.Edit.Set(&v)
}

func (o LiveEventMetadataInteractions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LiveEventMetadataInteractions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["activate"] = o.Activate.Get()
	toSerialize["delete"] = o.Delete.Get()
	toSerialize["edit"] = o.Edit.Get()
	return toSerialize, nil
}

func (o *LiveEventMetadataInteractions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"activate",
		"delete",
		"edit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLiveEventMetadataInteractions := _LiveEventMetadataInteractions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLiveEventMetadataInteractions)

	if err != nil {
		return err
	}

	*o = LiveEventMetadataInteractions(varLiveEventMetadataInteractions)

	return err
}

type NullableLiveEventMetadataInteractions struct {
	value *LiveEventMetadataInteractions
	isSet bool
}

func (v NullableLiveEventMetadataInteractions) Get() *LiveEventMetadataInteractions {
	return v.value
}

func (v *NullableLiveEventMetadataInteractions) Set(val *LiveEventMetadataInteractions) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveEventMetadataInteractions) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveEventMetadataInteractions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveEventMetadataInteractions(val *LiveEventMetadataInteractions) *NullableLiveEventMetadataInteractions {
	return &NullableLiveEventMetadataInteractions{value: val, isSet: true}
}

func (v NullableLiveEventMetadataInteractions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveEventMetadataInteractions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


