/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the AnalyticsMetadataConnectionsVideo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsMetadataConnectionsVideo{}

// AnalyticsMetadataConnectionsVideo The associated video object.
type AnalyticsMetadataConnectionsVideo struct {
	// The duration of the associated video.
	Duration float32 `json:"duration"`
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The title of the associated video.
	Title string `json:"title"`
	// The API URI that resolves to the connection data.
	Uri string `json:"uri"`
}

// NewAnalyticsMetadataConnectionsVideo instantiates a new AnalyticsMetadataConnectionsVideo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsMetadataConnectionsVideo(duration float32, options []string, title string, uri string) *AnalyticsMetadataConnectionsVideo {
	this := AnalyticsMetadataConnectionsVideo{}
	this.Duration = duration
	this.Options = options
	this.Title = title
	this.Uri = uri
	return &this
}

// NewAnalyticsMetadataConnectionsVideoWithDefaults instantiates a new AnalyticsMetadataConnectionsVideo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsMetadataConnectionsVideoWithDefaults() *AnalyticsMetadataConnectionsVideo {
	this := AnalyticsMetadataConnectionsVideo{}
	return &this
}

// GetDuration returns the Duration field value
func (o *AnalyticsMetadataConnectionsVideo) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *AnalyticsMetadataConnectionsVideo) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *AnalyticsMetadataConnectionsVideo) SetDuration(v float32) {
	o.Duration = v
}

// GetOptions returns the Options field value
func (o *AnalyticsMetadataConnectionsVideo) GetOptions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *AnalyticsMetadataConnectionsVideo) GetOptionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Options, true
}

// SetOptions sets field value
func (o *AnalyticsMetadataConnectionsVideo) SetOptions(v []string) {
	o.Options = v
}

// GetTitle returns the Title field value
func (o *AnalyticsMetadataConnectionsVideo) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AnalyticsMetadataConnectionsVideo) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AnalyticsMetadataConnectionsVideo) SetTitle(v string) {
	o.Title = v
}

// GetUri returns the Uri field value
func (o *AnalyticsMetadataConnectionsVideo) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *AnalyticsMetadataConnectionsVideo) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *AnalyticsMetadataConnectionsVideo) SetUri(v string) {
	o.Uri = v
}

func (o AnalyticsMetadataConnectionsVideo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsMetadataConnectionsVideo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration"] = o.Duration
	toSerialize["options"] = o.Options
	toSerialize["title"] = o.Title
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

type NullableAnalyticsMetadataConnectionsVideo struct {
	value *AnalyticsMetadataConnectionsVideo
	isSet bool
}

func (v NullableAnalyticsMetadataConnectionsVideo) Get() *AnalyticsMetadataConnectionsVideo {
	return v.value
}

func (v *NullableAnalyticsMetadataConnectionsVideo) Set(val *AnalyticsMetadataConnectionsVideo) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsMetadataConnectionsVideo) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsMetadataConnectionsVideo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsMetadataConnectionsVideo(val *AnalyticsMetadataConnectionsVideo) *NullableAnalyticsMetadataConnectionsVideo {
	return &NullableAnalyticsMetadataConnectionsVideo{value: val, isSet: true}
}

func (v NullableAnalyticsMetadataConnectionsVideo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsMetadataConnectionsVideo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


