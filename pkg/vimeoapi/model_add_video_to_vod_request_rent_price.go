/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the AddVideoToVodRequestRentPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVideoToVodRequestRentPrice{}

// AddVideoToVodRequestRentPrice struct for AddVideoToVodRequestRentPrice
type AddVideoToVodRequestRentPrice struct {
	// The rental price of the video in Australian dollars.
	AUD *float32 `json:"AUD,omitempty"`
	// The rental price of the video in Canadian dollars.
	CAD *float32 `json:"CAD,omitempty"`
	// The rental price of the video in Swiss francs.
	CHF *float32 `json:"CHF,omitempty"`
	// The rental price of the video in Danish krone.
	DKK *float32 `json:"DKK,omitempty"`
	// The rental price of the video in euros.
	EUR *float32 `json:"EUR,omitempty"`
	// The rental price of the video in British pounds.
	GBP *float32 `json:"GBP,omitempty"`
	// The rental price of the video in Japanese yen.
	JPY *float32 `json:"JPY,omitempty"`
	// The rental price of the video in South Korean won.
	KRW *float32 `json:"KRW,omitempty"`
	// The rental price of the video in Norwegian krone.
	NOK *float32 `json:"NOK,omitempty"`
	// The rental price of the video in Polish zloty.
	PLN *float32 `json:"PLN,omitempty"`
	// The rental price of the video in Swedish krona.
	SEK *float32 `json:"SEK,omitempty"`
	// The rental price of the video in United States dollars. This parameter is required when **rent.active** is `true`.
	USD *float32 `json:"USD,omitempty"`
}

// NewAddVideoToVodRequestRentPrice instantiates a new AddVideoToVodRequestRentPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVideoToVodRequestRentPrice() *AddVideoToVodRequestRentPrice {
	this := AddVideoToVodRequestRentPrice{}
	return &this
}

// NewAddVideoToVodRequestRentPriceWithDefaults instantiates a new AddVideoToVodRequestRentPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVideoToVodRequestRentPriceWithDefaults() *AddVideoToVodRequestRentPrice {
	this := AddVideoToVodRequestRentPrice{}
	return &this
}

// GetAUD returns the AUD field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetAUD() float32 {
	if o == nil || IsNil(o.AUD) {
		var ret float32
		return ret
	}
	return *o.AUD
}

// GetAUDOk returns a tuple with the AUD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetAUDOk() (*float32, bool) {
	if o == nil || IsNil(o.AUD) {
		return nil, false
	}
	return o.AUD, true
}

// HasAUD returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasAUD() bool {
	if o != nil && !IsNil(o.AUD) {
		return true
	}

	return false
}

// SetAUD gets a reference to the given float32 and assigns it to the AUD field.
func (o *AddVideoToVodRequestRentPrice) SetAUD(v float32) {
	o.AUD = &v
}

// GetCAD returns the CAD field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetCAD() float32 {
	if o == nil || IsNil(o.CAD) {
		var ret float32
		return ret
	}
	return *o.CAD
}

// GetCADOk returns a tuple with the CAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetCADOk() (*float32, bool) {
	if o == nil || IsNil(o.CAD) {
		return nil, false
	}
	return o.CAD, true
}

// HasCAD returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasCAD() bool {
	if o != nil && !IsNil(o.CAD) {
		return true
	}

	return false
}

// SetCAD gets a reference to the given float32 and assigns it to the CAD field.
func (o *AddVideoToVodRequestRentPrice) SetCAD(v float32) {
	o.CAD = &v
}

// GetCHF returns the CHF field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetCHF() float32 {
	if o == nil || IsNil(o.CHF) {
		var ret float32
		return ret
	}
	return *o.CHF
}

// GetCHFOk returns a tuple with the CHF field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetCHFOk() (*float32, bool) {
	if o == nil || IsNil(o.CHF) {
		return nil, false
	}
	return o.CHF, true
}

// HasCHF returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasCHF() bool {
	if o != nil && !IsNil(o.CHF) {
		return true
	}

	return false
}

// SetCHF gets a reference to the given float32 and assigns it to the CHF field.
func (o *AddVideoToVodRequestRentPrice) SetCHF(v float32) {
	o.CHF = &v
}

// GetDKK returns the DKK field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetDKK() float32 {
	if o == nil || IsNil(o.DKK) {
		var ret float32
		return ret
	}
	return *o.DKK
}

// GetDKKOk returns a tuple with the DKK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetDKKOk() (*float32, bool) {
	if o == nil || IsNil(o.DKK) {
		return nil, false
	}
	return o.DKK, true
}

// HasDKK returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasDKK() bool {
	if o != nil && !IsNil(o.DKK) {
		return true
	}

	return false
}

// SetDKK gets a reference to the given float32 and assigns it to the DKK field.
func (o *AddVideoToVodRequestRentPrice) SetDKK(v float32) {
	o.DKK = &v
}

// GetEUR returns the EUR field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetEUR() float32 {
	if o == nil || IsNil(o.EUR) {
		var ret float32
		return ret
	}
	return *o.EUR
}

// GetEUROk returns a tuple with the EUR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetEUROk() (*float32, bool) {
	if o == nil || IsNil(o.EUR) {
		return nil, false
	}
	return o.EUR, true
}

// HasEUR returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasEUR() bool {
	if o != nil && !IsNil(o.EUR) {
		return true
	}

	return false
}

// SetEUR gets a reference to the given float32 and assigns it to the EUR field.
func (o *AddVideoToVodRequestRentPrice) SetEUR(v float32) {
	o.EUR = &v
}

// GetGBP returns the GBP field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetGBP() float32 {
	if o == nil || IsNil(o.GBP) {
		var ret float32
		return ret
	}
	return *o.GBP
}

// GetGBPOk returns a tuple with the GBP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetGBPOk() (*float32, bool) {
	if o == nil || IsNil(o.GBP) {
		return nil, false
	}
	return o.GBP, true
}

// HasGBP returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasGBP() bool {
	if o != nil && !IsNil(o.GBP) {
		return true
	}

	return false
}

// SetGBP gets a reference to the given float32 and assigns it to the GBP field.
func (o *AddVideoToVodRequestRentPrice) SetGBP(v float32) {
	o.GBP = &v
}

// GetJPY returns the JPY field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetJPY() float32 {
	if o == nil || IsNil(o.JPY) {
		var ret float32
		return ret
	}
	return *o.JPY
}

// GetJPYOk returns a tuple with the JPY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetJPYOk() (*float32, bool) {
	if o == nil || IsNil(o.JPY) {
		return nil, false
	}
	return o.JPY, true
}

// HasJPY returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasJPY() bool {
	if o != nil && !IsNil(o.JPY) {
		return true
	}

	return false
}

// SetJPY gets a reference to the given float32 and assigns it to the JPY field.
func (o *AddVideoToVodRequestRentPrice) SetJPY(v float32) {
	o.JPY = &v
}

// GetKRW returns the KRW field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetKRW() float32 {
	if o == nil || IsNil(o.KRW) {
		var ret float32
		return ret
	}
	return *o.KRW
}

// GetKRWOk returns a tuple with the KRW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetKRWOk() (*float32, bool) {
	if o == nil || IsNil(o.KRW) {
		return nil, false
	}
	return o.KRW, true
}

// HasKRW returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasKRW() bool {
	if o != nil && !IsNil(o.KRW) {
		return true
	}

	return false
}

// SetKRW gets a reference to the given float32 and assigns it to the KRW field.
func (o *AddVideoToVodRequestRentPrice) SetKRW(v float32) {
	o.KRW = &v
}

// GetNOK returns the NOK field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetNOK() float32 {
	if o == nil || IsNil(o.NOK) {
		var ret float32
		return ret
	}
	return *o.NOK
}

// GetNOKOk returns a tuple with the NOK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetNOKOk() (*float32, bool) {
	if o == nil || IsNil(o.NOK) {
		return nil, false
	}
	return o.NOK, true
}

// HasNOK returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasNOK() bool {
	if o != nil && !IsNil(o.NOK) {
		return true
	}

	return false
}

// SetNOK gets a reference to the given float32 and assigns it to the NOK field.
func (o *AddVideoToVodRequestRentPrice) SetNOK(v float32) {
	o.NOK = &v
}

// GetPLN returns the PLN field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetPLN() float32 {
	if o == nil || IsNil(o.PLN) {
		var ret float32
		return ret
	}
	return *o.PLN
}

// GetPLNOk returns a tuple with the PLN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetPLNOk() (*float32, bool) {
	if o == nil || IsNil(o.PLN) {
		return nil, false
	}
	return o.PLN, true
}

// HasPLN returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasPLN() bool {
	if o != nil && !IsNil(o.PLN) {
		return true
	}

	return false
}

// SetPLN gets a reference to the given float32 and assigns it to the PLN field.
func (o *AddVideoToVodRequestRentPrice) SetPLN(v float32) {
	o.PLN = &v
}

// GetSEK returns the SEK field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetSEK() float32 {
	if o == nil || IsNil(o.SEK) {
		var ret float32
		return ret
	}
	return *o.SEK
}

// GetSEKOk returns a tuple with the SEK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetSEKOk() (*float32, bool) {
	if o == nil || IsNil(o.SEK) {
		return nil, false
	}
	return o.SEK, true
}

// HasSEK returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasSEK() bool {
	if o != nil && !IsNil(o.SEK) {
		return true
	}

	return false
}

// SetSEK gets a reference to the given float32 and assigns it to the SEK field.
func (o *AddVideoToVodRequestRentPrice) SetSEK(v float32) {
	o.SEK = &v
}

// GetUSD returns the USD field value if set, zero value otherwise.
func (o *AddVideoToVodRequestRentPrice) GetUSD() float32 {
	if o == nil || IsNil(o.USD) {
		var ret float32
		return ret
	}
	return *o.USD
}

// GetUSDOk returns a tuple with the USD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideoToVodRequestRentPrice) GetUSDOk() (*float32, bool) {
	if o == nil || IsNil(o.USD) {
		return nil, false
	}
	return o.USD, true
}

// HasUSD returns a boolean if a field has been set.
func (o *AddVideoToVodRequestRentPrice) HasUSD() bool {
	if o != nil && !IsNil(o.USD) {
		return true
	}

	return false
}

// SetUSD gets a reference to the given float32 and assigns it to the USD field.
func (o *AddVideoToVodRequestRentPrice) SetUSD(v float32) {
	o.USD = &v
}

func (o AddVideoToVodRequestRentPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVideoToVodRequestRentPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AUD) {
		toSerialize["AUD"] = o.AUD
	}
	if !IsNil(o.CAD) {
		toSerialize["CAD"] = o.CAD
	}
	if !IsNil(o.CHF) {
		toSerialize["CHF"] = o.CHF
	}
	if !IsNil(o.DKK) {
		toSerialize["DKK"] = o.DKK
	}
	if !IsNil(o.EUR) {
		toSerialize["EUR"] = o.EUR
	}
	if !IsNil(o.GBP) {
		toSerialize["GBP"] = o.GBP
	}
	if !IsNil(o.JPY) {
		toSerialize["JPY"] = o.JPY
	}
	if !IsNil(o.KRW) {
		toSerialize["KRW"] = o.KRW
	}
	if !IsNil(o.NOK) {
		toSerialize["NOK"] = o.NOK
	}
	if !IsNil(o.PLN) {
		toSerialize["PLN"] = o.PLN
	}
	if !IsNil(o.SEK) {
		toSerialize["SEK"] = o.SEK
	}
	if !IsNil(o.USD) {
		toSerialize["USD"] = o.USD
	}
	return toSerialize, nil
}

type NullableAddVideoToVodRequestRentPrice struct {
	value *AddVideoToVodRequestRentPrice
	isSet bool
}

func (v NullableAddVideoToVodRequestRentPrice) Get() *AddVideoToVodRequestRentPrice {
	return v.value
}

func (v *NullableAddVideoToVodRequestRentPrice) Set(val *AddVideoToVodRequestRentPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVideoToVodRequestRentPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVideoToVodRequestRentPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVideoToVodRequestRentPrice(val *AddVideoToVodRequestRentPrice) *NullableAddVideoToVodRequestRentPrice {
	return &NullableAddVideoToVodRequestRentPrice{value: val, isSet: true}
}

func (v NullableAddVideoToVodRequestRentPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVideoToVodRequestRentPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


