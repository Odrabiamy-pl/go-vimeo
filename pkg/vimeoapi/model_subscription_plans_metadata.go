/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the SubscriptionPlansMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPlansMetadata{}

// SubscriptionPlansMetadata The URLs and entitlements of the associated products in the store.
type SubscriptionPlansMetadata struct {
	Entitlements SubscriptionPlansMetadataEntitlements `json:"entitlements"`
	Interactions SubscriptionPlansMetadataInteractions `json:"interactions"`
	PurchasedProduct SubscriptionPlansMetadataPurchasedProduct `json:"purchased_product"`
	VideoQuota SubscriptionPlansMetadataVideoQuota `json:"video_quota"`
}

// NewSubscriptionPlansMetadata instantiates a new SubscriptionPlansMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPlansMetadata(entitlements SubscriptionPlansMetadataEntitlements, interactions SubscriptionPlansMetadataInteractions, purchasedProduct SubscriptionPlansMetadataPurchasedProduct, videoQuota SubscriptionPlansMetadataVideoQuota) *SubscriptionPlansMetadata {
	this := SubscriptionPlansMetadata{}
	this.Entitlements = entitlements
	this.Interactions = interactions
	this.PurchasedProduct = purchasedProduct
	this.VideoQuota = videoQuota
	return &this
}

// NewSubscriptionPlansMetadataWithDefaults instantiates a new SubscriptionPlansMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPlansMetadataWithDefaults() *SubscriptionPlansMetadata {
	this := SubscriptionPlansMetadata{}
	return &this
}

// GetEntitlements returns the Entitlements field value
func (o *SubscriptionPlansMetadata) GetEntitlements() SubscriptionPlansMetadataEntitlements {
	if o == nil {
		var ret SubscriptionPlansMetadataEntitlements
		return ret
	}

	return o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansMetadata) GetEntitlementsOk() (*SubscriptionPlansMetadataEntitlements, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entitlements, true
}

// SetEntitlements sets field value
func (o *SubscriptionPlansMetadata) SetEntitlements(v SubscriptionPlansMetadataEntitlements) {
	o.Entitlements = v
}

// GetInteractions returns the Interactions field value
func (o *SubscriptionPlansMetadata) GetInteractions() SubscriptionPlansMetadataInteractions {
	if o == nil {
		var ret SubscriptionPlansMetadataInteractions
		return ret
	}

	return o.Interactions
}

// GetInteractionsOk returns a tuple with the Interactions field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansMetadata) GetInteractionsOk() (*SubscriptionPlansMetadataInteractions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interactions, true
}

// SetInteractions sets field value
func (o *SubscriptionPlansMetadata) SetInteractions(v SubscriptionPlansMetadataInteractions) {
	o.Interactions = v
}

// GetPurchasedProduct returns the PurchasedProduct field value
func (o *SubscriptionPlansMetadata) GetPurchasedProduct() SubscriptionPlansMetadataPurchasedProduct {
	if o == nil {
		var ret SubscriptionPlansMetadataPurchasedProduct
		return ret
	}

	return o.PurchasedProduct
}

// GetPurchasedProductOk returns a tuple with the PurchasedProduct field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansMetadata) GetPurchasedProductOk() (*SubscriptionPlansMetadataPurchasedProduct, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchasedProduct, true
}

// SetPurchasedProduct sets field value
func (o *SubscriptionPlansMetadata) SetPurchasedProduct(v SubscriptionPlansMetadataPurchasedProduct) {
	o.PurchasedProduct = v
}

// GetVideoQuota returns the VideoQuota field value
func (o *SubscriptionPlansMetadata) GetVideoQuota() SubscriptionPlansMetadataVideoQuota {
	if o == nil {
		var ret SubscriptionPlansMetadataVideoQuota
		return ret
	}

	return o.VideoQuota
}

// GetVideoQuotaOk returns a tuple with the VideoQuota field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlansMetadata) GetVideoQuotaOk() (*SubscriptionPlansMetadataVideoQuota, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VideoQuota, true
}

// SetVideoQuota sets field value
func (o *SubscriptionPlansMetadata) SetVideoQuota(v SubscriptionPlansMetadataVideoQuota) {
	o.VideoQuota = v
}

func (o SubscriptionPlansMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPlansMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entitlements"] = o.Entitlements
	toSerialize["interactions"] = o.Interactions
	toSerialize["purchased_product"] = o.PurchasedProduct
	toSerialize["video_quota"] = o.VideoQuota
	return toSerialize, nil
}

type NullableSubscriptionPlansMetadata struct {
	value *SubscriptionPlansMetadata
	isSet bool
}

func (v NullableSubscriptionPlansMetadata) Get() *SubscriptionPlansMetadata {
	return v.value
}

func (v *NullableSubscriptionPlansMetadata) Set(val *SubscriptionPlansMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPlansMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPlansMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPlansMetadata(val *SubscriptionPlansMetadata) *NullableSubscriptionPlansMetadata {
	return &NullableSubscriptionPlansMetadata{value: val, isSet: true}
}

func (v NullableSubscriptionPlansMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPlansMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


