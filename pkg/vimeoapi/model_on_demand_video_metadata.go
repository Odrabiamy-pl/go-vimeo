/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OnDemandVideoMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnDemandVideoMetadata{}

// OnDemandVideoMetadata Metadata information about the video.
type OnDemandVideoMetadata struct {
	Connections OnDemandVideoMetadataConnections `json:"connections"`
	Interactions OnDemandVideoMetadataInteractions `json:"interactions"`
}

type _OnDemandVideoMetadata OnDemandVideoMetadata

// NewOnDemandVideoMetadata instantiates a new OnDemandVideoMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnDemandVideoMetadata(connections OnDemandVideoMetadataConnections, interactions OnDemandVideoMetadataInteractions) *OnDemandVideoMetadata {
	this := OnDemandVideoMetadata{}
	this.Connections = connections
	this.Interactions = interactions
	return &this
}

// NewOnDemandVideoMetadataWithDefaults instantiates a new OnDemandVideoMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnDemandVideoMetadataWithDefaults() *OnDemandVideoMetadata {
	this := OnDemandVideoMetadata{}
	return &this
}

// GetConnections returns the Connections field value
func (o *OnDemandVideoMetadata) GetConnections() OnDemandVideoMetadataConnections {
	if o == nil {
		var ret OnDemandVideoMetadataConnections
		return ret
	}

	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value
// and a boolean to check if the value has been set.
func (o *OnDemandVideoMetadata) GetConnectionsOk() (*OnDemandVideoMetadataConnections, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connections, true
}

// SetConnections sets field value
func (o *OnDemandVideoMetadata) SetConnections(v OnDemandVideoMetadataConnections) {
	o.Connections = v
}

// GetInteractions returns the Interactions field value
func (o *OnDemandVideoMetadata) GetInteractions() OnDemandVideoMetadataInteractions {
	if o == nil {
		var ret OnDemandVideoMetadataInteractions
		return ret
	}

	return o.Interactions
}

// GetInteractionsOk returns a tuple with the Interactions field value
// and a boolean to check if the value has been set.
func (o *OnDemandVideoMetadata) GetInteractionsOk() (*OnDemandVideoMetadataInteractions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interactions, true
}

// SetInteractions sets field value
func (o *OnDemandVideoMetadata) SetInteractions(v OnDemandVideoMetadataInteractions) {
	o.Interactions = v
}

func (o OnDemandVideoMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnDemandVideoMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connections"] = o.Connections
	toSerialize["interactions"] = o.Interactions
	return toSerialize, nil
}

func (o *OnDemandVideoMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connections",
		"interactions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOnDemandVideoMetadata := _OnDemandVideoMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOnDemandVideoMetadata)

	if err != nil {
		return err
	}

	*o = OnDemandVideoMetadata(varOnDemandVideoMetadata)

	return err
}

type NullableOnDemandVideoMetadata struct {
	value *OnDemandVideoMetadata
	isSet bool
}

func (v NullableOnDemandVideoMetadata) Get() *OnDemandVideoMetadata {
	return v.value
}

func (v *NullableOnDemandVideoMetadata) Set(val *OnDemandVideoMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableOnDemandVideoMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableOnDemandVideoMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnDemandVideoMetadata(val *OnDemandVideoMetadata) *NullableOnDemandVideoMetadata {
	return &NullableOnDemandVideoMetadata{value: val, isSet: true}
}

func (v NullableOnDemandVideoMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnDemandVideoMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


