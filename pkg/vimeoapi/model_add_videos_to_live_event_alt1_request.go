/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the AddVideosToLiveEventAlt1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVideosToLiveEventAlt1Request{}

// AddVideosToLiveEventAlt1Request struct for AddVideosToLiveEventAlt1Request
type AddVideosToLiveEventAlt1Request struct {
	// An array of video objects.
	Videos []AddVideosToLiveEventAlt1RequestVideosInner `json:"videos,omitempty"`
}

// NewAddVideosToLiveEventAlt1Request instantiates a new AddVideosToLiveEventAlt1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVideosToLiveEventAlt1Request() *AddVideosToLiveEventAlt1Request {
	this := AddVideosToLiveEventAlt1Request{}
	return &this
}

// NewAddVideosToLiveEventAlt1RequestWithDefaults instantiates a new AddVideosToLiveEventAlt1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVideosToLiveEventAlt1RequestWithDefaults() *AddVideosToLiveEventAlt1Request {
	this := AddVideosToLiveEventAlt1Request{}
	return &this
}

// GetVideos returns the Videos field value if set, zero value otherwise.
func (o *AddVideosToLiveEventAlt1Request) GetVideos() []AddVideosToLiveEventAlt1RequestVideosInner {
	if o == nil || IsNil(o.Videos) {
		var ret []AddVideosToLiveEventAlt1RequestVideosInner
		return ret
	}
	return o.Videos
}

// GetVideosOk returns a tuple with the Videos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVideosToLiveEventAlt1Request) GetVideosOk() ([]AddVideosToLiveEventAlt1RequestVideosInner, bool) {
	if o == nil || IsNil(o.Videos) {
		return nil, false
	}
	return o.Videos, true
}

// HasVideos returns a boolean if a field has been set.
func (o *AddVideosToLiveEventAlt1Request) HasVideos() bool {
	if o != nil && !IsNil(o.Videos) {
		return true
	}

	return false
}

// SetVideos gets a reference to the given []AddVideosToLiveEventAlt1RequestVideosInner and assigns it to the Videos field.
func (o *AddVideosToLiveEventAlt1Request) SetVideos(v []AddVideosToLiveEventAlt1RequestVideosInner) {
	o.Videos = v
}

func (o AddVideosToLiveEventAlt1Request) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVideosToLiveEventAlt1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Videos) {
		toSerialize["videos"] = o.Videos
	}
	return toSerialize, nil
}

type NullableAddVideosToLiveEventAlt1Request struct {
	value *AddVideosToLiveEventAlt1Request
	isSet bool
}

func (v NullableAddVideosToLiveEventAlt1Request) Get() *AddVideosToLiveEventAlt1Request {
	return v.value
}

func (v *NullableAddVideosToLiveEventAlt1Request) Set(val *AddVideosToLiveEventAlt1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVideosToLiveEventAlt1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVideosToLiveEventAlt1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVideosToLiveEventAlt1Request(val *AddVideosToLiveEventAlt1Request) *NullableAddVideosToLiveEventAlt1Request {
	return &NullableAddVideosToLiveEventAlt1Request{value: val, isSet: true}
}

func (v NullableAddVideosToLiveEventAlt1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVideosToLiveEventAlt1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
