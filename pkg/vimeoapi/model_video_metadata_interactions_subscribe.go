/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the VideoMetadataInteractionsSubscribe type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoMetadataInteractionsSubscribe{}

// VideoMetadataInteractionsSubscribe Subscription information for an On Demand video.
type VideoMetadataInteractionsSubscribe struct {
	// Whether the On Demand video has DRM.
	Drm *bool `json:"drm,omitempty"`
	// The time in ISO 8601 format when the subscription expires.
	ExpiresTime *string `json:"expires_time,omitempty"`
	// The time in ISO 8601 format when the subscription was purchased.
	PurchaseTime *string `json:"purchase_time,omitempty"`
	// The stream type.
	Stream *string `json:"stream,omitempty"`
}

// NewVideoMetadataInteractionsSubscribe instantiates a new VideoMetadataInteractionsSubscribe object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoMetadataInteractionsSubscribe() *VideoMetadataInteractionsSubscribe {
	this := VideoMetadataInteractionsSubscribe{}
	return &this
}

// NewVideoMetadataInteractionsSubscribeWithDefaults instantiates a new VideoMetadataInteractionsSubscribe object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoMetadataInteractionsSubscribeWithDefaults() *VideoMetadataInteractionsSubscribe {
	this := VideoMetadataInteractionsSubscribe{}
	return &this
}

// GetDrm returns the Drm field value if set, zero value otherwise.
func (o *VideoMetadataInteractionsSubscribe) GetDrm() bool {
	if o == nil || IsNil(o.Drm) {
		var ret bool
		return ret
	}
	return *o.Drm
}

// GetDrmOk returns a tuple with the Drm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsSubscribe) GetDrmOk() (*bool, bool) {
	if o == nil || IsNil(o.Drm) {
		return nil, false
	}
	return o.Drm, true
}

// HasDrm returns a boolean if a field has been set.
func (o *VideoMetadataInteractionsSubscribe) HasDrm() bool {
	if o != nil && !IsNil(o.Drm) {
		return true
	}

	return false
}

// SetDrm gets a reference to the given bool and assigns it to the Drm field.
func (o *VideoMetadataInteractionsSubscribe) SetDrm(v bool) {
	o.Drm = &v
}

// GetExpiresTime returns the ExpiresTime field value if set, zero value otherwise.
func (o *VideoMetadataInteractionsSubscribe) GetExpiresTime() string {
	if o == nil || IsNil(o.ExpiresTime) {
		var ret string
		return ret
	}
	return *o.ExpiresTime
}

// GetExpiresTimeOk returns a tuple with the ExpiresTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsSubscribe) GetExpiresTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiresTime) {
		return nil, false
	}
	return o.ExpiresTime, true
}

// HasExpiresTime returns a boolean if a field has been set.
func (o *VideoMetadataInteractionsSubscribe) HasExpiresTime() bool {
	if o != nil && !IsNil(o.ExpiresTime) {
		return true
	}

	return false
}

// SetExpiresTime gets a reference to the given string and assigns it to the ExpiresTime field.
func (o *VideoMetadataInteractionsSubscribe) SetExpiresTime(v string) {
	o.ExpiresTime = &v
}

// GetPurchaseTime returns the PurchaseTime field value if set, zero value otherwise.
func (o *VideoMetadataInteractionsSubscribe) GetPurchaseTime() string {
	if o == nil || IsNil(o.PurchaseTime) {
		var ret string
		return ret
	}
	return *o.PurchaseTime
}

// GetPurchaseTimeOk returns a tuple with the PurchaseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsSubscribe) GetPurchaseTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseTime) {
		return nil, false
	}
	return o.PurchaseTime, true
}

// HasPurchaseTime returns a boolean if a field has been set.
func (o *VideoMetadataInteractionsSubscribe) HasPurchaseTime() bool {
	if o != nil && !IsNil(o.PurchaseTime) {
		return true
	}

	return false
}

// SetPurchaseTime gets a reference to the given string and assigns it to the PurchaseTime field.
func (o *VideoMetadataInteractionsSubscribe) SetPurchaseTime(v string) {
	o.PurchaseTime = &v
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *VideoMetadataInteractionsSubscribe) GetStream() string {
	if o == nil || IsNil(o.Stream) {
		var ret string
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadataInteractionsSubscribe) GetStreamOk() (*string, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *VideoMetadataInteractionsSubscribe) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given string and assigns it to the Stream field.
func (o *VideoMetadataInteractionsSubscribe) SetStream(v string) {
	o.Stream = &v
}

func (o VideoMetadataInteractionsSubscribe) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoMetadataInteractionsSubscribe) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Drm) {
		toSerialize["drm"] = o.Drm
	}
	if !IsNil(o.ExpiresTime) {
		toSerialize["expires_time"] = o.ExpiresTime
	}
	if !IsNil(o.PurchaseTime) {
		toSerialize["purchase_time"] = o.PurchaseTime
	}
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	return toSerialize, nil
}

type NullableVideoMetadataInteractionsSubscribe struct {
	value *VideoMetadataInteractionsSubscribe
	isSet bool
}

func (v NullableVideoMetadataInteractionsSubscribe) Get() *VideoMetadataInteractionsSubscribe {
	return v.value
}

func (v *NullableVideoMetadataInteractionsSubscribe) Set(val *VideoMetadataInteractionsSubscribe) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoMetadataInteractionsSubscribe) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoMetadataInteractionsSubscribe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoMetadataInteractionsSubscribe(val *VideoMetadataInteractionsSubscribe) *NullableVideoMetadataInteractionsSubscribe {
	return &NullableVideoMetadataInteractionsSubscribe{value: val, isSet: true}
}

func (v NullableVideoMetadataInteractionsSubscribe) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoMetadataInteractionsSubscribe) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


