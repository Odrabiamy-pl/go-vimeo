/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TagMetadataConnections type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagMetadataConnections{}

// TagMetadataConnections A collection of information that is connected to this resource.
type TagMetadataConnections struct {
	Videos TagMetadataConnectionsVideos `json:"videos"`
}

type _TagMetadataConnections TagMetadataConnections

// NewTagMetadataConnections instantiates a new TagMetadataConnections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagMetadataConnections(videos TagMetadataConnectionsVideos) *TagMetadataConnections {
	this := TagMetadataConnections{}
	this.Videos = videos
	return &this
}

// NewTagMetadataConnectionsWithDefaults instantiates a new TagMetadataConnections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagMetadataConnectionsWithDefaults() *TagMetadataConnections {
	this := TagMetadataConnections{}
	return &this
}

// GetVideos returns the Videos field value
func (o *TagMetadataConnections) GetVideos() TagMetadataConnectionsVideos {
	if o == nil {
		var ret TagMetadataConnectionsVideos
		return ret
	}

	return o.Videos
}

// GetVideosOk returns a tuple with the Videos field value
// and a boolean to check if the value has been set.
func (o *TagMetadataConnections) GetVideosOk() (*TagMetadataConnectionsVideos, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Videos, true
}

// SetVideos sets field value
func (o *TagMetadataConnections) SetVideos(v TagMetadataConnectionsVideos) {
	o.Videos = v
}

func (o TagMetadataConnections) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagMetadataConnections) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["videos"] = o.Videos
	return toSerialize, nil
}

func (o *TagMetadataConnections) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"videos",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTagMetadataConnections := _TagMetadataConnections{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTagMetadataConnections)

	if err != nil {
		return err
	}

	*o = TagMetadataConnections(varTagMetadataConnections)

	return err
}

type NullableTagMetadataConnections struct {
	value *TagMetadataConnections
	isSet bool
}

func (v NullableTagMetadataConnections) Get() *TagMetadataConnections {
	return v.value
}

func (v *NullableTagMetadataConnections) Set(val *TagMetadataConnections) {
	v.value = val
	v.isSet = true
}

func (v NullableTagMetadataConnections) IsSet() bool {
	return v.isSet
}

func (v *NullableTagMetadataConnections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagMetadataConnections(val *TagMetadataConnections) *NullableTagMetadataConnections {
	return &NullableTagMetadataConnections{value: val, isSet: true}
}

func (v NullableTagMetadataConnections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagMetadataConnections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


