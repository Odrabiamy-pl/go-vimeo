/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the CreateAnimatedThumbsetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAnimatedThumbsetRequest{}

// CreateAnimatedThumbsetRequest struct for CreateAnimatedThumbsetRequest
type CreateAnimatedThumbsetRequest struct {
	// The duration of the animation in seconds. The maximum value is 6.
	Duration float32 `json:"duration"`
	// The time in seconds corresponding to the start of the animation in the video. The default value is 0.
	StartTime *float32 `json:"start_time,omitempty"`
}

// NewCreateAnimatedThumbsetRequest instantiates a new CreateAnimatedThumbsetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAnimatedThumbsetRequest(duration float32) *CreateAnimatedThumbsetRequest {
	this := CreateAnimatedThumbsetRequest{}
	this.Duration = duration
	return &this
}

// NewCreateAnimatedThumbsetRequestWithDefaults instantiates a new CreateAnimatedThumbsetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAnimatedThumbsetRequestWithDefaults() *CreateAnimatedThumbsetRequest {
	this := CreateAnimatedThumbsetRequest{}
	return &this
}

// GetDuration returns the Duration field value
func (o *CreateAnimatedThumbsetRequest) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *CreateAnimatedThumbsetRequest) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *CreateAnimatedThumbsetRequest) SetDuration(v float32) {
	o.Duration = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *CreateAnimatedThumbsetRequest) GetStartTime() float32 {
	if o == nil || IsNil(o.StartTime) {
		var ret float32
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnimatedThumbsetRequest) GetStartTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *CreateAnimatedThumbsetRequest) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given float32 and assigns it to the StartTime field.
func (o *CreateAnimatedThumbsetRequest) SetStartTime(v float32) {
	o.StartTime = &v
}

func (o CreateAnimatedThumbsetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAnimatedThumbsetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration"] = o.Duration
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	return toSerialize, nil
}

type NullableCreateAnimatedThumbsetRequest struct {
	value *CreateAnimatedThumbsetRequest
	isSet bool
}

func (v NullableCreateAnimatedThumbsetRequest) Get() *CreateAnimatedThumbsetRequest {
	return v.value
}

func (v *NullableCreateAnimatedThumbsetRequest) Set(val *CreateAnimatedThumbsetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAnimatedThumbsetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAnimatedThumbsetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAnimatedThumbsetRequest(val *CreateAnimatedThumbsetRequest) *NullableCreateAnimatedThumbsetRequest {
	return &NullableCreateAnimatedThumbsetRequest{value: val, isSet: true}
}

func (v NullableCreateAnimatedThumbsetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAnimatedThumbsetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


