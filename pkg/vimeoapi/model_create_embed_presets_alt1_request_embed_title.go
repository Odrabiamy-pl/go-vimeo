/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the CreateEmbedPresetsAlt1RequestEmbedTitle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEmbedPresetsAlt1RequestEmbedTitle{}

// CreateEmbedPresetsAlt1RequestEmbedTitle struct for CreateEmbedPresetsAlt1RequestEmbedTitle
type CreateEmbedPresetsAlt1RequestEmbedTitle struct {
	// How to handle the video title in the title bar of the embeddable player.  Option descriptions:  * `hide` - Hide the video title.  * `show` - Show the video title.  * `user` - Enable the user to decide. 
	Name *string `json:"name,omitempty"`
	// How to handle the owner information in the title bar of the embeddable player.  Option descriptions:  * `hide` - Hide the owner info.  * `show` - Show the owner info.  * `user` - Enable the user to decide. 
	Owner *string `json:"owner,omitempty"`
	// How to handle the owner portrait in the title bar of the embeddable player.  Option descriptions:  * `hide` - Hide the portrait.  * `show` - Show the portrait.  * `user` - Enable the user to decide. 
	Portrait *string `json:"portrait,omitempty"`
}

// NewCreateEmbedPresetsAlt1RequestEmbedTitle instantiates a new CreateEmbedPresetsAlt1RequestEmbedTitle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEmbedPresetsAlt1RequestEmbedTitle() *CreateEmbedPresetsAlt1RequestEmbedTitle {
	this := CreateEmbedPresetsAlt1RequestEmbedTitle{}
	return &this
}

// NewCreateEmbedPresetsAlt1RequestEmbedTitleWithDefaults instantiates a new CreateEmbedPresetsAlt1RequestEmbedTitle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEmbedPresetsAlt1RequestEmbedTitleWithDefaults() *CreateEmbedPresetsAlt1RequestEmbedTitle {
	this := CreateEmbedPresetsAlt1RequestEmbedTitle{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) SetOwner(v string) {
	o.Owner = &v
}

// GetPortrait returns the Portrait field value if set, zero value otherwise.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) GetPortrait() string {
	if o == nil || IsNil(o.Portrait) {
		var ret string
		return ret
	}
	return *o.Portrait
}

// GetPortraitOk returns a tuple with the Portrait field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) GetPortraitOk() (*string, bool) {
	if o == nil || IsNil(o.Portrait) {
		return nil, false
	}
	return o.Portrait, true
}

// HasPortrait returns a boolean if a field has been set.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) HasPortrait() bool {
	if o != nil && !IsNil(o.Portrait) {
		return true
	}

	return false
}

// SetPortrait gets a reference to the given string and assigns it to the Portrait field.
func (o *CreateEmbedPresetsAlt1RequestEmbedTitle) SetPortrait(v string) {
	o.Portrait = &v
}

func (o CreateEmbedPresetsAlt1RequestEmbedTitle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEmbedPresetsAlt1RequestEmbedTitle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Portrait) {
		toSerialize["portrait"] = o.Portrait
	}
	return toSerialize, nil
}

type NullableCreateEmbedPresetsAlt1RequestEmbedTitle struct {
	value *CreateEmbedPresetsAlt1RequestEmbedTitle
	isSet bool
}

func (v NullableCreateEmbedPresetsAlt1RequestEmbedTitle) Get() *CreateEmbedPresetsAlt1RequestEmbedTitle {
	return v.value
}

func (v *NullableCreateEmbedPresetsAlt1RequestEmbedTitle) Set(val *CreateEmbedPresetsAlt1RequestEmbedTitle) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEmbedPresetsAlt1RequestEmbedTitle) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEmbedPresetsAlt1RequestEmbedTitle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEmbedPresetsAlt1RequestEmbedTitle(val *CreateEmbedPresetsAlt1RequestEmbedTitle) *NullableCreateEmbedPresetsAlt1RequestEmbedTitle {
	return &NullableCreateEmbedPresetsAlt1RequestEmbedTitle{value: val, isSet: true}
}

func (v NullableCreateEmbedPresetsAlt1RequestEmbedTitle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEmbedPresetsAlt1RequestEmbedTitle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


