/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the Segment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Segment{}

// Segment struct for Segment
type Segment struct {
	// Whether the segment is autogenerated.
	Autogenerated bool `json:"autogenerated"`
	// The cue end timestamp in milliseconds from the start of the video.
	CueEnd float32 `json:"cue_end"`
	// The cue start timestamp in milliseconds from the start of the video.
	CueStart float32 `json:"cue_start"`
	// Whether the segment is enabled.
	Enabled bool `json:"enabled"`
	// The segment identifier.
	Id string `json:"id"`
	// The type of caption that the segment originates from.  Option descriptions:  * `captions` - The segment originates from a captions file.  * `subtitles` - The segment originates from a captions and subtitles file.
	Kind string `json:"kind"`
	// The language of the segment.
	Language string `json:"language"`
	// The line data for the segment.
	Lines []SegmentLine `json:"lines"`
	// The speaker identifier.
	Speaker string `json:"speaker"`
	// The relative URI of the text track that the segment comes from.
	TextTrackUri string `json:"text_track_uri"`
	// The canonical relative URI of the segment's video.
	VideoUri *string `json:"video_uri,omitempty"`
	// The word data for the segment.
	Words []SegmentWords `json:"words"`
}

// NewSegment instantiates a new Segment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegment(autogenerated bool, cueEnd float32, cueStart float32, enabled bool, id string, kind string, language string, lines []SegmentLine, speaker string, textTrackUri string, words []SegmentWords) *Segment {
	this := Segment{}
	this.Autogenerated = autogenerated
	this.CueEnd = cueEnd
	this.CueStart = cueStart
	this.Enabled = enabled
	this.Id = id
	this.Kind = kind
	this.Language = language
	this.Lines = lines
	this.Speaker = speaker
	this.TextTrackUri = textTrackUri
	this.Words = words
	return &this
}

// NewSegmentWithDefaults instantiates a new Segment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentWithDefaults() *Segment {
	this := Segment{}
	return &this
}

// GetAutogenerated returns the Autogenerated field value
func (o *Segment) GetAutogenerated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Autogenerated
}

// GetAutogeneratedOk returns a tuple with the Autogenerated field value
// and a boolean to check if the value has been set.
func (o *Segment) GetAutogeneratedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Autogenerated, true
}

// SetAutogenerated sets field value
func (o *Segment) SetAutogenerated(v bool) {
	o.Autogenerated = v
}

// GetCueEnd returns the CueEnd field value
func (o *Segment) GetCueEnd() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CueEnd
}

// GetCueEndOk returns a tuple with the CueEnd field value
// and a boolean to check if the value has been set.
func (o *Segment) GetCueEndOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CueEnd, true
}

// SetCueEnd sets field value
func (o *Segment) SetCueEnd(v float32) {
	o.CueEnd = v
}

// GetCueStart returns the CueStart field value
func (o *Segment) GetCueStart() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CueStart
}

// GetCueStartOk returns a tuple with the CueStart field value
// and a boolean to check if the value has been set.
func (o *Segment) GetCueStartOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CueStart, true
}

// SetCueStart sets field value
func (o *Segment) SetCueStart(v float32) {
	o.CueStart = v
}

// GetEnabled returns the Enabled field value
func (o *Segment) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *Segment) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *Segment) SetEnabled(v bool) {
	o.Enabled = v
}

// GetId returns the Id field value
func (o *Segment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Segment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Segment) SetId(v string) {
	o.Id = v
}

// GetKind returns the Kind field value
func (o *Segment) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *Segment) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *Segment) SetKind(v string) {
	o.Kind = v
}

// GetLanguage returns the Language field value
func (o *Segment) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *Segment) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *Segment) SetLanguage(v string) {
	o.Language = v
}

// GetLines returns the Lines field value
func (o *Segment) GetLines() []SegmentLine {
	if o == nil {
		var ret []SegmentLine
		return ret
	}

	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value
// and a boolean to check if the value has been set.
func (o *Segment) GetLinesOk() ([]SegmentLine, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lines, true
}

// SetLines sets field value
func (o *Segment) SetLines(v []SegmentLine) {
	o.Lines = v
}

// GetSpeaker returns the Speaker field value
func (o *Segment) GetSpeaker() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Speaker
}

// GetSpeakerOk returns a tuple with the Speaker field value
// and a boolean to check if the value has been set.
func (o *Segment) GetSpeakerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Speaker, true
}

// SetSpeaker sets field value
func (o *Segment) SetSpeaker(v string) {
	o.Speaker = v
}

// GetTextTrackUri returns the TextTrackUri field value
func (o *Segment) GetTextTrackUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TextTrackUri
}

// GetTextTrackUriOk returns a tuple with the TextTrackUri field value
// and a boolean to check if the value has been set.
func (o *Segment) GetTextTrackUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TextTrackUri, true
}

// SetTextTrackUri sets field value
func (o *Segment) SetTextTrackUri(v string) {
	o.TextTrackUri = v
}

// GetVideoUri returns the VideoUri field value if set, zero value otherwise.
func (o *Segment) GetVideoUri() string {
	if o == nil || IsNil(o.VideoUri) {
		var ret string
		return ret
	}
	return *o.VideoUri
}

// GetVideoUriOk returns a tuple with the VideoUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Segment) GetVideoUriOk() (*string, bool) {
	if o == nil || IsNil(o.VideoUri) {
		return nil, false
	}
	return o.VideoUri, true
}

// HasVideoUri returns a boolean if a field has been set.
func (o *Segment) HasVideoUri() bool {
	if o != nil && !IsNil(o.VideoUri) {
		return true
	}

	return false
}

// SetVideoUri gets a reference to the given string and assigns it to the VideoUri field.
func (o *Segment) SetVideoUri(v string) {
	o.VideoUri = &v
}

// GetWords returns the Words field value
func (o *Segment) GetWords() []SegmentWords {
	if o == nil {
		var ret []SegmentWords
		return ret
	}

	return o.Words
}

// GetWordsOk returns a tuple with the Words field value
// and a boolean to check if the value has been set.
func (o *Segment) GetWordsOk() ([]SegmentWords, bool) {
	if o == nil {
		return nil, false
	}
	return o.Words, true
}

// SetWords sets field value
func (o *Segment) SetWords(v []SegmentWords) {
	o.Words = v
}

func (o Segment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Segment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["autogenerated"] = o.Autogenerated
	toSerialize["cue_end"] = o.CueEnd
	toSerialize["cue_start"] = o.CueStart
	toSerialize["enabled"] = o.Enabled
	toSerialize["id"] = o.Id
	toSerialize["kind"] = o.Kind
	toSerialize["language"] = o.Language
	toSerialize["lines"] = o.Lines
	toSerialize["speaker"] = o.Speaker
	toSerialize["text_track_uri"] = o.TextTrackUri
	if !IsNil(o.VideoUri) {
		toSerialize["video_uri"] = o.VideoUri
	}
	toSerialize["words"] = o.Words
	return toSerialize, nil
}

type NullableSegment struct {
	value *Segment
	isSet bool
}

func (v NullableSegment) Get() *Segment {
	return v.value
}

func (v *NullableSegment) Set(val *Segment) {
	v.value = val
	v.isSet = true
}

func (v NullableSegment) IsSet() bool {
	return v.isSet
}

func (v *NullableSegment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegment(val *Segment) *NullableSegment {
	return &NullableSegment{value: val, isSet: true}
}

func (v NullableSegment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
