/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the OnDemandVideoMetadataConnections type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnDemandVideoMetadataConnections{}

// OnDemandVideoMetadataConnections struct for OnDemandVideoMetadataConnections
type OnDemandVideoMetadataConnections struct {
	Season OnDemandVideoMetadataConnectionsSeason `json:"season"`
}

// NewOnDemandVideoMetadataConnections instantiates a new OnDemandVideoMetadataConnections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnDemandVideoMetadataConnections(season OnDemandVideoMetadataConnectionsSeason) *OnDemandVideoMetadataConnections {
	this := OnDemandVideoMetadataConnections{}
	this.Season = season
	return &this
}

// NewOnDemandVideoMetadataConnectionsWithDefaults instantiates a new OnDemandVideoMetadataConnections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnDemandVideoMetadataConnectionsWithDefaults() *OnDemandVideoMetadataConnections {
	this := OnDemandVideoMetadataConnections{}
	return &this
}

// GetSeason returns the Season field value
func (o *OnDemandVideoMetadataConnections) GetSeason() OnDemandVideoMetadataConnectionsSeason {
	if o == nil {
		var ret OnDemandVideoMetadataConnectionsSeason
		return ret
	}

	return o.Season
}

// GetSeasonOk returns a tuple with the Season field value
// and a boolean to check if the value has been set.
func (o *OnDemandVideoMetadataConnections) GetSeasonOk() (*OnDemandVideoMetadataConnectionsSeason, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Season, true
}

// SetSeason sets field value
func (o *OnDemandVideoMetadataConnections) SetSeason(v OnDemandVideoMetadataConnectionsSeason) {
	o.Season = v
}

func (o OnDemandVideoMetadataConnections) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnDemandVideoMetadataConnections) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["season"] = o.Season
	return toSerialize, nil
}

type NullableOnDemandVideoMetadataConnections struct {
	value *OnDemandVideoMetadataConnections
	isSet bool
}

func (v NullableOnDemandVideoMetadataConnections) Get() *OnDemandVideoMetadataConnections {
	return v.value
}

func (v *NullableOnDemandVideoMetadataConnections) Set(val *OnDemandVideoMetadataConnections) {
	v.value = val
	v.isSet = true
}

func (v NullableOnDemandVideoMetadataConnections) IsSet() bool {
	return v.isSet
}

func (v *NullableOnDemandVideoMetadataConnections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnDemandVideoMetadataConnections(val *OnDemandVideoMetadataConnections) *NullableOnDemandVideoMetadataConnections {
	return &NullableOnDemandVideoMetadataConnections{value: val, isSet: true}
}

func (v NullableOnDemandVideoMetadataConnections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnDemandVideoMetadataConnections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


