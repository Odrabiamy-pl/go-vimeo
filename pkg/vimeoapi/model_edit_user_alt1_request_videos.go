/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the EditUserAlt1RequestVideos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditUserAlt1RequestVideos{}

// EditUserAlt1RequestVideos struct for EditUserAlt1RequestVideos
type EditUserAlt1RequestVideos struct {
	Privacy *EditUserAlt1RequestVideosPrivacy `json:"privacy,omitempty"`
}

// NewEditUserAlt1RequestVideos instantiates a new EditUserAlt1RequestVideos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditUserAlt1RequestVideos() *EditUserAlt1RequestVideos {
	this := EditUserAlt1RequestVideos{}
	return &this
}

// NewEditUserAlt1RequestVideosWithDefaults instantiates a new EditUserAlt1RequestVideos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditUserAlt1RequestVideosWithDefaults() *EditUserAlt1RequestVideos {
	this := EditUserAlt1RequestVideos{}
	return &this
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *EditUserAlt1RequestVideos) GetPrivacy() EditUserAlt1RequestVideosPrivacy {
	if o == nil || IsNil(o.Privacy) {
		var ret EditUserAlt1RequestVideosPrivacy
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditUserAlt1RequestVideos) GetPrivacyOk() (*EditUserAlt1RequestVideosPrivacy, bool) {
	if o == nil || IsNil(o.Privacy) {
		return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *EditUserAlt1RequestVideos) HasPrivacy() bool {
	if o != nil && !IsNil(o.Privacy) {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given EditUserAlt1RequestVideosPrivacy and assigns it to the Privacy field.
func (o *EditUserAlt1RequestVideos) SetPrivacy(v EditUserAlt1RequestVideosPrivacy) {
	o.Privacy = &v
}

func (o EditUserAlt1RequestVideos) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditUserAlt1RequestVideos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Privacy) {
		toSerialize["privacy"] = o.Privacy
	}
	return toSerialize, nil
}

type NullableEditUserAlt1RequestVideos struct {
	value *EditUserAlt1RequestVideos
	isSet bool
}

func (v NullableEditUserAlt1RequestVideos) Get() *EditUserAlt1RequestVideos {
	return v.value
}

func (v *NullableEditUserAlt1RequestVideos) Set(val *EditUserAlt1RequestVideos) {
	v.value = val
	v.isSet = true
}

func (v NullableEditUserAlt1RequestVideos) IsSet() bool {
	return v.isSet
}

func (v *NullableEditUserAlt1RequestVideos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditUserAlt1RequestVideos(val *EditUserAlt1RequestVideos) *NullableEditUserAlt1RequestVideos {
	return &NullableEditUserAlt1RequestVideos{value: val, isSet: true}
}

func (v NullableEditUserAlt1RequestVideos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditUserAlt1RequestVideos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
