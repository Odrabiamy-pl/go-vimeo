/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the EditChannelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditChannelRequest{}

// EditChannelRequest struct for EditChannelRequest
type EditChannelRequest struct {
	// The description of the channel.
	Description *string `json:"description,omitempty"`
	// The link to access the channel. You can use a custom name in the URL in place of a numeric channel ID, as in `/channels/{url_custom}`. Submitting `\"\"` for this field removes the link alias.
	Link *string `json:"link,omitempty"`
	// The name of the channel.
	Name *string `json:"name,omitempty"`
	// The privacy level of the channel.  Option descriptions:  * `anybody` - Anyone can access the channel.  * `moderators` - Only moderators can access the channel.  * `users` - Only moderators and designated users can access the channel.
	Privacy *string `json:"privacy,omitempty"`
}

// NewEditChannelRequest instantiates a new EditChannelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditChannelRequest() *EditChannelRequest {
	this := EditChannelRequest{}
	return &this
}

// NewEditChannelRequestWithDefaults instantiates a new EditChannelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditChannelRequestWithDefaults() *EditChannelRequest {
	this := EditChannelRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EditChannelRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditChannelRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EditChannelRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EditChannelRequest) SetDescription(v string) {
	o.Description = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *EditChannelRequest) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditChannelRequest) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *EditChannelRequest) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *EditChannelRequest) SetLink(v string) {
	o.Link = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EditChannelRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditChannelRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EditChannelRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EditChannelRequest) SetName(v string) {
	o.Name = &v
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *EditChannelRequest) GetPrivacy() string {
	if o == nil || IsNil(o.Privacy) {
		var ret string
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditChannelRequest) GetPrivacyOk() (*string, bool) {
	if o == nil || IsNil(o.Privacy) {
		return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *EditChannelRequest) HasPrivacy() bool {
	if o != nil && !IsNil(o.Privacy) {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given string and assigns it to the Privacy field.
func (o *EditChannelRequest) SetPrivacy(v string) {
	o.Privacy = &v
}

func (o EditChannelRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditChannelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Privacy) {
		toSerialize["privacy"] = o.Privacy
	}
	return toSerialize, nil
}

type NullableEditChannelRequest struct {
	value *EditChannelRequest
	isSet bool
}

func (v NullableEditChannelRequest) Get() *EditChannelRequest {
	return v.value
}

func (v *NullableEditChannelRequest) Set(val *EditChannelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEditChannelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEditChannelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditChannelRequest(val *EditChannelRequest) *NullableEditChannelRequest {
	return &NullableEditChannelRequest{value: val, isSet: true}
}

func (v NullableEditChannelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditChannelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
