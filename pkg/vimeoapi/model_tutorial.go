/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the Tutorial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Tutorial{}

// Tutorial struct for Tutorial
type Tutorial struct {
	// The success message.
	Message string `json:"message"`
	// The link to the next tutorial.
	NextStepsLink string `json:"next_steps_link"`
	// Whether the current access token is authenticated.
	TokenIsAuthenticated bool `json:"token_is_authenticated"`
}

// NewTutorial instantiates a new Tutorial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTutorial(message string, nextStepsLink string, tokenIsAuthenticated bool) *Tutorial {
	this := Tutorial{}
	this.Message = message
	this.NextStepsLink = nextStepsLink
	this.TokenIsAuthenticated = tokenIsAuthenticated
	return &this
}

// NewTutorialWithDefaults instantiates a new Tutorial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTutorialWithDefaults() *Tutorial {
	this := Tutorial{}
	return &this
}

// GetMessage returns the Message field value
func (o *Tutorial) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *Tutorial) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *Tutorial) SetMessage(v string) {
	o.Message = v
}

// GetNextStepsLink returns the NextStepsLink field value
func (o *Tutorial) GetNextStepsLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextStepsLink
}

// GetNextStepsLinkOk returns a tuple with the NextStepsLink field value
// and a boolean to check if the value has been set.
func (o *Tutorial) GetNextStepsLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextStepsLink, true
}

// SetNextStepsLink sets field value
func (o *Tutorial) SetNextStepsLink(v string) {
	o.NextStepsLink = v
}

// GetTokenIsAuthenticated returns the TokenIsAuthenticated field value
func (o *Tutorial) GetTokenIsAuthenticated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TokenIsAuthenticated
}

// GetTokenIsAuthenticatedOk returns a tuple with the TokenIsAuthenticated field value
// and a boolean to check if the value has been set.
func (o *Tutorial) GetTokenIsAuthenticatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenIsAuthenticated, true
}

// SetTokenIsAuthenticated sets field value
func (o *Tutorial) SetTokenIsAuthenticated(v bool) {
	o.TokenIsAuthenticated = v
}

func (o Tutorial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Tutorial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	toSerialize["next_steps_link"] = o.NextStepsLink
	toSerialize["token_is_authenticated"] = o.TokenIsAuthenticated
	return toSerialize, nil
}

type NullableTutorial struct {
	value *Tutorial
	isSet bool
}

func (v NullableTutorial) Get() *Tutorial {
	return v.value
}

func (v *NullableTutorial) Set(val *Tutorial) {
	v.value = val
	v.isSet = true
}

func (v NullableTutorial) IsSet() bool {
	return v.isSet
}

func (v *NullableTutorial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTutorial(val *Tutorial) *NullableTutorial {
	return &NullableTutorial{value: val, isSet: true}
}

func (v NullableTutorial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTutorial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
