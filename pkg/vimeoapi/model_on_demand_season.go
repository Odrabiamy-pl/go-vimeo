/*
Vimeo API

Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

API version: 3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vimeoapi

import (
	"encoding/json"
)

// checks if the OnDemandSeason type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnDemandSeason{}

// OnDemandSeason struct for OnDemandSeason
type OnDemandSeason struct {
	// The description of the season.
	Description string `json:"description"`
	Metadata OnDemandSeasonMetadata `json:"metadata"`
	// The name of the season.
	Name string `json:"name"`
	// The position of the season relative to other seasons in the series.
	Position float32 `json:"position"`
	// The unique identifier of the On Demand season.
	ResourceKey string `json:"resource_key"`
	// The type of the season.
	Type string `json:"type"`
	// The season container's relative URI.
	Uri string `json:"uri"`
	User NullableOnDemandSeasonUser `json:"user"`
}

// NewOnDemandSeason instantiates a new OnDemandSeason object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnDemandSeason(description string, metadata OnDemandSeasonMetadata, name string, position float32, resourceKey string, type_ string, uri string, user NullableOnDemandSeasonUser) *OnDemandSeason {
	this := OnDemandSeason{}
	this.Description = description
	this.Metadata = metadata
	this.Name = name
	this.Position = position
	this.ResourceKey = resourceKey
	this.Type = type_
	this.Uri = uri
	this.User = user
	return &this
}

// NewOnDemandSeasonWithDefaults instantiates a new OnDemandSeason object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnDemandSeasonWithDefaults() *OnDemandSeason {
	this := OnDemandSeason{}
	return &this
}

// GetDescription returns the Description field value
func (o *OnDemandSeason) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *OnDemandSeason) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *OnDemandSeason) SetDescription(v string) {
	o.Description = v
}

// GetMetadata returns the Metadata field value
func (o *OnDemandSeason) GetMetadata() OnDemandSeasonMetadata {
	if o == nil {
		var ret OnDemandSeasonMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *OnDemandSeason) GetMetadataOk() (*OnDemandSeasonMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *OnDemandSeason) SetMetadata(v OnDemandSeasonMetadata) {
	o.Metadata = v
}

// GetName returns the Name field value
func (o *OnDemandSeason) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OnDemandSeason) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OnDemandSeason) SetName(v string) {
	o.Name = v
}

// GetPosition returns the Position field value
func (o *OnDemandSeason) GetPosition() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *OnDemandSeason) GetPositionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *OnDemandSeason) SetPosition(v float32) {
	o.Position = v
}

// GetResourceKey returns the ResourceKey field value
func (o *OnDemandSeason) GetResourceKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceKey
}

// GetResourceKeyOk returns a tuple with the ResourceKey field value
// and a boolean to check if the value has been set.
func (o *OnDemandSeason) GetResourceKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceKey, true
}

// SetResourceKey sets field value
func (o *OnDemandSeason) SetResourceKey(v string) {
	o.ResourceKey = v
}

// GetType returns the Type field value
func (o *OnDemandSeason) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OnDemandSeason) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OnDemandSeason) SetType(v string) {
	o.Type = v
}

// GetUri returns the Uri field value
func (o *OnDemandSeason) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *OnDemandSeason) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *OnDemandSeason) SetUri(v string) {
	o.Uri = v
}

// GetUser returns the User field value
// If the value is explicit nil, the zero value for OnDemandSeasonUser will be returned
func (o *OnDemandSeason) GetUser() OnDemandSeasonUser {
	if o == nil || o.User.Get() == nil {
		var ret OnDemandSeasonUser
		return ret
	}

	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnDemandSeason) GetUserOk() (*OnDemandSeasonUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// SetUser sets field value
func (o *OnDemandSeason) SetUser(v OnDemandSeasonUser) {
	o.User.Set(&v)
}

func (o OnDemandSeason) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnDemandSeason) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["metadata"] = o.Metadata
	toSerialize["name"] = o.Name
	toSerialize["position"] = o.Position
	toSerialize["resource_key"] = o.ResourceKey
	toSerialize["type"] = o.Type
	toSerialize["uri"] = o.Uri
	toSerialize["user"] = o.User.Get()
	return toSerialize, nil
}

type NullableOnDemandSeason struct {
	value *OnDemandSeason
	isSet bool
}

func (v NullableOnDemandSeason) Get() *OnDemandSeason {
	return v.value
}

func (v *NullableOnDemandSeason) Set(val *OnDemandSeason) {
	v.value = val
	v.isSet = true
}

func (v NullableOnDemandSeason) IsSet() bool {
	return v.isSet
}

func (v *NullableOnDemandSeason) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnDemandSeason(val *OnDemandSeason) *NullableOnDemandSeason {
	return &NullableOnDemandSeason{value: val, isSet: true}
}

func (v NullableOnDemandSeason) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnDemandSeason) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


